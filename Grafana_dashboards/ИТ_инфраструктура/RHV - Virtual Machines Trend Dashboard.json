{
    "annotations": {
        "list": [
            {
                "builtIn": 1,
                "datasource": "-- Grafana --",
                "enable": true,
                "hide": true,
                "iconColor": "rgba(0, 211, 255, 1)",
                "name": "Annotations & Alerts",
                "type": "dashboard"
            }
        ]
    },
    "description": "\u042d\u043a\u0440\u0430\u043d \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430 \u0442\u0435\u043d\u0434\u0435\u043d\u0446\u0438\u0439 \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 \u0441 \u0442\u0435\u0447\u0435\u043d\u0438\u0435\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0438 - \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432\u0432\u043e\u0434\u0430-\u0432\u044b\u0432\u043e\u0434\u0430 \u043d\u0430 \u0434\u0438\u0441\u043a\u0435, \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440, \u043f\u0430\u043c\u044f\u0442\u044c \u0438 \u0441\u0435\u0442\u044c Tx/Rx. \u041e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439:  \u0410\u043b\u044c\u0431\u0435\u0449\u0435\u043d\u043a\u043e \u041c.\u041d. (\u0410\u0426\u041e\u0414)",
    "editable": true,
    "gnetId": null,
    "graphTooltip": 0,
    "id": 1451,
    "iteration": 1630846335951,
    "links": [
        {
            "asDropdown": true,
            "icon": "external link",
            "keepTime": true,
            "tags": [
                "RHV"
            ],
            "type": "dashboards"
        }
    ],
    "panels": [
        {
            "collapsed": false,
            "datasource": "oVirt DWH",
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 0
            },
            "id": 23,
            "panels": [],
            "title": "Reports",
            "type": "row"
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "oVirt DWH",
            "description": "This report displays average CPU usage and peaks for a selected virtual machine over a selected period.",
            "fieldConfig": {
                "defaults": {
                    "custom": {},
                    "links": []
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 1
            },
            "hiddenSeries": false,
            "id": 19,
            "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "7.4.0",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR10A - This query returns the\n-- VMs CPU usage over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT\n    $__time(time),\n    CPU_Usage AS \"CPU Usage\"\nFROM \n    (\n        -- Here we get the vms Max and Average CPU Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( cpu_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Usage\n        FROM v4_4_statistics_vms_resources_usage_samples AS samples\n        WHERE\n            -- Here we filter by active vms only\n            samples.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND samples.vm_id IN ($vm_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY time, CPU_Usage\nORDER BY time",
                    "refId": "A",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                },
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR10A - This query returns the\n-- VMs max and average CPU usage peaks\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT\n    $__time(time),\n    CPU_Usage AS \"CPU Usage\",\n    CPU_Peak AS \"CPU Peak\"\nFROM \n    (\n        -- Here we get the vms Max and Average CPU Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( cpu_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Usage,\n            SUM ( COALESCE ( max_cpu_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Peak\n        FROM \n            (\n                    SELECT history_datetime, cpu_usage_percent, minutes_in_status, max_cpu_usage, vm_status, vm_id\n                    FROM v4_4_statistics_vms_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, cpu_usage_percent, minutes_in_status, max_cpu_usage, vm_status, vm_id\n                    FROM v4_4_statistics_vms_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_vms_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n        WHERE\n            -- Here we filter by active vms only\n            hourly_daily.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND hourly_daily.vm_id IN ($vm_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY time, CPU_Usage, CPU_Peak\nORDER BY time",
                    "refId": "B",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Average CPU Usage and Peaks (over time) (BR10A)",
            "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:32941",
                    "decimals": 1,
                    "format": "percent",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "$$hashKey": "object:32942",
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "oVirt DWH",
            "description": "This report displays average memory usage and peaks for a selected virtual machine over a selected period.",
            "fieldConfig": {
                "defaults": {
                    "custom": {},
                    "links": []
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 1
            },
            "hiddenSeries": false,
            "id": 15,
            "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "7.4.0",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR10A - This query returns the\n-- VMs memory usage over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT\n    $__time(time),\n    MEM_Usage AS \"Memory Usage\"\nFROM \n    (\n        -- VMs Max and Average MEMory Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( memory_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Usage\n        FROM v4_4_statistics_vms_resources_usage_samples AS samples\n        WHERE\n            -- Here we filter by active vms only\n            samples.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND samples.vm_id IN ($vm_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY time, MEM_Usage\nORDER BY time",
                    "refId": "A",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                },
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR10A - This query returns the\n-- VMs max and Average memory usage peaks\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT\n    $__time(time),\n    MEM_Usage AS \"Memory Usage\",\n    MEM_Peak AS \"Memory Peak\"\nFROM \n    (\n        -- VMs Max and Average MEMory Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( memory_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Usage,\n            SUM ( COALESCE ( max_memory_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Peak\n        FROM\n            ( \n                    SELECT history_datetime, memory_usage_percent, minutes_in_status, max_memory_usage, vm_status, vm_id\n                    FROM v4_4_statistics_vms_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, memory_usage_percent, minutes_in_status, max_memory_usage, vm_status, vm_id\n                    FROM v4_4_statistics_vms_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_vms_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n        WHERE\n            -- Here we filter by active vms only\n            hourly_daily.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND hourly_daily.vm_id IN ($vm_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY time, MEM_Usage, MEM_Peak\nORDER BY time",
                    "refId": "B",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Average Memory Usage and Peaks (over time) (BR10A)",
            "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:89",
                    "decimals": 1,
                    "format": "percent",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "$$hashKey": "object:90",
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "oVirt DWH",
            "description": "This report displays average disk read and write rates for a selected virtual machine over a selected period.",
            "fieldConfig": {
                "defaults": {
                    "custom": {},
                    "links": []
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 9
            },
            "hiddenSeries": false,
            "id": 17,
            "legend": {
                "alignAsTable": false,
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": false
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "7.4.0",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR10A - This query returns the\n-- VMs Disk Read_Rate, Write_Rate Usage\n-- over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n    (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t) AS disk_and_vm_name,\n    AVG ( Read_Rate ) AS \"Read Rate\",\n    AVG ( Write_Rate ) AS \"Write Rate\"\nFROM \n    (\n        SELECT\n            CASE\n                WHEN v4_4_configuration_history_vms_disks.delete_date IS NULL\n                    THEN vm_disk_name\n                ELSE vm_disk_name\n            ||\n            '*'\n            END AS disk_name,\n            CASE\n                WHEN MAX (v4_4_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS Time,\n            AVG ( ROUND ( CAST ( COALESCE ( read_rate_bytes_per_second, 0 ) AS FLOAT ) :: numeric / ( 1024 * 1024 ), 1 ) ) AS Read_Rate,\n            AVG ( ROUND ( CAST ( COALESCE ( write_rate_bytes_per_second, 0 ) AS FLOAT ) :: numeric / ( 1024 * 1024 ), 1 ) ) AS Write_Rate\n        FROM v4_4_statistics_vms_disks_resources_usage_samples AS statistics\n            INNER JOIN v4_4_configuration_history_vms_disks\n                ON \n                    (\n                        v4_4_configuration_history_vms_disks.vm_disk_id =\n                        statistics.vm_disk_id\n                    )\n\t\t        INNER JOIN v4_4_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_4_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_disk_id\n\t\t\t\t\t\t            AND v4_4_configuration_history_vms_devices.type = 'disk'\n\t\t\t\t\t          )\n\t\t        INNER JOIN v4_4_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_4_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_4_configuration_history_vms_devices.vm_id\n\t\t\t\t\t          )\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we filter by the latest vms_disks  configuration\n            AND v4_4_configuration_history_vms_disks.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms_disks AS a\n                        GROUP BY a.vm_disk_id\n                    )\n            AND v4_4_configuration_history_vms_disks.vm_disk_id \n                IN \n                    (\n                        SELECT c.vm_disk_id\n                        FROM \n                            v4_4_statistics_vms_disks_resources_usage_samples AS b\n                            INNER JOIN v4_4_configuration_history_vms_disks AS c\n                                ON \n                                    (\n                                        c.vm_disk_id = \n                                        b.vm_disk_id\n                                    )\n                            WHERE\n                                -- Here we filter by active vms disks only\n                                b.vm_disk_status = 1\n                                AND c.vm_disk_id \n                                    IN \n                                        (\n                                            SELECT device_id\n                                            FROM \n                                                v4_4_configuration_history_vms_devices\n                                                INNER JOIN \n                                                v4_4_statistics_vms_resources_usage_samples AS samples\n                                                    ON\n                                                        (\n                                                            samples.vm_configuration_version =\n                                                            v4_4_configuration_history_vms_devices.vm_configuration_version\n                                                        )\n                                            WHERE\n                                                -- Here we filter by active vms only\n                                                samples.vm_status = 1\n                                                -- Here we filter by the vm chosen by the user\n                                                AND v4_4_configuration_history_vms_devices.vm_id IN ($vm_id)\n                                                AND create_date < $__timeTo()\n                                                AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                                -- Here we get the latest vm_devices configuration\n                                                AND v4_4_configuration_history_vms_devices.history_id \n                                                    IN \n                                                        (\n                                                            SELECT MAX ( a.history_id )\n                                                            FROM v4_4_configuration_history_vms_devices a\n                                                            GROUP BY a.vm_id, a.device_id\n                                                        )\n                                                -- Here we get or remove deleted VM devices according to what the user chose\n                                                -- in the \"show_deleted\" parameter.\n                                                AND\n                                                    CASE\n                                                        WHEN '$show_deleted'='Yes'\n                                                            THEN 1=1\n                                                        WHEN '$show_deleted'='No'\n                                                            THEN delete_date isnull\n                                                    END\n                                        )\n                                AND history_datetime >= $__timeFrom()\n                                AND history_datetime < $__timeTo()\n                                -- Here we get the latest vm_disks configuration\n                                AND c.history_id \n                                    IN \n                                        (\n                                            SELECT MAX ( d.history_id )\n                                            FROM  v4_4_configuration_history_vms_disks AS d\n                                            GROUP BY d.vm_disk_id\n                                        )\n                                -- Here we get or remove deleted VM disks according to what the user chose\n                                -- in the \"show_deleted\" parameter.\n                                AND\n                                    CASE\n                                        WHEN '$show_deleted'='Yes'\n                                            THEN 1=1\n                                        WHEN '$show_deleted'='No'\n                                            THEN delete_date isnull\n                                    END\n                            GROUP BY c.vm_disk_id\n                            -- Here we sort by the disks that have the max read and write rate.\n                            ORDER BY \n                                AVG ( ROUND ( CAST ( COALESCE ( b.read_rate_bytes_per_second, 0 ) AS FLOAT ) :: numeric, 1 ) ) +\n                                AVG ( ROUND ( CAST ( COALESCE ( b.write_rate_bytes_per_second, 0 ) AS FLOAT ) :: numeric, 1 ) ) \n                                DESC\n                            LIMIT 5\n                    )\n                -- Here we get or remove deleted entities according to what the user chose\n                -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_4_configuration_history_vms_disks.delete_date isnull\n                END\n        GROUP BY statistics.vm_disk_id, disk_name, history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, disk_name, vm_name\nORDER BY\n    all_sub_queries.time,\n    AVG ( Read_Rate ) DESC,\n    AVG ( Write_Rate ) DESC,\n    CONCAT\n\t  (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t)",
                    "refId": "A",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                },
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR10A - This query returns the\n-- VMs Disk Read_Rate, Write_Rate Usage\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n\t    (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t) AS disk_and_vm_name,\n    AVG ( Read_Rate ) AS \"Read Rate\",\n    AVG ( Write_Rate ) AS \"Write Rate\"\nFROM \n    (\n        SELECT\n            CASE\n                WHEN v4_4_configuration_history_vms_disks.delete_date IS NULL\n                    THEN vm_disk_name\n                ELSE vm_disk_name\n            ||\n            '*'\n            END AS disk_name,\n            CASE\n                WHEN MAX (v4_4_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS Time,\n            AVG ( ROUND ( CAST ( COALESCE ( read_rate_bytes_per_second, 0 ) AS FLOAT ) :: numeric / ( 1024 * 1024 ), 1 ) ) AS Read_Rate,\n            AVG ( ROUND ( CAST ( COALESCE ( write_rate_bytes_per_second, 0 ) AS FLOAT ) :: numeric / ( 1024 * 1024 ), 1 ) ) AS Write_Rate\n        FROM \n            (\n                    SELECT history_datetime, vm_disk_id, read_rate_bytes_per_second, write_rate_bytes_per_second \n                    FROM v4_4_statistics_vms_disks_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_disk_id, read_rate_bytes_per_second, write_rate_bytes_per_second \n                    FROM v4_4_statistics_vms_disks_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_vms_disks_resources_usage_hourly\n                            )\n            ) AS statistics\n            INNER JOIN v4_4_configuration_history_vms_disks\n                ON \n                    (\n                        v4_4_configuration_history_vms_disks.vm_disk_id =\n                        statistics.vm_disk_id\n                    )\n\t\t        INNER JOIN v4_4_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_4_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_disk_id\n\t\t\t\t\t\t            AND v4_4_configuration_history_vms_devices.type = 'disk'\n\t\t\t\t\t          )\n\t\t        INNER JOIN v4_4_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_4_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_4_configuration_history_vms_devices.vm_id\n\t\t\t\t\t          )\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we filter by the latest vms_disks  configuration\n            AND v4_4_configuration_history_vms_disks.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms_disks AS a\n                        GROUP BY a.vm_disk_id\n                    )\n            AND v4_4_configuration_history_vms_disks.vm_disk_id \n                IN \n                    (\n                        SELECT c.vm_disk_id\n                        FROM\n                            (\n                                    SELECT history_datetime, vm_disk_id, vm_disk_status, read_rate_bytes_per_second, write_rate_bytes_per_second \n                                    FROM v4_4_statistics_vms_disks_resources_usage_hourly \n                                UNION\n                                    SELECT history_datetime, vm_disk_id, vm_disk_status, read_rate_bytes_per_second, write_rate_bytes_per_second\n                                    FROM v4_4_statistics_vms_disks_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_vms_disks_resources_usage_hourly\n                                            )\n                            ) AS b\n                            INNER JOIN v4_4_configuration_history_vms_disks AS c\n                                ON \n                                    (\n                                        c.vm_disk_id = \n                                        b.vm_disk_id\n                                    )\n                            WHERE\n                                -- Here we filter by active vms disks only\n                                b.vm_disk_status = 1\n                                AND c.vm_disk_id \n                                    IN \n                                        (\n                                            SELECT device_id\n                                            FROM \n                                                v4_4_configuration_history_vms_devices\n                                                INNER JOIN\n                                                (\n                                                        SELECT history_datetime, vm_configuration_version, vm_status\n                                                        FROM v4_4_statistics_vms_resources_usage_hourly\n                                                    UNION\n                                                        SELECT history_datetime, vm_configuration_version, vm_status\n                                                        FROM v4_4_statistics_vms_resources_usage_daily\n                                                        WHERE\n                                                            history_datetime <\n                                                                (\n                                                                    SELECT MIN ( history_datetime )\n                                                                    FROM v4_4_statistics_vms_resources_usage_hourly\n                                                                )\n                                                ) AS hourly_daily\n                                                    ON\n                                                        (\n                                                            hourly_daily.vm_configuration_version =\n                                                            v4_4_configuration_history_vms_devices.vm_configuration_version\n                                                        )\n                                            WHERE\n                                                -- Here we filter by active vms only\n                                                hourly_daily.vm_status = 1\n                                                -- Here we filter by the vm chosen by the user\n                                                AND v4_4_configuration_history_vms_devices.vm_id IN ($vm_id)\n                                                AND create_date < $__timeTo()\n                                                AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                                -- Here we get the latest vm_devices configuration\n                                                AND v4_4_configuration_history_vms_devices.history_id \n                                                    IN \n                                                        (\n                                                            SELECT MAX ( a.history_id )\n                                                            FROM v4_4_configuration_history_vms_devices a\n                                                            GROUP BY a.vm_id, a.device_id\n                                                        )\n                                                -- Here we get or remove deleted VM devices according to what the user chose\n                                                -- in the \"show_deleted\" parameter.\n                                                AND\n                                                    CASE\n                                                        WHEN '$show_deleted'='Yes'\n                                                            THEN 1=1\n                                                        WHEN '$show_deleted'='No'\n                                                            THEN delete_date isnull\n                                                    END\n                                        )\n                                AND history_datetime >= $__timeFrom()\n                                AND history_datetime < $__timeTo()\n                                -- Here we get the latest vm_disks configuration\n                                AND c.history_id \n                                    IN \n                                        (\n                                            SELECT MAX ( d.history_id )\n                                            FROM  v4_4_configuration_history_vms_disks AS d\n                                            GROUP BY d.vm_disk_id\n                                        )\n                                -- Here we get or remove deleted VM disks according to what the user chose\n                                -- in the \"show_deleted\" parameter.\n                                AND\n                                    CASE\n                                        WHEN '$show_deleted'='Yes'\n                                            THEN 1=1\n                                        WHEN '$show_deleted'='No'\n                                            THEN delete_date isnull\n                                    END\n                            GROUP BY c.vm_disk_id\n                            -- Here we sort by the disks that have the max read and write rate.\n                            ORDER BY \n                                AVG ( ROUND ( CAST ( COALESCE ( b.read_rate_bytes_per_second, 0 ) AS FLOAT ) :: numeric, 1 ) ) +\n                                AVG ( ROUND ( CAST ( COALESCE ( b.write_rate_bytes_per_second, 0 ) AS FLOAT ) :: numeric, 1 ) ) \n                                DESC\n                            LIMIT 5\n                    )\n                -- Here we get or remove deleted entities according to what the user chose\n                -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_4_configuration_history_vms_disks.delete_date isnull\n                END\n        GROUP BY statistics.vm_disk_id, disk_name, history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, disk_name, vm_name\nORDER BY\n    all_sub_queries.time,\n    AVG ( Read_Rate ) DESC,\n    AVG ( Write_Rate ) DESC,\n    CONCAT\n    (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t)",
                    "refId": "B",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Top 5 Most Utilized Disks Read and Write Rates (over time) (BR10A)",
            "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "decimals": 1,
                    "format": "MBs",
                    "label": "",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "oVirt DWH",
            "description": "This report displays average disk read and write operations per second for a selected virtual machine over a selected period.",
            "fieldConfig": {
                "defaults": {
                    "custom": {},
                    "links": []
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 9
            },
            "hiddenSeries": false,
            "id": 26,
            "legend": {
                "alignAsTable": false,
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": false
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "7.4.0",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR10A - This query returns the\n-- VMs Disk Read_ops, Write_ops Usage\n-- over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n    (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t) AS disk_and_vm_name,\n    AVG ( Read_ops ) AS \"Read ops\",\n    AVG ( Write_ops ) AS \"Write ops\"\nFROM \n    (\n        SELECT\n            CASE\n                WHEN v4_4_configuration_history_vms_disks.delete_date IS NULL\n                    THEN vm_disk_name\n                ELSE vm_disk_name\n            ||\n            '*'\n            END AS disk_name,\n            CASE\n                WHEN MAX (v4_4_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS Time,\n            AVG ( COALESCE ( read_ops_per_second, 0 ) ) AS Read_ops,\n            AVG ( COALESCE ( write_ops_per_second, 0 ) ) AS Write_ops\n        FROM v4_4_statistics_vms_disks_resources_usage_samples AS statistics\n            INNER JOIN v4_4_configuration_history_vms_disks\n                ON \n                    (\n                        v4_4_configuration_history_vms_disks.vm_disk_id =\n                        statistics.vm_disk_id\n                    )\n\t\t        INNER JOIN v4_4_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_4_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_disk_id\n\t\t\t\t\t\t            AND v4_4_configuration_history_vms_devices.type = 'disk'\n\t\t\t\t\t          )\n\t\t        INNER JOIN v4_4_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_4_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_4_configuration_history_vms_devices.vm_id\n\t\t\t\t\t          )\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we filter by the latest vms_disks  configuration\n            AND v4_4_configuration_history_vms_disks.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms_disks AS a\n                        GROUP BY a.vm_disk_id\n                    )\n            AND v4_4_configuration_history_vms_disks.vm_disk_id \n                IN \n                    (\n                        SELECT c.vm_disk_id\n                        FROM \n                            v4_4_statistics_vms_disks_resources_usage_samples AS b\n                            INNER JOIN v4_4_configuration_history_vms_disks AS c\n                                ON \n                                    (\n                                        c.vm_disk_id = \n                                        b.vm_disk_id\n                                    )\n                            WHERE\n                                -- Here we filter by active vms disks only\n                                b.vm_disk_status = 1\n                                AND c.vm_disk_id \n                                    IN \n                                        (\n                                            SELECT device_id\n                                            FROM \n                                                v4_4_configuration_history_vms_devices\n                                                INNER JOIN \n                                                v4_4_statistics_vms_resources_usage_samples AS samples\n                                                    ON\n                                                        (\n                                                            samples.vm_configuration_version =\n                                                            v4_4_configuration_history_vms_devices.vm_configuration_version\n                                                        )\n                                            WHERE\n                                                -- Here we filter by active vms only\n                                                samples.vm_status = 1\n                                                -- Here we filter by the vm chosen by the user\n                                                AND v4_4_configuration_history_vms_devices.vm_id IN ($vm_id)\n                                                AND create_date < $__timeTo()\n                                                AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                                -- Here we get the latest vm_devices configuration\n                                                AND v4_4_configuration_history_vms_devices.history_id \n                                                    IN \n                                                        (\n                                                            SELECT MAX ( a.history_id )\n                                                            FROM v4_4_configuration_history_vms_devices a\n                                                            GROUP BY a.vm_id, a.device_id\n                                                        )\n                                                -- Here we get or remove deleted VM devices according to what the user chose\n                                                -- in the \"show_deleted\" parameter.\n                                                AND\n                                                    CASE\n                                                        WHEN '$show_deleted'='Yes'\n                                                            THEN 1=1\n                                                        WHEN '$show_deleted'='No'\n                                                            THEN delete_date isnull\n                                                    END\n                                        )\n                                AND history_datetime >= $__timeFrom()\n                                AND history_datetime < $__timeTo()\n                                -- Here we get the latest vm_disks configuration\n                                AND c.history_id \n                                    IN \n                                        (\n                                            SELECT MAX ( d.history_id )\n                                            FROM  v4_4_configuration_history_vms_disks AS d\n                                            GROUP BY d.vm_disk_id\n                                        )\n                                -- Here we get or remove deleted VM disks according to what the user chose\n                                -- in the \"show_deleted\" parameter.\n                                AND\n                                    CASE\n                                        WHEN '$show_deleted'='Yes'\n                                            THEN 1=1\n                                        WHEN '$show_deleted'='No'\n                                            THEN delete_date isnull\n                                    END\n                            GROUP BY c.vm_disk_id\n                            -- Here we sort by the disks that have the max read and write rate.\n                            ORDER BY \n                                AVG ( COALESCE ( b.read_ops_per_second, 0 ) ) +\n                                AVG ( COALESCE ( b.write_ops_per_second, 0 ) ) \n                                DESC\n                            LIMIT 5\n                    )\n                -- Here we get or remove deleted entities according to what the user chose\n                -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_4_configuration_history_vms_disks.delete_date isnull\n                END\n        GROUP BY statistics.vm_disk_id, disk_name, history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, disk_name, vm_name\nORDER BY\n    all_sub_queries.time,\n    AVG ( Read_ops ) DESC,\n    AVG ( Write_ops ) DESC,\n    CONCAT\n\t  (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t)",
                    "refId": "A",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                },
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR10A - This query returns the\n-- VMs Disk Read_ops, Write_ops Usage\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n\t    (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t) AS disk_and_vm_name,\n    AVG ( Read_ops ) AS \"Read ops\",\n    AVG ( Write_ops ) AS \"Write ops\"\nFROM \n    (\n        SELECT\n            CASE\n                WHEN v4_4_configuration_history_vms_disks.delete_date IS NULL\n                    THEN vm_disk_name\n                ELSE vm_disk_name\n            ||\n            '*'\n            END AS disk_name,\n            CASE\n                WHEN MAX (v4_4_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS Time,\n            AVG ( COALESCE ( read_ops_per_second, 0 ) ) AS Read_ops,\n            AVG ( COALESCE ( write_ops_per_second, 0 ) ) AS Write_ops\n        FROM \n            (\n                    SELECT history_datetime, vm_disk_id, read_ops_per_second, write_ops_per_second \n                    FROM v4_4_statistics_vms_disks_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_disk_id, read_ops_per_second, write_ops_per_second \n                    FROM v4_4_statistics_vms_disks_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_vms_disks_resources_usage_hourly\n                            )\n            ) AS statistics\n            INNER JOIN v4_4_configuration_history_vms_disks\n                ON \n                    (\n                        v4_4_configuration_history_vms_disks.vm_disk_id =\n                        statistics.vm_disk_id\n                    )\n\t\t        INNER JOIN v4_4_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_4_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_disk_id\n\t\t\t\t\t\t            AND v4_4_configuration_history_vms_devices.type = 'disk'\n\t\t\t\t\t          )\n\t\t        INNER JOIN v4_4_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_4_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_4_configuration_history_vms_devices.vm_id\n\t\t\t\t\t          )\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we filter by the latest vms_disks  configuration\n            AND v4_4_configuration_history_vms_disks.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms_disks AS a\n                        GROUP BY a.vm_disk_id\n                    )\n            AND v4_4_configuration_history_vms_disks.vm_disk_id \n                IN \n                    (\n                        SELECT c.vm_disk_id\n                        FROM\n                            (\n                                    SELECT history_datetime, vm_disk_id, vm_disk_status, read_ops_per_second, write_ops_per_second \n                                    FROM v4_4_statistics_vms_disks_resources_usage_hourly \n                                UNION\n                                    SELECT history_datetime, vm_disk_id, vm_disk_status, read_ops_per_second, write_ops_per_second\n                                    FROM v4_4_statistics_vms_disks_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_vms_disks_resources_usage_hourly\n                                            )\n                            ) AS b\n                            INNER JOIN v4_4_configuration_history_vms_disks AS c\n                                ON \n                                    (\n                                        c.vm_disk_id = \n                                        b.vm_disk_id\n                                    )\n                            WHERE\n                                -- Here we filter by active vms disks only\n                                b.vm_disk_status = 1\n                                AND c.vm_disk_id \n                                    IN \n                                        (\n                                            SELECT device_id\n                                            FROM \n                                                v4_4_configuration_history_vms_devices\n                                                INNER JOIN\n                                                (\n                                                        SELECT history_datetime, vm_configuration_version, vm_status\n                                                        FROM v4_4_statistics_vms_resources_usage_hourly\n                                                    UNION\n                                                        SELECT history_datetime, vm_configuration_version, vm_status\n                                                        FROM v4_4_statistics_vms_resources_usage_daily\n                                                        WHERE\n                                                            history_datetime <\n                                                                (\n                                                                    SELECT MIN ( history_datetime )\n                                                                    FROM v4_4_statistics_vms_resources_usage_hourly\n                                                                )\n                                                ) AS hourly_daily\n                                                    ON\n                                                        (\n                                                            hourly_daily.vm_configuration_version =\n                                                            v4_4_configuration_history_vms_devices.vm_configuration_version\n                                                        )\n                                            WHERE\n                                                -- Here we filter by active vms only\n                                                hourly_daily.vm_status = 1\n                                                -- Here we filter by the vm chosen by the user\n                                                AND v4_4_configuration_history_vms_devices.vm_id IN ($vm_id)\n                                                AND create_date < $__timeTo()\n                                                AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                                -- Here we get the latest vm_devices configuration\n                                                AND v4_4_configuration_history_vms_devices.history_id \n                                                    IN \n                                                        (\n                                                            SELECT MAX ( a.history_id )\n                                                            FROM v4_4_configuration_history_vms_devices a\n                                                            GROUP BY a.vm_id, a.device_id\n                                                        )\n                                                -- Here we get or remove deleted VM devices according to what the user chose\n                                                -- in the \"show_deleted\" parameter.\n                                                AND\n                                                    CASE\n                                                        WHEN '$show_deleted'='Yes'\n                                                            THEN 1=1\n                                                        WHEN '$show_deleted'='No'\n                                                            THEN delete_date isnull\n                                                    END\n                                        )\n                                AND history_datetime >= $__timeFrom()\n                                AND history_datetime < $__timeTo()\n                                -- Here we get the latest vm_disks configuration\n                                AND c.history_id \n                                    IN \n                                        (\n                                            SELECT MAX ( d.history_id )\n                                            FROM  v4_4_configuration_history_vms_disks AS d\n                                            GROUP BY d.vm_disk_id\n                                        )\n                                -- Here we get or remove deleted VM disks according to what the user chose\n                                -- in the \"show_deleted\" parameter.\n                                AND\n                                    CASE\n                                        WHEN '$show_deleted'='Yes'\n                                            THEN 1=1\n                                        WHEN '$show_deleted'='No'\n                                            THEN delete_date isnull\n                                    END\n                            GROUP BY c.vm_disk_id\n                            -- Here we sort by the disks that have the max read and write rate.\n                            ORDER BY \n                                AVG ( COALESCE ( b.read_ops_per_second, 0 ) ) +\n                                AVG ( COALESCE ( b.write_ops_per_second, 0 ) ) \n                                DESC\n                            LIMIT 5\n                    )\n                -- Here we get or remove deleted entities according to what the user chose\n                -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_4_configuration_history_vms_disks.delete_date isnull\n                END\n        GROUP BY statistics.vm_disk_id, disk_name, history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, disk_name, vm_name\nORDER BY\n    all_sub_queries.time,\n    AVG ( Read_ops ) DESC,\n    AVG ( Write_ops ) DESC,\n    CONCAT\n    (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t)",
                    "refId": "B",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Top 5 Most Utilized Disks - I/O operations/sec (over time) (over time) (over time) (BR10A)",
            "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "decimals": 1,
                    "format": "ops",
                    "label": "",
                    "logBase": 1,
                    "max": null,
                    "min": "0",
                    "show": true
                },
                {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "oVirt DWH",
            "description": "This report displays for the top 3 most utilized network interfaces the average transmit and receive rates for a selected virtual machine over a selected period.",
            "fieldConfig": {
                "defaults": {
                    "custom": {},
                    "links": []
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 17
            },
            "hiddenSeries": false,
            "id": 18,
            "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "7.4.0",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR10A - This query returns the\n--  VMs Ethernet Interface Tx and Rx Rates\n-- over time.\n\n-- This query (A) displays recent data from the last hours, \n-- using the samples and hourly tables.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n\t  (\n\t      COALESCE ( interface_name, MAX ( interface_name ) over ( partition BY 1 ), '' ) || ' (', \n\t      COALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t  ) AS disk_and_vm_name,\n    AVG ( Rx_rate ) AS \"Rx. Rate\",\n    AVG ( Tx_rate ) AS \"Tx. Rate\"\nFROM \n    (\n        SELECT v4_4_configuration_history_vms_interfaces.vm_interface_id,\n            CASE\n                WHEN v4_4_configuration_history_vms_interfaces.delete_date IS NULL\n                    THEN v4_4_configuration_history_vms_interfaces.vm_interface_name\n                ELSE v4_4_configuration_history_vms_interfaces.vm_interface_name\n            ||\n            '*'\n            END AS interface_name,\n            CASE\n                WHEN MAX (v4_4_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS time,\n            AVG ( COALESCE ( receive_rate_percent, 0 ) ) AS Rx_rate,\n            AVG ( COALESCE ( transmit_rate_percent, 0 ) ) AS Tx_rate\n        FROM \n            v4_4_statistics_vms_interfaces_resources_usage_samples AS statistics\n            INNER JOIN v4_4_configuration_history_vms_interfaces\n                ON \n                    (\n                        v4_4_configuration_history_vms_interfaces.vm_interface_id =\n                        statistics.vm_interface_id\n                    )\n\t\t        INNER JOIN v4_4_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_4_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_interface_id\n\t\t\t\t\t\t            AND v4_4_configuration_history_vms_devices.type = 'interface'\n\t\t\t\t\t          )\n\t\t        INNER JOIN v4_4_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_4_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_4_configuration_history_vms_devices.vm_id\n\t\t\t\t\t          )\n        WHERE \n            history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest vm_interfaces configuration\n            AND v4_4_configuration_history_vms_interfaces.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms_interfaces AS a\n                        GROUP BY a.vm_interface_id\n                    )\n            -- Here we get or remove deleted vm_interfaces according to what the user chose\n            -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_4_configuration_history_vms_interfaces.delete_date isnull\n                END\n            AND v4_4_configuration_history_vms_interfaces.vm_interface_id \n                IN \n                    (\n                        SELECT c.vm_interface_id\n                        FROM \n                            v4_4_statistics_vms_interfaces_resources_usage_samples AS b\n                            INNER JOIN v4_4_configuration_history_vms_interfaces AS c\n                                ON \n                                    (\n                                        c.vm_interface_id = \n                                        b.vm_interface_id\n                                    )\n                            INNER JOIN \n                            v4_4_statistics_vms_resources_usage_samples AS d\n                                ON \n                                    (\n                                        d.vm_configuration_version =\n                                        c.vm_configuration_version\n                                        AND d.history_datetime =\n                                        b.history_datetime\n                                    )\n                        WHERE\n                            -- Here we filter by active vms only\n                            d.vm_status = 1\n                            -- Here we filter by the VM chosen by the user\n                            AND c.vm_interface_id \n                                IN \n                                    (\n                                        SELECT device_id\n                                        FROM v4_4_configuration_history_vms_devices\n                                        WHERE \n                                            vm_id IN ($vm_id)\n\t\t\t\t\t\t\t\t\t\t\t                      AND create_date < $__timeTo()\n                                            AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                            -- Here we get the latest vm_devices configuration\n                                            AND history_id \n                                                IN \n                                                    (\n                                                        SELECT MAX ( a.history_id )\n                                                        FROM v4_4_configuration_history_vms_devices AS a\n                                                        GROUP BY a.vm_id, a.device_id\n                                                    )\n                                            -- Here we get or remove deleted VMs according to what the user chose\n                                            -- in the \"show_deleted\" parameter.\n                                            AND\n                                                CASE\n                                                    WHEN '$show_deleted'='Yes'\n                                                        THEN 1=1\n                                                    WHEN '$show_deleted'='No'\n                                                        THEN delete_date isnull\n                                                END\n                                    )\n                            AND c.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( d.history_id )\n                                        FROM v4_4_configuration_history_vms_interfaces AS d\n                                        GROUP BY d.vm_interface_id\n                                    )\n                            -- Here we get or remove deleted vm_interfaces according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY c.vm_interface_id\n                        ORDER BY\n                            AVG ( COALESCE ( b.receive_rate_percent, 0 ) ) +\n                            AVG ( COALESCE ( b.transmit_rate_percent, 0 ) ) \n                            DESC\n                        LIMIT 3\n                    )\n        GROUP BY\n            v4_4_configuration_history_vms_interfaces.vm_interface_id,\n            interface_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, interface_name, vm_name\nORDER BY all_sub_queries.time ASC",
                    "refId": "A",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                },
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR10A - This query returns the\n--  VMs Ethernet Interface Tx and Rx Rates\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n\t    (\n\t\t\tCOALESCE ( interface_name, MAX ( interface_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t) AS disk_and_vm_name,\n    AVG ( Rx_rate ) AS \"Rx. Rate\",\n    AVG ( Tx_rate ) AS \"Tx. Rate\"\nFROM \n    (\n        SELECT v4_4_configuration_history_vms_interfaces.vm_interface_id,\n            CASE\n                WHEN v4_4_configuration_history_vms_interfaces.delete_date IS NULL\n                    THEN v4_4_configuration_history_vms_interfaces.vm_interface_name\n                ELSE v4_4_configuration_history_vms_interfaces.vm_interface_name\n            ||\n            '*'\n            END AS interface_name,\n            CASE\n                WHEN MAX (v4_4_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS time,\n            AVG ( COALESCE ( receive_rate_percent, 0 ) ) AS Rx_rate,\n            AVG ( COALESCE ( transmit_rate_percent, 0 ) ) AS Tx_rate\n        FROM \n            (    \n                    SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent \n                    FROM v4_4_statistics_vms_interfaces_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent \n                    FROM v4_4_statistics_vms_interfaces_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_vms_interfaces_resources_usage_hourly\n                            )\n            ) AS statistics\n            INNER JOIN v4_4_configuration_history_vms_interfaces\n                ON \n                    (\n                        v4_4_configuration_history_vms_interfaces.vm_interface_id =\n                        statistics.vm_interface_id\n                    )\n\t\t        INNER JOIN v4_4_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_4_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_interface_id\n\t\t\t\t\t\t            AND v4_4_configuration_history_vms_devices.type = 'interface'\n\t\t\t\t\t          )\n\t\t        INNER JOIN v4_4_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_4_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_4_configuration_history_vms_devices.vm_id\n\t\t\t\t\t          )\n        WHERE \n            history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest vm_interfaces configuration\n            AND v4_4_configuration_history_vms_interfaces.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms_interfaces AS a\n                        GROUP BY a.vm_interface_id\n                    )\n            -- Here we get or remove deleted vm_interfaces according to what the user chose\n            -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_4_configuration_history_vms_interfaces.delete_date isnull\n                END\n            AND v4_4_configuration_history_vms_interfaces.vm_interface_id \n                IN \n                    (\n                        SELECT c.vm_interface_id\n                        FROM     \n                            (\n                                    SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent\n                                    FROM v4_4_statistics_vms_interfaces_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent\n                                    FROM v4_4_statistics_vms_interfaces_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_vms_interfaces_resources_usage_hourly\n                                            )\n                            ) AS b\n                            INNER JOIN v4_4_configuration_history_vms_interfaces AS c\n                                ON \n                                    (\n                                        c.vm_interface_id = \n                                        b.vm_interface_id\n                                    )\n                            INNER JOIN \n                            (\n                                    SELECT history_datetime, vm_configuration_version, vm_status \n                                    FROM v4_4_statistics_vms_resources_usage_hourly \n                                UNION\n                                    SELECT history_datetime, vm_configuration_version, vm_status\n                                    FROM v4_4_statistics_vms_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_vms_resources_usage_hourly\n                                            )\n                            ) AS d\n                                ON \n                                    (\n                                        d.vm_configuration_version =\n                                        c.vm_configuration_version\n                                        AND d.history_datetime =\n                                        b.history_datetime\n                                    )\n                        WHERE\n                            -- Here we filter by active vms only\n                            d.vm_status = 1\n                            -- Here we filter by the VM chosen by the user\n                            AND c.vm_interface_id \n                                IN \n                                    (\n                                        SELECT device_id\n                                        FROM v4_4_configuration_history_vms_devices\n                                        WHERE \n                                            vm_id IN ($vm_id)\n\t\t\t\t\t\t\t\t\t\t\t                      AND create_date < $__timeTo()\n                                            AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                            -- Here we get the latest vm_devices configuration\n                                            AND history_id \n                                                IN \n                                                    (\n                                                        SELECT MAX ( a.history_id )\n                                                        FROM v4_4_configuration_history_vms_devices AS a\n                                                        GROUP BY a.vm_id, a.device_id\n                                                    )\n                                            -- Here we get or remove deleted VMs according to what the user chose\n                                            -- in the \"show_deleted\" parameter.\n                                            AND\n                                                CASE\n                                                    WHEN '$show_deleted'='Yes'\n                                                        THEN 1=1\n                                                    WHEN '$show_deleted'='No'\n                                                        THEN delete_date isnull\n                                                END\n                                    )\n                            AND c.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( d.history_id )\n                                        FROM v4_4_configuration_history_vms_interfaces AS d\n                                        GROUP BY d.vm_interface_id\n                                    )\n                            -- Here we get or remove deleted vm_interfaces according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY c.vm_interface_id\n                        ORDER BY\n                            AVG ( COALESCE ( b.receive_rate_percent, 0 ) ) +\n                            AVG ( COALESCE ( b.transmit_rate_percent, 0 ) ) \n                            DESC\n                        LIMIT 3\n                    )\n        GROUP BY\n            v4_4_configuration_history_vms_interfaces.vm_interface_id,\n            interface_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, interface_name, vm_name\nORDER BY all_sub_queries.time ASC",
                    "refId": "B",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Top 3 Most Utilized Network Interfaces Tx and Rx Rates (over time) (BR10A)",
            "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "decimals": 1,
                    "format": "percent",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        }
    ],
    "refresh": false,
    "schemaVersion": 27,
    "style": "dark",
    "tags": [
        "RHV",
        "Virtualization",
        "system",
        "Warehouse",
        "scripts"
    ],
    "templating": {
        "list": [
            {
                "allValue": null,
                "current": {
                    "selected": true,
                    "tags": [],
                    "text": "No",
                    "value": "No"
                },
                "description": null,
                "error": null,
                "hide": 0,
                "includeAll": false,
                "label": "Show Deleted Entities?",
                "multi": false,
                "name": "show_deleted",
                "options": [
                    {
                        "selected": true,
                        "text": "No",
                        "value": "No"
                    },
                    {
                        "selected": false,
                        "text": "Yes",
                        "value": "Yes"
                    }
                ],
                "query": "No,Yes",
                "skipUrlSync": false,
                "type": "custom"
            },
            {
                "allValue": null,
                "current": {},
                "datasource": "oVirt DWH",
                "definition": "SELECT DISTINCT   CAST ( datacenter_id AS varchar ) AS __value,  CASE          WHEN delete_date IS NULL  \t     \t    THEN datacenter_name \t \tWHEN delete_date IS NOT null  \t      \t    THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  END AS __text  \t\tFROM v4_4_configuration_history_datacenters  \t\tWHERE       \t\t    history_id           \t\t\t    IN               \t\t\t\t(  \t             \t\t\t\t\tSELECT MAX ( a.history_id )  \t\t         \t\t\t\t\tFROM v4_4_configuration_history_datacenters a  \t\t         \t\t\t\t\tGROUP BY a.datacenter_id \t         \t\t\t\t) \t \t\t\tAND datacenter_id  \t         \t\t\t    IN \t\t\t     \t\t\t\t    ( \t\t\t\t\t \t\t\t\t\t\tSELECT DISTINCT datacenter_id \t\t\t\t\t \t\t\t\t\t\tFROM v4_4_configuration_history_clusters \t\t\t\t\t \t\t\t\t\t\tWHERE  \t\t\t\t\t     \t\t\t\t\t\t    cluster_id \t\t\t\t\t         \t\t\t\t\t\t        IN \t\t\t\t\t             \t\t\t\t\t\t            ( \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\tSELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\tFROM v4_4_configuration_history_vms  \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t) \t\t\t\t\t) \t \t\t\tAND \t    \t\t\t    CASE  \t        \t\t\t\t    WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    THEN 1=1 \t\t    \t\t\t\t\tWHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t                END  \t\t",
                "description": null,
                "error": null,
                "hide": 0,
                "includeAll": true,
                "label": "Data Center",
                "multi": true,
                "name": "datacenter_id",
                "options": [],
                "query": "SELECT DISTINCT   CAST ( datacenter_id AS varchar ) AS __value,  CASE          WHEN delete_date IS NULL  \t     \t    THEN datacenter_name \t \tWHEN delete_date IS NOT null  \t      \t    THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  END AS __text  \t\tFROM v4_4_configuration_history_datacenters  \t\tWHERE       \t\t    history_id           \t\t\t    IN               \t\t\t\t(  \t             \t\t\t\t\tSELECT MAX ( a.history_id )  \t\t         \t\t\t\t\tFROM v4_4_configuration_history_datacenters a  \t\t         \t\t\t\t\tGROUP BY a.datacenter_id \t         \t\t\t\t) \t \t\t\tAND datacenter_id  \t         \t\t\t    IN \t\t\t     \t\t\t\t    ( \t\t\t\t\t \t\t\t\t\t\tSELECT DISTINCT datacenter_id \t\t\t\t\t \t\t\t\t\t\tFROM v4_4_configuration_history_clusters \t\t\t\t\t \t\t\t\t\t\tWHERE  \t\t\t\t\t     \t\t\t\t\t\t    cluster_id \t\t\t\t\t         \t\t\t\t\t\t        IN \t\t\t\t\t             \t\t\t\t\t\t            ( \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\tSELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\tFROM v4_4_configuration_history_vms  \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t) \t\t\t\t\t) \t \t\t\tAND \t    \t\t\t    CASE  \t        \t\t\t\t    WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    THEN 1=1 \t\t    \t\t\t\t\tWHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t                END  \t\t",
                "refresh": 2,
                "regex": "",
                "skipUrlSync": false,
                "sort": 1,
                "tagValuesQuery": "",
                "tags": [],
                "tagsQuery": "",
                "type": "query",
                "useTags": false
            },
            {
                "allValue": "",
                "current": {},
                "datasource": "oVirt DWH",
                "definition": "SELECT DISTINCT        CAST ( cluster_id AS varchar ) AS __value,  \tCASE      \t    WHEN delete_date IS NULL  \t     \t\t    THEN cluster_name \t \t\tWHEN delete_date IS NOT null  \t      \t\t    THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \tEND AS __text  \tFROM v4_4_configuration_history_clusters  \tWHERE       \t    history_id           \t\t    IN               \t\t\t    (  \t             \t\t\t\t\tSELECT MAX ( a.history_id )  \t\t         \t\t\t\t\tFROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\tGROUP BY a.cluster_id \t         \t\t\t\t) \t \t\tAND cluster_id  \t\t    IN \t\t\t     \t\t\t    ( \t\t\t\t\t \t\t\t\t\tSELECT DISTINCT cluster_id \t\t\t\t\t \t\t\t\t\tFROM v4_4_configuration_history_vms \t\t\t\t \t\t\t\t) \t\tAND \t    \t\t    CASE  \t        \t\t\t    WHEN '$show_deleted'='Yes' \t            \t\t\t\t    THEN 1=1 \t\t    \t\t\t\tWHEN '$show_deleted'='No' \t\t        \t\t\t\t    THEN v4_4_configuration_history_clusters.delete_date ISNULL \t    \t\t\tEND     \t\tAND datacenter_id IN ($datacenter_id)  \t\t",
                "description": null,
                "error": null,
                "hide": 0,
                "includeAll": true,
                "label": "Cluster",
                "multi": true,
                "name": "cluster_id",
                "options": [],
                "query": "SELECT DISTINCT        CAST ( cluster_id AS varchar ) AS __value,  \tCASE      \t    WHEN delete_date IS NULL  \t     \t\t    THEN cluster_name \t \t\tWHEN delete_date IS NOT null  \t      \t\t    THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \tEND AS __text  \tFROM v4_4_configuration_history_clusters  \tWHERE       \t    history_id           \t\t    IN               \t\t\t    (  \t             \t\t\t\t\tSELECT MAX ( a.history_id )  \t\t         \t\t\t\t\tFROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\tGROUP BY a.cluster_id \t         \t\t\t\t) \t \t\tAND cluster_id  \t\t    IN \t\t\t     \t\t\t    ( \t\t\t\t\t \t\t\t\t\tSELECT DISTINCT cluster_id \t\t\t\t\t \t\t\t\t\tFROM v4_4_configuration_history_vms \t\t\t\t \t\t\t\t) \t\tAND \t    \t\t    CASE  \t        \t\t\t    WHEN '$show_deleted'='Yes' \t            \t\t\t\t    THEN 1=1 \t\t    \t\t\t\tWHEN '$show_deleted'='No' \t\t        \t\t\t\t    THEN v4_4_configuration_history_clusters.delete_date ISNULL \t    \t\t\tEND     \t\tAND datacenter_id IN ($datacenter_id)  \t\t",
                "refresh": 2,
                "regex": "",
                "skipUrlSync": false,
                "sort": 1,
                "tagValuesQuery": "",
                "tags": [],
                "tagsQuery": "",
                "type": "query",
                "useTags": false
            },
            {
                "allValue": null,
                "current": {},
                "datasource": "oVirt DWH",
                "definition": "SELECT DISTINCT        CAST ( vm_id AS varchar ) AS __value,  \tCASE      \t    WHEN delete_date IS NULL  \t     \t\t    THEN vm_name \t \t\tWHEN delete_date IS NOT null  \t      \t\t    THEN vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \tEND AS __text  \tFROM v4_4_configuration_history_vms  \tWHERE       \t    history_id           \t\t    IN               \t\t\t    (  \t             \t\t\t\t\tSELECT MAX ( a.history_id )  \t\t         \t\t\t\t\tFROM v4_4_configuration_history_vms a  \t\t         \t\t\t\t\tGROUP BY a.vm_id \t         \t\t\t\t) \t \t\tAND \t    \t\t    CASE  \t        \t\t\t    WHEN '$show_deleted'='Yes' \t            \t\t\t\t    THEN 1=1 \t\t    \t\t\t\tWHEN '$show_deleted'='No' \t\t        \t\t\t\t    THEN v4_4_configuration_history_vms.delete_date ISNULL \t    \t\t\tEND     \t\tAND cluster_id IN ($cluster_id)  \t\t",
                "description": null,
                "error": null,
                "hide": 0,
                "includeAll": true,
                "label": "Virtual Machine",
                "multi": true,
                "name": "vm_id",
                "options": [],
                "query": "SELECT DISTINCT        CAST ( vm_id AS varchar ) AS __value,  \tCASE      \t    WHEN delete_date IS NULL  \t     \t\t    THEN vm_name \t \t\tWHEN delete_date IS NOT null  \t      \t\t    THEN vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \tEND AS __text  \tFROM v4_4_configuration_history_vms  \tWHERE       \t    history_id           \t\t    IN               \t\t\t    (  \t             \t\t\t\t\tSELECT MAX ( a.history_id )  \t\t         \t\t\t\t\tFROM v4_4_configuration_history_vms a  \t\t         \t\t\t\t\tGROUP BY a.vm_id \t         \t\t\t\t) \t \t\tAND \t    \t\t    CASE  \t        \t\t\t    WHEN '$show_deleted'='Yes' \t            \t\t\t\t    THEN 1=1 \t\t    \t\t\t\tWHEN '$show_deleted'='No' \t\t        \t\t\t\t    THEN v4_4_configuration_history_vms.delete_date ISNULL \t    \t\t\tEND     \t\tAND cluster_id IN ($cluster_id)  \t\t",
                "refresh": 2,
                "regex": "",
                "skipUrlSync": false,
                "sort": 1,
                "tagValuesQuery": "",
                "tags": [],
                "tagsQuery": "",
                "type": "query",
                "useTags": false
            }
        ]
    },
    "time": {
        "from": "now-30d",
        "to": "now"
    },
    "timepicker": {
        "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
        ],
        "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
        ]
    },
    "timezone": "",
    "title": "RHV - Virtual Machines Trend Dashboard",
    "uid": "VMsTrendDashboard",
    "version": 10
}