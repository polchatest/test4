{
    "annotations": {
        "list": [
            {
                "builtIn": 1,
                "datasource": "-- Grafana --",
                "enable": true,
                "hide": true,
                "iconColor": "rgba(0, 211, 255, 1)",
                "name": "Annotations & Alerts",
                "type": "dashboard"
            }
        ]
    },
    "description": "\u042d\u043a\u0440\u0430\u043d \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430 \u0442\u0435\u043d\u0434\u0435\u043d\u0446\u0438\u0439 \u0445\u043e\u0441\u0442\u043e\u0432, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 \u0441 \u0442\u0435\u0447\u0435\u043d\u0438\u0435\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0438 - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d, \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440, \u043f\u0430\u043c\u044f\u0442\u044c \u0438 \u0441\u0435\u0442\u044c Tx/Rx. \u041e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439:  \u0410\u043b\u044c\u0431\u0435\u0449\u0435\u043d\u043a\u043e \u041c.\u041d. (\u0410\u0426\u041e\u0414)",
    "editable": true,
    "gnetId": null,
    "graphTooltip": 0,
    "id": 1449,
    "iteration": 1630846091862,
    "links": [],
    "panels": [
        {
            "datasource": null,
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 0
            },
            "id": 9,
            "title": "Reports",
            "type": "row"
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "oVirt DWH",
            "description": "This report displays average memory usage and peaks for a selected host over a selected period.",
            "fieldConfig": {
                "defaults": {
                    "custom": {}
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 1
            },
            "hiddenSeries": false,
            "id": 2,
            "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "7.4.0",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR2A - This query returns the hosts\n-- memory usage over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(sub_query.time),\n    MEM_Usage AS \"Memory Usage\"\nFROM \n    (\n        -- Hosts Max and Average Memory Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( memory_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Usage\n        FROM v4_4_statistics_hosts_resources_usage_samples AS samples\n        WHERE\n            -- Here we filter by active hosts only\n            samples.host_status = 1\n            -- Here we filter by the host chosen by the user\n            AND samples.host_id IN ($host_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY sub_query.time, MEM_Usage\nORDER BY sub_query.time",
                    "refId": "A",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                },
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR2A - This query returns the hosts average\n-- memory usage and peaks over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(sub_query.time),\n    MEM_Usage AS \"Average Memory Usage\",\n    MEM_Peak AS \"Average Memory Peaks\"\nFROM \n    (\n        -- Hosts Max and Average Memory Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( memory_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Usage,\n            SUM ( COALESCE ( max_memory_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Peak\n        FROM\n            (\n                    SELECT history_datetime, memory_usage_percent, minutes_in_status, max_memory_usage, host_status, host_id \n                    FROM v4_4_statistics_hosts_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, memory_usage_percent, minutes_in_status, max_memory_usage, host_status, host_id \n                    FROM v4_4_statistics_hosts_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n        WHERE\n            -- Here we filter by active hosts only\n            hourly_daily.host_status = 1\n            -- Here we filter by the host chosen by the user\n            AND hourly_daily.host_id IN ($host_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY sub_query.time, MEM_Usage, MEM_Peak\nORDER BY sub_query.time\n",
                    "refId": "B",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Average Memory Usage and Peaks (over time) (BR2A)",
            "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:1974",
                    "decimals": 1,
                    "format": "percent",
                    "label": null,
                    "logBase": 1,
                    "max": "100",
                    "min": "0",
                    "show": true
                },
                {
                    "$$hashKey": "object:1975",
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "oVirt DWH",
            "description": "This report displays average CPU usage and peaks for a selected host over a selected period.",
            "fieldConfig": {
                "defaults": {
                    "custom": {}
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 1
            },
            "hiddenSeries": false,
            "id": 5,
            "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "7.4.0",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR2A - This query returns the hosts\n-- CPU usage over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(sub_query.time),\n    CPU_Usage AS \"CPU Usage\"\nFROM \n    (\n        -- Here we get the hosts max and average CPU usage\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( cpu_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Usage\n        FROM v4_4_statistics_hosts_resources_usage_samples AS samples\n        WHERE\n            -- Here we filter by active hosts only\n            samples.host_status = 1\n            -- Here we filter by the host chosen by the user\n            AND samples.host_id IN ($host_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY sub_query.time, CPU_Usage\nORDER BY sub_query.time",
                    "refId": "A",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                },
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR2A - This query returns the hourly and daily hosts\n-- CPU usage and peaks over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(sub_query.time),\n    CPU_Usage AS \"CPU Usage\",\n    CPU_Peak AS \"CPU Peak\"\nFROM \n    (\n        -- Here we get the hosts max and average CPU usage\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( cpu_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Usage,\n            SUM ( COALESCE ( max_cpu_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Peak\n        FROM\n            (\n                    SELECT history_datetime, cpu_usage_percent, minutes_in_status, max_cpu_usage, host_status, host_id \n                    FROM v4_4_statistics_hosts_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, cpu_usage_percent, minutes_in_status, max_cpu_usage, host_status, host_id \n                    FROM v4_4_statistics_hosts_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n        WHERE\n            -- Here we filter by active hosts only\n            hourly_daily.host_status = 1\n            -- Here we filter by the host chosen by the user\n            AND hourly_daily.host_id IN ($host_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY sub_query.time, CPU_Usage, CPU_Peak\nORDER BY sub_query.time",
                    "refId": "B",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Average CPU Usage and Peaks (over time) (BR2A)",
            "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:35640",
                    "decimals": 1,
                    "format": "percent",
                    "label": null,
                    "logBase": 1,
                    "max": "100",
                    "min": "0",
                    "show": true
                },
                {
                    "$$hashKey": "object:35641",
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "oVirt DWH",
            "description": "This report displays average number of virtual machines and peaks for a selected host over a selected period.",
            "fieldConfig": {
                "defaults": {
                    "custom": {}
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 9
            },
            "hiddenSeries": false,
            "id": 3,
            "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "7.4.0",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR2A - This query returns the hosts\n-- active VMs counts over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(sub_query.time),\n    CAST ( VMS AS int ) AS \"Number of Virtual Machines\"\nFROM \n    (\n        -- Here we get the hosts Max and average active vms counts\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( active_vms, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS VMS\n        FROM v4_4_statistics_hosts_resources_usage_samples AS samples\n        WHERE\n            -- Here we filter by active hosts only\n            samples.host_status = 1\n            -- Here we filter by the host chosen by the user\n            AND samples.host_id IN ($host_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY sub_query.time, VMS\nORDER BY sub_query.time",
                    "refId": "A",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                },
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR2A - This query returns the hourly and daily hosts\n-- active VMs counts over time\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(sub_query.time),\n    CAST ( VMS AS int ) AS \"Avg. Number of Virtual Machines\",\n    CAST ( VMS_Peak AS int ) AS \"Avg. Peaks of Number of Virtual Machines\"\nFROM \n    (\n        -- Here we get the hosts Max and average active vms counts\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( active_vms, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS VMS,\n            SUM ( COALESCE ( max_active_vms, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS VMS_Peak\n        FROM\n            (\n                    SELECT history_datetime, active_vms, minutes_in_status, max_active_vms, host_status, host_id \n                    FROM v4_4_statistics_hosts_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, active_vms, minutes_in_status, max_active_vms, host_status, host_id\n                    FROM v4_4_statistics_hosts_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n        WHERE\n            -- Here we filter by active hosts only\n            hourly_daily.host_status = 1\n            -- Here we filter by the host chosen by the user\n            AND hourly_daily.host_id IN ($host_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY sub_query.time, VMS, VMS_Peak\nORDER BY sub_query.time",
                    "refId": "B",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Average Number of Virtual Machines and Peaks (over time) (BR2A)",
            "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "decimals": 1,
                    "format": "none",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "oVirt DWH",
            "description": "This report displays for the top 5 busiest Ethernet interfaces the average transmit and receive rates for a selected host over a selected period.",
            "fieldConfig": {
                "defaults": {
                    "custom": {}
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 9
            },
            "hiddenSeries": false,
            "id": 4,
            "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": false
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "7.4.0",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR2A - This query returns top 5 busiest\n-- Ethernet Interface Tx and Rx Rates, over time\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT \n    (\n        COALESCE ( interface_name, MAX ( interface_name ) over ( partition BY 1 ), '' ) || ' (', \n        COALESCE ( host_name, MAX ( host_name ) over ( partition BY 1 ), '' ) || ')'\n    ) AS interface_host_name,\n    AVG ( Rx_rate ) AS \"Avg. Rx\",\n    AVG ( Tx_rate ) AS \"Avg. Tx\"\nFROM \n    (\n        SELECT\n            v4_4_configuration_history_hosts_interfaces.host_interface_id,\n            CASE\n                WHEN v4_4_configuration_history_hosts_interfaces.delete_date IS NULL\n                    THEN v4_4_configuration_history_hosts_interfaces.host_interface_name\n                ELSE v4_4_configuration_history_hosts_interfaces.host_interface_name\n            ||\n            '*'\n            END AS interface_name,\n            CASE\n                WHEN MAX (v4_4_configuration_history_hosts.delete_date) IS NULL\n                    THEN MAX (host_name)\n                ELSE MAX (host_name)\n            ||\n            '*'\n            END AS host_name,\n            statistics.history_datetime AS time,\n            AVG ( COALESCE ( receive_rate_percent, 0 ) ) AS Rx_rate,\n            AVG ( COALESCE ( transmit_rate_percent, 0 ) ) AS Tx_rate\n        FROM\n            v4_4_statistics_hosts_interfaces_resources_usage_samples AS statistics\n            INNER JOIN v4_4_configuration_history_hosts_interfaces\n                ON \n                    (\n                        v4_4_configuration_history_hosts_interfaces.host_interface_id =\n                        statistics.host_interface_id\n                    )\n            INNER JOIN v4_4_configuration_history_hosts\n                ON\n                    (\n                        v4_4_configuration_history_hosts.host_id =\n                        v4_4_configuration_history_hosts_interfaces.host_id\n                    )\n        WHERE\n            history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest host interfaces configuration\n            AND v4_4_configuration_history_hosts_interfaces.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_hosts_interfaces AS a\n                        GROUP BY a.host_interface_id\n                    )\n            AND v4_4_configuration_history_hosts_interfaces.host_interface_id \n                IN \n                    (\n                        SELECT c.host_interface_id\n                        FROM \n                            v4_4_statistics_hosts_interfaces_resources_usage_samples AS b\n                            INNER JOIN v4_4_configuration_history_hosts_interfaces AS c\n                                ON \n                                    ( \n                                        c.host_interface_id = \n                                        b.host_interface_id \n                                    )\n                            INNER JOIN \n                            v4_4_statistics_hosts_resources_usage_samples AS samples\n                                ON \n                                    (\n                                        samples.host_configuration_version =\n                                        c.host_configuration_version\n                                        AND samples.history_datetime =\n                                        b.history_datetime\n                                    )\n                        WHERE\n                            -- Here we filter by active hosts only\n                            samples.host_status = 1\n                            AND c.host_id IN ($host_id)\n                            AND c.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( d.history_id )\n                                        FROM v4_4_configuration_history_hosts_interfaces AS d\n                                        GROUP BY d.host_interface_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN v4_4_configuration_history_hosts_interfaces.delete_date isnull\n                                END\n                        GROUP BY c.host_interface_id\n                        ORDER BY\n                                AVG ( COALESCE ( b.receive_rate_percent, 0 ) ) +\n                                AVG ( COALESCE ( b.transmit_rate_percent, 0 ) ) \n                                DESC\n                        LIMIT 5\n                    )\n            -- Here we get or remove deleted entities according to what the user chose\n            -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_4_configuration_history_hosts_interfaces.delete_date isnull\n                END\n        GROUP BY\n            v4_4_configuration_history_hosts_interfaces.host_interface_id,\n            interface_name,\n            host_name,\n            statistics.history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, interface_name, host_name\nORDER BY all_sub_queries.time ASC",
                    "refId": "A",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                },
                {
                    "format": "time_series",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "-- BR2A - This query returns top 5 busiest\n-- Ethernet Interface Tx and Rx Rates, over time\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT \n    (\n        COALESCE ( interface_name, MAX ( interface_name ) over ( partition BY 1 ), '' ) || ' (', \n        COALESCE ( host_name, MAX ( host_name ) over ( partition BY 1 ), '' ) || ')'\n    ) AS interface_host_name,\n    AVG ( Rx_rate ) AS \"Avg. Receive Rate\",\n    AVG ( Tx_rate ) AS \"Avg. Transmit Rate\"\nFROM \n    (\n        SELECT\n            v4_4_configuration_history_hosts_interfaces.host_interface_id,\n            CASE\n                WHEN v4_4_configuration_history_hosts_interfaces.delete_date IS NULL\n                    THEN v4_4_configuration_history_hosts_interfaces.host_interface_name\n                ELSE v4_4_configuration_history_hosts_interfaces.host_interface_name\n            ||\n            '*'\n            END AS interface_name,\n            CASE\n                WHEN MAX (v4_4_configuration_history_hosts.delete_date) IS NULL\n                    THEN MAX (host_name)\n                ELSE MAX (host_name)\n            ||\n            '*'\n            END AS host_name,\n            statistics.history_datetime AS time,\n            AVG ( COALESCE ( receive_rate_percent, 0 ) ) AS Rx_rate,\n            AVG ( COALESCE ( transmit_rate_percent, 0 ) ) AS Tx_rate\n        FROM\n            (\n                    SELECT history_datetime, host_interface_id, receive_rate_percent, transmit_rate_percent \n                    FROM v4_4_statistics_hosts_interfaces_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, host_interface_id, receive_rate_percent, transmit_rate_percent \n                    FROM v4_4_statistics_hosts_interfaces_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_hosts_interfaces_resources_usage_hourly\n                            )\n            ) AS statistics\n            INNER JOIN v4_4_configuration_history_hosts_interfaces\n                ON \n                    (\n                        v4_4_configuration_history_hosts_interfaces.host_interface_id =\n                        statistics.host_interface_id\n                    )\n            INNER JOIN v4_4_configuration_history_hosts\n                ON\n                    (\n                        v4_4_configuration_history_hosts.host_id =\n                        v4_4_configuration_history_hosts_interfaces.host_id\n                    )\n        WHERE\n            history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we filter by the host chosen by the user\n            AND v4_4_configuration_history_hosts_interfaces.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_hosts_interfaces AS a\n                        GROUP BY a.host_interface_id\n                    )\n            AND v4_4_configuration_history_hosts_interfaces.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_hosts_interfaces AS a\n                        GROUP BY a.host_interface_id\n                    )\n            AND v4_4_configuration_history_hosts_interfaces.host_interface_id \n                IN \n                    (\n                        SELECT c.host_interface_id\n                        FROM\n                            (\n                                    SELECT history_datetime, host_interface_id, receive_rate_percent, transmit_rate_percent\n                                    FROM v4_4_statistics_hosts_interfaces_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, host_interface_id, receive_rate_percent, transmit_rate_percent\n                                    FROM v4_4_statistics_hosts_interfaces_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_hosts_interfaces_resources_usage_hourly\n                                            )\n                            ) AS b\n                            INNER JOIN v4_4_configuration_history_hosts_interfaces c\n                                ON \n                                    ( \n                                        c.host_interface_id = \n                                        b.host_interface_id \n                                    )\n                            INNER JOIN \n                            (\n                                    SELECT history_datetime, host_id, host_status, host_configuration_version \n                                    FROM v4_4_statistics_hosts_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, host_id, host_status, host_configuration_version \n                                    FROM v4_4_statistics_hosts_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                                            )\n                            ) AS hourly_daily\n                                ON \n                                    (\n                                        hourly_daily.host_configuration_version =\n                                        c.host_configuration_version\n                                        AND hourly_daily.history_datetime =\n                                        b.history_datetime\n                                    )\n                        WHERE\n                            -- Here we filter by active hosts only\n                            hourly_daily.host_status = 1\n                            AND c.host_id IN ($host_id)\n                            AND c.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( d.history_id )\n                                        FROM v4_4_configuration_history_hosts_interfaces AS d\n                                        GROUP BY d.host_interface_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN v4_4_configuration_history_hosts_interfaces.delete_date isnull\n                                END\n                        GROUP BY c.host_interface_id\n                        ORDER BY\n                                AVG ( COALESCE ( b.receive_rate_percent, 0 ) ) +\n                                AVG ( COALESCE ( b.transmit_rate_percent, 0 ) ) \n                                DESC\n                        LIMIT 5\n                    )\n            -- Here we get or remove deleted entities according to what the user chose\n            -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_4_configuration_history_hosts_interfaces.delete_date isnull\n                END\n        GROUP BY\n            v4_4_configuration_history_hosts_interfaces.host_interface_id,\n            interface_name,\n            host_name,\n            statistics.history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, interface_name, host_name\nORDER BY all_sub_queries.time ASC",
                    "refId": "B",
                    "select": [
                        [
                            {
                                "params": [
                                    "value"
                                ],
                                "type": "column"
                            }
                        ]
                    ],
                    "timeColumn": "time",
                    "where": [
                        {
                            "name": "$__timeFilter",
                            "params": [],
                            "type": "macro"
                        }
                    ]
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Top 5 Busiest Ethernet Interfaces Tx and Rx Rates (over time) (BR2A)",
            "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "decimals": 1,
                    "format": "percent",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        }
    ],
    "refresh": false,
    "schemaVersion": 27,
    "style": "dark",
    "tags": [
        "RHV",
        "Virtualization",
        "system",
        "Warehouse",
        "scripts"
    ],
    "templating": {
        "list": [
            {
                "allValue": null,
                "current": {
                    "selected": true,
                    "tags": [],
                    "text": "No",
                    "value": "No"
                },
                "description": null,
                "error": null,
                "hide": 0,
                "includeAll": false,
                "label": "Show Deleted Entities?",
                "multi": false,
                "name": "show_deleted",
                "options": [
                    {
                        "selected": true,
                        "text": "No",
                        "value": "No"
                    },
                    {
                        "selected": false,
                        "text": "Yes",
                        "value": "Yes"
                    }
                ],
                "query": "No,Yes",
                "skipUrlSync": false,
                "type": "custom"
            },
            {
                "allValue": null,
                "current": {},
                "datasource": "oVirt DWH",
                "definition": "SELECT DISTINCT   CAST ( datacenter_id AS varchar ) AS __value,  CASE          WHEN delete_date IS NULL  \t     \t    THEN datacenter_name \t \tWHEN delete_date IS NOT null  \t      \t    THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  END AS __text  \t\tFROM v4_4_configuration_history_datacenters  \t\tWHERE       \t\t    history_id           \t\t\t    IN               \t\t\t\t(  \t             \t\t\t\t\tSELECT MAX ( a.history_id )  \t\t         \t\t\t\t\tFROM v4_4_configuration_history_datacenters a  \t\t         \t\t\t\t\tGROUP BY a.datacenter_id \t         \t\t\t\t) \t \t\t\tAND datacenter_id  \t         \t\t\t    IN \t\t\t     \t\t\t\t    ( \t\t\t\t\t \t\t\t\t\t\tSELECT DISTINCT datacenter_id \t\t\t\t\t \t\t\t\t\t\tFROM v4_4_configuration_history_clusters \t\t\t\t\t \t\t\t\t\t\tWHERE  \t\t\t\t\t     \t\t\t\t\t\t    cluster_id \t\t\t\t\t         \t\t\t\t\t\t        IN \t\t\t\t\t             \t\t\t\t\t\t            ( \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\tSELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\tFROM v4_4_configuration_history_hosts  \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t) \t\t\t\t\t) \t \t\t\tAND \t    \t\t\t    CASE  \t        \t\t\t\t    WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    THEN 1=1 \t\t    \t\t\t\t\tWHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t                END  \t\t",
                "description": null,
                "error": null,
                "hide": 0,
                "includeAll": true,
                "label": "Data Center",
                "multi": true,
                "name": "datacenter_id",
                "options": [],
                "query": "SELECT DISTINCT   CAST ( datacenter_id AS varchar ) AS __value,  CASE          WHEN delete_date IS NULL  \t     \t    THEN datacenter_name \t \tWHEN delete_date IS NOT null  \t      \t    THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  END AS __text  \t\tFROM v4_4_configuration_history_datacenters  \t\tWHERE       \t\t    history_id           \t\t\t    IN               \t\t\t\t(  \t             \t\t\t\t\tSELECT MAX ( a.history_id )  \t\t         \t\t\t\t\tFROM v4_4_configuration_history_datacenters a  \t\t         \t\t\t\t\tGROUP BY a.datacenter_id \t         \t\t\t\t) \t \t\t\tAND datacenter_id  \t         \t\t\t    IN \t\t\t     \t\t\t\t    ( \t\t\t\t\t \t\t\t\t\t\tSELECT DISTINCT datacenter_id \t\t\t\t\t \t\t\t\t\t\tFROM v4_4_configuration_history_clusters \t\t\t\t\t \t\t\t\t\t\tWHERE  \t\t\t\t\t     \t\t\t\t\t\t    cluster_id \t\t\t\t\t         \t\t\t\t\t\t        IN \t\t\t\t\t             \t\t\t\t\t\t            ( \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\tSELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\tFROM v4_4_configuration_history_hosts  \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t) \t\t\t\t\t) \t \t\t\tAND \t    \t\t\t    CASE  \t        \t\t\t\t    WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    THEN 1=1 \t\t    \t\t\t\t\tWHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t                END  \t\t",
                "refresh": 2,
                "regex": "",
                "skipUrlSync": false,
                "sort": 1,
                "tagValuesQuery": "",
                "tags": [],
                "tagsQuery": "",
                "type": "query",
                "useTags": false
            },
            {
                "allValue": "",
                "current": {},
                "datasource": "oVirt DWH",
                "definition": "SELECT DISTINCT        CAST ( cluster_id AS varchar ) AS __value,  \tCASE      \t    WHEN delete_date IS NULL  \t     \t\t    THEN cluster_name \t \t\tWHEN delete_date IS NOT null  \t      \t\t    THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \tEND AS __text  \tFROM v4_4_configuration_history_clusters  \tWHERE       \t    history_id           \t\t    IN               \t\t\t    (  \t             \t\t\t\t\tSELECT MAX ( a.history_id )  \t\t         \t\t\t\t\tFROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\tGROUP BY a.cluster_id \t         \t\t\t\t) \t \t\tAND cluster_id  \t\t    IN \t\t\t     \t\t\t    ( \t\t\t\t\t \t\t\t\t\tSELECT DISTINCT cluster_id \t\t\t\t\t \t\t\t\t\tFROM v4_4_configuration_history_hosts \t\t\t\t \t\t\t\t) \t\tAND \t    \t\t    CASE  \t        \t\t\t    WHEN '$show_deleted'='Yes' \t            \t\t\t\t    THEN 1=1 \t\t    \t\t\t\tWHEN '$show_deleted'='No' \t\t        \t\t\t\t    THEN v4_4_configuration_history_clusters.delete_date ISNULL \t    \t\t\tEND     \t\tAND datacenter_id IN ($datacenter_id)  \t\t",
                "description": null,
                "error": null,
                "hide": 0,
                "includeAll": true,
                "label": "Cluster",
                "multi": true,
                "name": "cluster_id",
                "options": [],
                "query": "SELECT DISTINCT        CAST ( cluster_id AS varchar ) AS __value,  \tCASE      \t    WHEN delete_date IS NULL  \t     \t\t    THEN cluster_name \t \t\tWHEN delete_date IS NOT null  \t      \t\t    THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \tEND AS __text  \tFROM v4_4_configuration_history_clusters  \tWHERE       \t    history_id           \t\t    IN               \t\t\t    (  \t             \t\t\t\t\tSELECT MAX ( a.history_id )  \t\t         \t\t\t\t\tFROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\tGROUP BY a.cluster_id \t         \t\t\t\t) \t \t\tAND cluster_id  \t\t    IN \t\t\t     \t\t\t    ( \t\t\t\t\t \t\t\t\t\tSELECT DISTINCT cluster_id \t\t\t\t\t \t\t\t\t\tFROM v4_4_configuration_history_hosts \t\t\t\t \t\t\t\t) \t\tAND \t    \t\t    CASE  \t        \t\t\t    WHEN '$show_deleted'='Yes' \t            \t\t\t\t    THEN 1=1 \t\t    \t\t\t\tWHEN '$show_deleted'='No' \t\t        \t\t\t\t    THEN v4_4_configuration_history_clusters.delete_date ISNULL \t    \t\t\tEND     \t\tAND datacenter_id IN ($datacenter_id)  \t\t",
                "refresh": 2,
                "regex": "",
                "skipUrlSync": false,
                "sort": 1,
                "tagValuesQuery": "",
                "tags": [],
                "tagsQuery": "",
                "type": "query",
                "useTags": false
            },
            {
                "allValue": null,
                "current": {},
                "datasource": "oVirt DWH",
                "definition": "SELECT DISTINCT   CAST ( host_id AS varchar ) AS __value,  CASE          WHEN delete_date IS NULL  \t     \t    THEN host_name \t \tWHEN delete_date IS NOT null  \t      \t    THEN host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  END AS __text  \t\tFROM v4_4_configuration_history_hosts  \t\tWHERE       \t\t    history_id           \t\t\t    IN               \t\t\t\t(  \t             \t\t\t\t\tSELECT MAX ( a.history_id )  \t\t         \t\t\t\t\tFROM v4_4_configuration_history_hosts a  \t\t         \t\t\t\t\tGROUP BY a.host_id \t         \t\t\t\t) \t \t\t\tAND cluster_id IN ($cluster_id)  \t\t\tAND \t    \t\t\t    CASE  \t        \t\t\t\t    WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    THEN 1=1 \t\t    \t\t\t\t\tWHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    THEN v4_4_configuration_history_hosts.delete_date ISNULL \t                END  \t\t",
                "description": null,
                "error": null,
                "hide": 0,
                "includeAll": true,
                "label": "Host",
                "multi": true,
                "name": "host_id",
                "options": [],
                "query": "SELECT DISTINCT   CAST ( host_id AS varchar ) AS __value,  CASE          WHEN delete_date IS NULL  \t     \t    THEN host_name \t \tWHEN delete_date IS NOT null  \t      \t    THEN host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  END AS __text  \t\tFROM v4_4_configuration_history_hosts  \t\tWHERE       \t\t    history_id           \t\t\t    IN               \t\t\t\t(  \t             \t\t\t\t\tSELECT MAX ( a.history_id )  \t\t         \t\t\t\t\tFROM v4_4_configuration_history_hosts a  \t\t         \t\t\t\t\tGROUP BY a.host_id \t         \t\t\t\t) \t \t\t\tAND cluster_id IN ($cluster_id)  \t\t\tAND \t    \t\t\t    CASE  \t        \t\t\t\t    WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    THEN 1=1 \t\t    \t\t\t\t\tWHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    THEN v4_4_configuration_history_hosts.delete_date ISNULL \t                END  \t\t",
                "refresh": 2,
                "regex": "",
                "skipUrlSync": false,
                "sort": 1,
                "tagValuesQuery": "",
                "tags": [],
                "tagsQuery": "",
                "type": "query",
                "useTags": false
            }
        ]
    },
    "time": {
        "from": "now-30d",
        "to": "now"
    },
    "timepicker": {
        "hidden": false,
        "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
        ],
        "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
        ]
    },
    "timezone": "",
    "title": "RHV - Hosts Trend Dashboard",
    "uid": "HostsTrendDashboard",
    "version": 11
}