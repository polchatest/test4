{
    "annotations": {
        "list": [
            {
                "builtIn": 1,
                "datasource": "-- Grafana --",
                "enable": true,
                "hide": true,
                "iconColor": "rgba(0, 211, 255, 1)",
                "name": "Annotations & Alerts",
                "target": {
                    "limit": 100,
                    "matchAny": false,
                    "tags": [],
                    "type": "dashboard"
                },
                "type": "dashboard"
            }
        ]
    },
    "description": "\u041e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0418.\u0412. (\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430)",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "gnetId": 10991,
    "graphTooltip": 1,
    "id": 1623,
    "iteration": 1648461441395,
    "links": [
        {
            "icon": "doc",
            "tags": [],
            "targetBlank": true,
            "title": "Monitoring with Prometheus & Grafana",
            "tooltip": "",
            "type": "link",
            "url": "https://www.rabbitmq.com/prometheus.html"
        },
        {
            "asDropdown": false,
            "icon": "external link",
            "includeVars": false,
            "keepTime": false,
            "tags": [],
            "targetBlank": true,
            "title": "\u041c\u0435\u0442\u0440\u0438\u043a\u0438",
            "tooltip": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u0440\u0438\u043a",
            "type": "link",
            "url": "https://online.sbis.ru/shared/disk/5d65293c-be7f-4941-a1ba-87e8a556b265"
        }
    ],
    "liveNow": false,
    "panels": [
        {
            "cacheTimeout": null,
            "datasource": "carbon-short",
            "description": "\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0443\u043c\u043c\u0443 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0432\u0441\u0435\u043c \u043f\u043e\u0434\u0430\u043c \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e Type \u0438 RabbitMQ Cluster",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "decimals": 1,
                    "mappings": [
                        {
                            "options": {
                                "match": "null",
                                "result": {
                                    "text": "N/A"
                                }
                            },
                            "type": "special"
                        }
                    ],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "#37872D",
                                "value": null
                            }
                        ]
                    },
                    "unit": "short"
                },
                "overrides": []
            },
            "hideTimeOverride": false,
            "id": 64,
            "interval": null,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "background",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "text": {},
                "textMode": "auto"
            },
            "pluginVersion": "8.2.3",
            "targets": [
                {
                    "expr": "sum(rabbitmq_queue_messages_ready * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "interval": "",
                    "intervalFactor": 1,
                    "legendFormat": "",
                    "refId": "A",
                    "target": "alias(groupByTags(keepLastValue(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_queue_messages_ready', 'pod_name=~${rabbitmq_cluster:regex}'), 2), 'sum', 'name'), 'Ready messages total', false)",
                    "textEditor": false
                }
            ],
            "timeFrom": null,
            "timeShift": null,
            "title": "Ready messages",
            "transformations": [],
            "type": "stat"
        },
        {
            "cacheTimeout": null,
            "datasource": "carbon-short",
            "description": "\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0443\u043c\u043c\u0443 \u0432\u0441\u0435\u0445 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0432 rabbitmq \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043f\u043e \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u0434\u0430\u043c. \n>\u0412\u041d\u0418\u041c\u0410\u041d\u0418\u0415! \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f persecond. \u041d\u0430 \u0434\u043b\u0438\u043d\u043d\u044b\u0445 \u043f\u0435\u0440\u0438\u043e\u0434\u0430\u0445 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043e\u043a\u043e\u043b\u043e\u043d\u0443\u043b\u0435\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "decimals": 1,
                    "mappings": [
                        {
                            "options": {
                                "match": "null",
                                "result": {
                                    "text": "N/A"
                                }
                            },
                            "type": "special"
                        }
                    ],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "#C4162A",
                                "value": null
                            },
                            {
                                "color": "#37872D",
                                "value": -1
                            },
                            {
                                "color": "#37872D"
                            }
                        ]
                    },
                    "unit": "short"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 3,
                "w": 6,
                "x": 6,
                "y": 0
            },
            "hideTimeOverride": true,
            "id": 62,
            "interval": null,
            "links": [],
            "maxDataPoints": null,
            "options": {
                "colorMode": "background",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "text": {},
                "textMode": "auto"
            },
            "pluginVersion": "8.2.3",
            "targets": [
                {
                    "expr": "sum(rate(rabbitmq_channel_messages_published_total[60s]) * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "instant": false,
                    "interval": "",
                    "intervalFactor": 1,
                    "legendFormat": "",
                    "refId": "A",
                    "target": "alias(perSecond(groupByTags(keepLastValue(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_channel_messages_published_total', 'pod_name=~${rabbitmq_cluster:regex}'), 2), 'sum', 'name')), 'Incoming messages total', false)"
                }
            ],
            "timeFrom": "15m",
            "timeShift": "2m",
            "title": "Incoming messages / s",
            "type": "stat"
        },
        {
            "cacheTimeout": null,
            "datasource": "carbon-short",
            "description": "\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0443\u043c\u043c\u0443 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0432\u0441\u0435\u043c \u043f\u043e\u0434\u0430\u043c \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e Type \u0438 RabbitMQ Cluster",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "decimals": 1,
                    "mappings": [
                        {
                            "options": {
                                "match": "null",
                                "result": {
                                    "text": "N/A"
                                }
                            },
                            "type": "special"
                        }
                    ],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "#C4162A",
                                "value": null
                            },
                            {
                                "color": "#37872D",
                                "value": 0
                            },
                            {
                                "color": "#37872D"
                            }
                        ]
                    },
                    "unit": "short"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 3,
                "w": 6,
                "x": 12,
                "y": 0
            },
            "hideTimeOverride": true,
            "id": 41,
            "interval": null,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "background",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "text": {},
                "textMode": "auto"
            },
            "pluginVersion": "8.2.3",
            "targets": [
                {
                    "expr": "sum(rabbitmq_channel_consumers * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "",
                    "refId": "A",
                    "target": "alias(groupByTags(keepLastValue(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_channel_consumers', 'pod_name=~${rabbitmq_cluster:regex}'), 2), 'sum', 'name'), 'Consumers total', false)",
                    "textEditor": false
                }
            ],
            "timeFrom": null,
            "timeShift": null,
            "title": "Consumers",
            "type": "stat"
        },
        {
            "cacheTimeout": null,
            "datasource": "carbon-short",
            "description": "\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0443\u043c\u043c\u0443 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0432\u0441\u0435\u043c \u043f\u043e\u0434\u0430\u043c \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e Type \u0438 RabbitMQ Cluster",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "decimals": 1,
                    "mappings": [
                        {
                            "options": {
                                "match": "null",
                                "result": {
                                    "text": "N/A"
                                }
                            },
                            "type": "special"
                        }
                    ],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "#C4162A",
                                "value": null
                            },
                            {
                                "color": "#37872D",
                                "value": 0
                            },
                            {
                                "color": "#37872D"
                            }
                        ]
                    },
                    "unit": "short"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 3,
                "w": 6,
                "x": 18,
                "y": 0
            },
            "hideTimeOverride": true,
            "id": 37,
            "interval": null,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "background",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "text": {},
                "textMode": "auto"
            },
            "pluginVersion": "8.2.3",
            "targets": [
                {
                    "expr": "sum(rabbitmq_connections * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "instant": false,
                    "interval": "",
                    "intervalFactor": 1,
                    "legendFormat": "",
                    "refId": "A",
                    "target": "alias(groupByTags(keepLastValue(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_connections', 'pod_name=~${rabbitmq_cluster:regex}'), 2), 'sum', 'name'), 'Connections total', false)",
                    "textEditor": false
                }
            ],
            "timeFrom": null,
            "timeShift": "30s",
            "title": "Connections",
            "type": "stat"
        },
        {
            "cacheTimeout": null,
            "datasource": "carbon-short",
            "description": "\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0443\u043c\u043c\u0443 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0432\u0441\u0435\u043c \u043f\u043e\u0434\u0430\u043c \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e Type \u0438 RabbitMQ Cluster",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "decimals": 1,
                    "mappings": [
                        {
                            "options": {
                                "match": "null",
                                "result": {
                                    "text": "N/A"
                                }
                            },
                            "type": "special"
                        }
                    ],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "#37872D",
                                "value": null
                            }
                        ]
                    },
                    "unit": "short"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 3,
                "w": 6,
                "x": 0,
                "y": 3
            },
            "hideTimeOverride": true,
            "id": 65,
            "interval": null,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "background",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "text": {},
                "textMode": "auto"
            },
            "pluginVersion": "8.2.3",
            "targets": [
                {
                    "expr": "sum(rabbitmq_queue_messages_unacked * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "",
                    "refId": "A",
                    "target": "alias(groupByTags(keepLastValue(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_channel_messages_unacked', 'pod_name=~${rabbitmq_cluster:regex}'), 2), 'sum', 'name'), 'Unacknowledged messages', false)"
                }
            ],
            "timeFrom": null,
            "timeShift": "30s",
            "title": "Unacknowledged messages",
            "type": "stat"
        },
        {
            "cacheTimeout": null,
            "datasource": "carbon-short",
            "description": "\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0443\u043c\u043c\u0443 \u0432\u0441\u0435\u0445 \u0438\u0441\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u043e\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0434\u043e\u0432 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439. \u0411\u0435\u0440\u0435\u0442\u0441\u044f \u0441\u0443\u043c\u043c\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439:\n\nprometheus_remote_write.rabbitmq_channel_messages_redelivered_total\nprometheus_remote_write.rabbitmq_channel_messages_delivered_ack_total\nprometheus_remote_write.rabbitmq_channel_messages_delivered_total\nprometheus_remote_write.rabbitmq_channel_messages_acked_total\nprometheus_remote_write.rabbitmq_channel_get_total\nprometheus_remote_write.rabbitmq_channel_get_empty_total\nprometheus_remote_write.rabbitmq_channel_get_ack_total\n>\u0412\u041d\u0418\u041c\u0410\u041d\u0418\u0415! \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f persecond. \u041d\u0430 \u0434\u043b\u0438\u043d\u043d\u044b\u0445 \u043f\u0435\u0440\u0438\u043e\u0434\u0430\u0445 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043e\u043a\u043e\u043b\u043e\u043d\u0443\u043b\u0435\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "decimals": 1,
                    "mappings": [
                        {
                            "options": {
                                "match": "null",
                                "result": {
                                    "text": "N/A"
                                }
                            },
                            "type": "special"
                        }
                    ],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "#C4162A",
                                "value": null
                            },
                            {
                                "color": "#37872D",
                                "value": -1
                            },
                            {
                                "color": "#37872D"
                            }
                        ]
                    },
                    "unit": "short"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 3,
                "w": 6,
                "x": 6,
                "y": 3
            },
            "hideTimeOverride": true,
            "id": 70,
            "interval": null,
            "links": [],
            "maxDataPoints": null,
            "options": {
                "colorMode": "background",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "text": {},
                "textMode": "auto"
            },
            "pluginVersion": "8.2.3",
            "targets": [
                {
                    "expr": "sum(rabbitmq_queue_messages_unacked * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "",
                    "refId": "A",
                    "target": "alias(groupByTags(perSecond(keepLastValue(seriesByTag('namespace=$namespace', 'name=~prometheus_remote_write.rabbitmq_channel_(get_ack_total|get_total|get_empty_total|messages_delivered_ack_total|messages_delivered_total|messages_redelivered_total|messages_acked_total)', 'pod_name=~${rabbitmq_cluster:regex}'), 2)), 'sum', ''), 'Outgoing messages total', false)",
                    "textEditor": false
                }
            ],
            "timeFrom": "15m",
            "timeShift": "2m",
            "title": "Outgoing messages / s",
            "transformations": [],
            "type": "stat"
        },
        {
            "cacheTimeout": null,
            "datasource": "carbon-short",
            "description": "\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0443\u043c\u043c\u0443 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0432\u0441\u0435\u043c \u043f\u043e\u0434\u0430\u043c \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e Type \u0438 RabbitMQ Cluster",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "decimals": 1,
                    "mappings": [
                        {
                            "options": {
                                "match": "null",
                                "result": {
                                    "text": "N/A"
                                }
                            },
                            "type": "special"
                        }
                    ],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "#C4162A",
                                "value": null
                            },
                            {
                                "color": "#37872D",
                                "value": 0
                            },
                            {
                                "color": "#37872D"
                            }
                        ]
                    },
                    "unit": "short"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 3,
                "w": 6,
                "x": 12,
                "y": 3
            },
            "hideTimeOverride": true,
            "id": 38,
            "interval": null,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "background",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "text": {},
                "textMode": "auto"
            },
            "pluginVersion": "8.2.3",
            "targets": [
                {
                    "expr": "sum(rabbitmq_channels * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "",
                    "refId": "A",
                    "target": "alias(groupByTags(keepLastValue(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_channels', 'pod_name=~${rabbitmq_cluster:regex}'), 2), 'sum', ''), 'Channels total', false)"
                }
            ],
            "timeFrom": null,
            "timeShift": "30s",
            "title": "Channels",
            "type": "stat"
        },
        {
            "cacheTimeout": null,
            "datasource": "carbon-short",
            "description": "\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0443\u043c\u043c\u0443 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0432\u0441\u0435\u043c \u043f\u043e\u0434\u0430\u043c \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e Type \u0438 RabbitMQ Cluster",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "decimals": 1,
                    "mappings": [
                        {
                            "options": {
                                "match": "null",
                                "result": {
                                    "text": "N/A"
                                }
                            },
                            "type": "special"
                        }
                    ],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "#C4162A",
                                "value": null
                            },
                            {
                                "color": "#37872D",
                                "value": 0
                            },
                            {
                                "color": "#37872D"
                            }
                        ]
                    },
                    "unit": "short"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 3,
                "w": 6,
                "x": 18,
                "y": 3
            },
            "hideTimeOverride": true,
            "id": 40,
            "interval": null,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "background",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "text": {},
                "textMode": "auto"
            },
            "pluginVersion": "8.2.3",
            "targets": [
                {
                    "expr": "sum(rabbitmq_queues * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "",
                    "refId": "A",
                    "target": "alias(groupByTags(keepLastValue(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_queues', 'pod_name=~${rabbitmq_cluster:regex}'), 2), 'sum', 'name'), 'Queues total', false)",
                    "textEditor": false
                }
            ],
            "timeFrom": null,
            "timeShift": "30s",
            "title": "Queues",
            "type": "stat"
        },
        {
            "cacheTimeout": null,
            "datasource": "carbon-short",
            "description": "\u0415\u0441\u043b\u0438 \u0434\u043e\u0441\u0442\u0438\u0433\u043b\u0438 \u043b\u0438\u043c\u0438\u0442\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 - \u0431\u0443\u0434\u0435\u0442 1",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "mappings": [
                        {
                            "options": {
                                "match": "null",
                                "result": {
                                    "color": "#37872D",
                                    "text": "0"
                                }
                            },
                            "type": "special"
                        }
                    ],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "#37872D",
                                "value": null
                            },
                            {
                                "color": "#37872D",
                                "value": 0
                            },
                            {
                                "color": "#C4162A",
                                "value": 1
                            }
                        ]
                    },
                    "unit": "short"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 3,
                "w": 8,
                "x": 0,
                "y": 6
            },
            "hideTimeOverride": true,
            "id": 85,
            "interval": null,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "background",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "text": {},
                "textMode": "auto"
            },
            "pluginVersion": "8.2.3",
            "targets": [
                {
                    "expr": "sum(rabbitmq_queue_messages_unacked * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "",
                    "refId": "A",
                    "target": "aggregate(seriesByTag('name=prometheus_remote_write.rabbitmq_alarms_file_descriptor_limit', 'namespace=$namespace', 'pod_name=${rabbitmq_cluster:regex}'), 'sum')",
                    "textEditor": false
                }
            ],
            "timeFrom": null,
            "timeShift": "30s",
            "title": "File descriptor limit reached",
            "type": "stat"
        },
        {
            "cacheTimeout": null,
            "datasource": "carbon-short",
            "description": "\u0415\u0441\u043b\u0438 \u0434\u043e\u0441\u0442\u0438\u0433\u043b\u0438 \u043b\u0438\u043c\u0438\u0442\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 - \u0431\u0443\u0434\u0435\u0442 1",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "mappings": [
                        {
                            "options": {
                                "match": "null",
                                "result": {
                                    "color": "#37872D",
                                    "text": "0"
                                }
                            },
                            "type": "special"
                        }
                    ],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "#37872D",
                                "value": null
                            },
                            {
                                "color": "#37872D",
                                "value": 0
                            },
                            {
                                "color": "#C4162A",
                                "value": 1
                            }
                        ]
                    },
                    "unit": "short"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 3,
                "w": 8,
                "x": 8,
                "y": 6
            },
            "hideTimeOverride": true,
            "id": 86,
            "interval": null,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "background",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "text": {},
                "textMode": "auto"
            },
            "pluginVersion": "8.2.3",
            "targets": [
                {
                    "expr": "sum(rabbitmq_queue_messages_unacked * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "",
                    "refId": "A",
                    "target": "aggregate(seriesByTag('name=prometheus_remote_write.rabbitmq_alarms_free_disk_space_watermark', 'namespace=$namespace', 'pod_name=${rabbitmq_cluster:regex}'), 'sum')",
                    "textEditor": false
                }
            ],
            "timeFrom": null,
            "timeShift": "30s",
            "title": "Free disk space limit reached",
            "type": "stat"
        },
        {
            "cacheTimeout": null,
            "datasource": "carbon-short",
            "description": "\u0415\u0441\u043b\u0438 \u0434\u043e\u0441\u0442\u0438\u0433\u043b\u0438 \u043b\u0438\u043c\u0438\u0442\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 - \u0431\u0443\u0434\u0435\u0442 1",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "mappings": [
                        {
                            "options": {
                                "match": "null",
                                "result": {
                                    "color": "#37872D",
                                    "text": "0"
                                }
                            },
                            "type": "special"
                        }
                    ],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "#37872D",
                                "value": null
                            },
                            {
                                "color": "#37872D",
                                "value": 0
                            },
                            {
                                "color": "#C4162A",
                                "value": 1
                            }
                        ]
                    },
                    "unit": "short"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 3,
                "w": 8,
                "x": 16,
                "y": 6
            },
            "hideTimeOverride": true,
            "id": 87,
            "interval": null,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "background",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "text": {},
                "textMode": "auto"
            },
            "pluginVersion": "8.2.3",
            "targets": [
                {
                    "expr": "sum(rabbitmq_queue_messages_unacked * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "",
                    "refId": "A",
                    "target": "aggregate(seriesByTag('name=prometheus_remote_write.rabbitmq_alarms_memory_used_watermark', 'namespace=$namespace', 'pod_name=${rabbitmq_cluster:regex}'), 'sum')",
                    "textEditor": true
                }
            ],
            "timeFrom": null,
            "timeShift": "30s",
            "title": "Memory use limit reached",
            "type": "stat"
        },
        {
            "collapsed": false,
            "datasource": "Tagged",
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 9
            },
            "id": 4,
            "panels": [],
            "title": "NODES",
            "type": "row"
        },
        {
            "datasource": "carbon-short",
            "description": "\u0421\u0432\u043e\u0434\u043d\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043f\u043e \u0436\u0438\u0432\u044b\u043c \u043f\u043e\u0434\u0430\u043c\n- cluster = \u043a\u043b\u0430\u0441\u0442\u0435\u0440 k8s, \u0433\u0434\u0435 \u0440\u0430\u0437\u0432\u0435\u0440\u043d\u0443\u0442 \u043f\u043e\u0434\n- namespace = \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435 k8s, \u0433\u0434\u0435 \u0440\u0430\u0437\u0432\u0435\u0440\u043d\u0443\u0442 \u043f\u043e\u0434\n- pod_name = \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u0430 \u0432 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0435\n- instance = IP \u0438 \u043f\u043e\u0440\u0442 \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0434\u043b\u044f \u043f\u043e\u0434\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043f\u043e\u0440\u0442 15672 \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043d\u0430 \u0432\u0435\u0431 \u043c\u043e\u0440\u0434\u0443 rabbitmq\n- erlang_version = \u0432\u0435\u0440\u0441\u0438\u044f \u0441\u043e\u0444\u0442\u0430 \u0432 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0435 \n- rabbitmq_version = \u0432\u0435\u0440\u0441\u0438\u044f \u0441\u043e\u0444\u0442\u0430 \u0432 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0435 \n- container = \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430. \u0432 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0445 \u043a\u0430\u043a Type\n- pod = \u0435\u0449\u0435 \u043e\u0434\u043d\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u0430, \u0430\u043d\u0430\u043b\u043e\u0433 pod_name. \u0425\u0437 \u0437\u0430\u0447\u0435\u043c \u044d\u0442\u043e \u0434\u0443\u0431\u043b\u0438\u0440\u0443\u0435\u0442\u0441\u044f\n",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "custom": {
                        "align": "center",
                        "displayMode": "auto",
                        "filterable": true
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": []
                    }
                },
                "overrides": [
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "cluster"
                        },
                        "properties": [
                            {
                                "id": "custom.width",
                                "value": 104
                            }
                        ]
                    },
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "pod_name"
                        },
                        "properties": [
                            {
                                "id": "custom.width",
                                "value": 271
                            }
                        ]
                    }
                ]
            },
            "gridPos": {
                "h": 6,
                "w": 24,
                "x": 0,
                "y": 10
            },
            "id": 69,
            "links": [],
            "options": {
                "frameIndex": 1,
                "showHeader": true,
                "sortBy": [
                    {
                        "desc": false,
                        "displayName": "erlang_version"
                    }
                ]
            },
            "pluginVersion": "8.2.3",
            "targets": [
                {
                    "expr": "rabbitmq_build_info * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                    "format": "table",
                    "hide": false,
                    "instant": true,
                    "intervalFactor": 1,
                    "refCount": 0,
                    "refId": "A",
                    "target": "sortByName(groupByTags(seriesByTag('name=prometheus_remote_write.rabbitmq_build_info', 'namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}'), 'sum', 'namespace', 'pod_name'), true, false)",
                    "textEditor": false
                }
            ],
            "timeFrom": null,
            "timeShift": null,
            "title": "Pods overview",
            "transformations": [
                {
                    "id": "labelsToFields",
                    "options": {}
                },
                {
                    "id": "reduce",
                    "options": {
                        "includeTimeField": false,
                        "mode": "reduceFields",
                        "reducers": [
                            "lastNotNull"
                        ]
                    }
                },
                {
                    "id": "merge",
                    "options": {}
                },
                {
                    "id": "organize",
                    "options": {
                        "excludeByName": {
                            "Time": true,
                            "Value": true,
                            "app_kubernetes_io_component": true,
                            "app_kubernetes_io_instance": true,
                            "app_kubernetes_io_name": true,
                            "app_tensor_ru_shard": true,
                            "app_tensor_ru_stage": true,
                            "cluster": false,
                            "endpoint": true,
                            "interval": true,
                            "job": true,
                            "name": true,
                            "namespace": false,
                            "pod_template_hash": true,
                            "prometheus_client_version": true,
                            "prometheus_plugin_version": true
                        },
                        "indexByName": {
                            "Time": 0,
                            "Value": 19,
                            "app_kubernetes_io_component": 7,
                            "app_kubernetes_io_instance": 8,
                            "app_kubernetes_io_name": 9,
                            "app_tensor_ru_shard": 10,
                            "app_tensor_ru_stage": 11,
                            "cluster": 1,
                            "erlang_version": 6,
                            "instance": 5,
                            "interval": 12,
                            "job": 13,
                            "name": 14,
                            "namespace": 3,
                            "node_name": 2,
                            "pod_name": 4,
                            "pod_template_hash": 15,
                            "prometheus_client_version": 16,
                            "prometheus_plugin_version": 17,
                            "rabbitmq_version": 18
                        },
                        "renameByName": {}
                    }
                }
            ],
            "type": "table"
        },
        {
            "collapsed": false,
            "datasource": "Tagged",
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 16
            },
            "id": 46,
            "panels": [],
            "title": "CONNECTIONS",
            "type": "row"
        },
        {
            "aliasColors": {},
            "bars": false,
            "cacheTimeout": null,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": 1,
            "description": "Total number of client connections.\n\nIf this metric grows monotonically it is highly likely a connection leak in one of the applications. Confirm connection leaks by using the _Connections opened_ and _Connections closed_ metrics.\n\n* [Connection Leak](https://www.rabbitmq.com/connections.html#monitoring)\n* [Connections](https://www.rabbitmq.com/connections.html)",
            "fieldConfig": {
                "defaults": {
                    "links": [],
                    "unit": "short"
                },
                "overrides": []
            },
            "fill": 10,
            "fillGradient": 0,
            "gridPos": {
                "h": 5,
                "w": 12,
                "x": 0,
                "y": 17
            },
            "hiddenSeries": false,
            "hideTimeOverride": false,
            "id": 47,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": false,
                "max": true,
                "min": true,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "connected",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [
                {
                    "$$hashKey": "object:2664",
                    "alias": "Total",
                    "fill": 0,
                    "stack": false
                }
            ],
            "spaceLength": 10,
            "stack": true,
            "steppedLine": false,
            "targets": [
                {
                    "expr": "rabbitmq_connections * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "A",
                    "target": "aliasByTags(grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections'), '5min'), 'Average'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "rabbitmq_connections * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "B",
                    "target": "aliasByTags(grep(alias(movingMax(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections'), '5min'), 'Max'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "rabbitmq_connections * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(movingMin(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections'), '5min'), 'Min'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "rabbitmq_connections * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "D",
                    "target": "sortByName(aliasByTags(keepLastValue(consolidateBy(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections'), '$function'), 2), 'cluster', 'pod_name'), true, false)",
                    "textEditor": false
                },
                {
                    "expr": "rabbitmq_connections * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "E",
                    "target": "alias(sumSeries(keepLastValue(consolidateBy(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections'), '$function'), 2)), 'Total', false)",
                    "textEditor": false
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Total connections",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:918",
                    "decimals": 1,
                    "format": "short",
                    "label": "",
                    "logBase": 1,
                    "max": null,
                    "min": "0",
                    "show": true
                },
                {
                    "$$hashKey": "object:919",
                    "decimals": 1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "cacheTimeout": null,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": 1,
            "description": "The rate of new connections opened by clients. Connections are expected to be long-lived.\n\nLow sustained values above zero are to be expected. High rates may be indicative of connection churn or mass connection recovery.\n\n* [Connection Leak](https://www.rabbitmq.com/connections.html#monitoring)\n* [Connections](https://www.rabbitmq.com/connections.html)",
            "fieldConfig": {
                "defaults": {
                    "links": [],
                    "unit": "short"
                },
                "overrides": []
            },
            "fill": 10,
            "fillGradient": 0,
            "gridPos": {
                "h": 5,
                "w": 6,
                "x": 12,
                "y": 17
            },
            "hiddenSeries": false,
            "id": 48,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": true,
                "min": true,
                "rightSide": false,
                "show": false,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "connected",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [
                {
                    "$$hashKey": "object:2833",
                    "alias": "Total",
                    "fill": 0,
                    "stack": false
                }
            ],
            "spaceLength": 10,
            "stack": true,
            "steppedLine": false,
            "targets": [
                {
                    "expr": "sum(rate(rabbitmq_connections_opened_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "interval": "",
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "A",
                    "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections_opened_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "sum(rate(rabbitmq_connections_opened_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "interval": "",
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "B",
                    "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections_opened_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "sum(rate(rabbitmq_connections_opened_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "interval": "",
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections_opened_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "sum(rate(rabbitmq_connections_opened_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "interval": "",
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "D",
                    "target": "aliasByTags(consolidateBy(keepLastValue(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections_opened_total')), 2), '$function'), 'cluster', 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "sum(rate(rabbitmq_connections_opened_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "interval": "",
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "E",
                    "target": "alias(sumSeries(consolidateBy(keepLastValue(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections_opened_total')), 2), '$function')), 'Total', false)",
                    "textEditor": false
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Connections opened / s",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:709",
                    "decimals": 1,
                    "format": "short",
                    "label": "",
                    "logBase": 1,
                    "max": null,
                    "min": "0",
                    "show": true
                },
                {
                    "$$hashKey": "object:710",
                    "decimals": 1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "cacheTimeout": null,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": 1,
            "description": "The rate of connections closed. Connections are expected to be long-lived.\n\nLow sustained values above zero are to be expected. High rates may be indicative of connection churn or mass connection recovery.\n\n* [Connections](https://www.rabbitmq.com/connections.html)",
            "fieldConfig": {
                "defaults": {
                    "links": [],
                    "unit": "short"
                },
                "overrides": []
            },
            "fill": 10,
            "fillGradient": 0,
            "gridPos": {
                "h": 5,
                "w": 6,
                "x": 18,
                "y": 17
            },
            "hiddenSeries": false,
            "id": 49,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": true,
                "min": true,
                "rightSide": false,
                "show": false,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "connected",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [
                {
                    "$$hashKey": "object:2923",
                    "alias": "Total",
                    "fill": 0,
                    "stack": false
                }
            ],
            "spaceLength": 10,
            "stack": true,
            "steppedLine": false,
            "targets": [
                {
                    "expr": "sum(rate(rabbitmq_connections_closed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "A",
                    "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections_closed_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "sum(rate(rabbitmq_connections_closed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "B",
                    "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections_closed_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "sum(rate(rabbitmq_connections_closed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections_closed_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "sum(rate(rabbitmq_connections_closed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "D",
                    "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections_closed_total')), '$function'), 2), 'cluster', 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "sum(rate(rabbitmq_connections_closed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "E",
                    "target": "alias(sumSeries(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_connections_closed_total')), '$function'), 2)), 'Total', false)",
                    "textEditor": false
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Connections closed / s",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:490",
                    "decimals": 1,
                    "format": "short",
                    "label": "",
                    "logBase": 1,
                    "max": null,
                    "min": "0",
                    "show": true
                },
                {
                    "$$hashKey": "object:491",
                    "decimals": 1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "cacheTimeout": null,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": 0,
            "description": "\u0421\u043a\u0440\u0438\u043f\u0442 \u044d\u043c\u0443\u043b\u044f\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0442\u0440\u0438\u0433\u0433\u0435\u0440 \u043f\u043e \u043d\u0435\u043c\u0443 https://dpc-docs.tensor.ru/pages/viewpage.action?pageId=20087891\n\u0421\u043a\u0440\u0438\u043f\u0442 \u044d\u043c\u0443\u043b\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u0432 \u043a\u0430\u0444\u043a\u0443. \u0422.\u043a. \u0441\u043a\u0440\u0438\u043f\u0442 \u043d\u0435 \u0430\u0434\u043f\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u043e\u0434 \u0447\u0435\u0442\u043a\u0438\u0439 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438 NULL \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0438",
            "fieldConfig": {
                "defaults": {
                    "links": [],
                    "unit": "s"
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 5,
                "w": 24,
                "x": 0,
                "y": 22
            },
            "hiddenSeries": false,
            "id": 92,
            "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": false,
                "max": true,
                "min": true,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "connected",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "expr": "sum(rate(rabbitmq_connections_closed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "E",
                    "target": "aliasSub(aliasByTags(seriesByTag('name=eventmq-web.time', 'contur=prod', 'type=~.*'), 'type'), ',0\\)', '')",
                    "textEditor": false
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Stomp browser test",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:490",
                    "decimals": 0,
                    "format": "s",
                    "label": "",
                    "logBase": 1,
                    "max": null,
                    "min": "0",
                    "show": true
                },
                {
                    "$$hashKey": "object:491",
                    "decimals": 0,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "collapsed": false,
            "datasource": null,
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 27
            },
            "id": 91,
            "panels": [],
            "title": "LIMITS",
            "type": "row"
        },
        {
            "aliasColors": {},
            "bars": false,
            "cacheTimeout": null,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": 1,
            "description": "If the value is zero or less, the memory alarm will be triggered and all publishing connections across all cluster nodes will be blocked.\n\nThis value can temporarily go negative because the memory alarm is triggered with a slight delay.\n\nThe kernel's view of the amount of memory used by the node can differ from what the node itself can observe. This means that this value can be negative for a sustained period of time.\n\nBy default nodes use resident set size (RSS) to compute how much memory they use. This strategy can be changed (see the guides below).\n\n* [Alarms](https://www.rabbitmq.com/alarms.html)\n* [Memory Alarms](https://www.rabbitmq.com/memory.html)\n* [Reasoning About Memory Use](https://www.rabbitmq.com/memory-use.html)\n* [Blocked Connection Notifications](https://www.rabbitmq.com/connection-blocked.html)",
            "fieldConfig": {
                "defaults": {
                    "links": [],
                    "unit": "bytes"
                },
                "overrides": []
            },
            "fill": 0,
            "fillGradient": 0,
            "gridPos": {
                "h": 7,
                "w": 12,
                "x": 0,
                "y": 28
            },
            "hiddenSeries": false,
            "id": 7,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": false,
                "max": true,
                "min": true,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "expr": "(rabbitmq_resident_memory_limit_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_resident_memory_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 2,
                    "refId": "A",
                    "target": "aliasByTags(grep(alias(diffSeriesLists(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_resident_memory_limit_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), #B), 'Average'), '$function'), 'pod_name')",
                    "targetFull": "aliasByTags(grep(alias(diffSeriesLists(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_resident_memory_limit_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_resident_memory_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Average'), '$function')), 'Average'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "B",
                    "target": "grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_resident_memory_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Average'), '$function')"
                },
                {
                    "expr": "(rabbitmq_resident_memory_limit_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_resident_memory_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 2,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(diffSeriesLists(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_resident_memory_limit_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), #D), 'Max'), '$function'), 'pod_name')",
                    "targetFull": "aliasByTags(grep(alias(diffSeriesLists(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_resident_memory_limit_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_resident_memory_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Max'), '$function')), 'Max'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "D",
                    "target": "grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_resident_memory_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Max'), '$function')",
                    "textEditor": false
                },
                {
                    "expr": "(rabbitmq_resident_memory_limit_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_resident_memory_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 2,
                    "refId": "E",
                    "target": "aliasByTags(grep(alias(diffSeriesLists(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_resident_memory_limit_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), #F), 'Min'), '$function'), 'pod_name')",
                    "targetFull": "aliasByTags(grep(alias(diffSeriesLists(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_resident_memory_limit_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_resident_memory_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Min'), '$function')), 'Min'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 3,
                    "refId": "F",
                    "target": "grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_resident_memory_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Min'), '$function')",
                    "textEditor": false
                },
                {
                    "expr": "(rabbitmq_resident_memory_limit_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_resident_memory_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 3,
                    "refId": "G",
                    "target": "aliasByTags(diffSeriesLists(consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_resident_memory_limit_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '$function'), #H), 'cluster', 'pod_name')",
                    "targetFull": "aliasByTags(diffSeriesLists(consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_resident_memory_limit_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '$function'), consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_resident_memory_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '$function')), 'cluster', 'pod_name')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "H",
                    "target": "consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_resident_memory_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '$function')",
                    "textEditor": false
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Memory available before publishers blocked",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:6603",
                    "decimals": 1,
                    "format": "bytes",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": "0",
                    "show": true
                },
                {
                    "$$hashKey": "object:6604",
                    "decimals": 1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "cacheTimeout": null,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": 1,
            "description": "This metric is reported for the partition where the RabbitMQ data directory is stored.\n\nIf the value is zero or less, the disk alarm will be triggered and all publishing connections across all cluster nodes will be blocked.\n\nThis value can temporarily go negative because the free disk space alarm is triggered with a slight delay.\n\n* [Alarms](https://www.rabbitmq.com/alarms.html)\n* [Disk Space Alarms](https://www.rabbitmq.com/disk-alarms.html)\n* [Disk Space](https://www.rabbitmq.com/production-checklist.html#resource-limits-disk-space)\n* [Persistence Configuration](https://www.rabbitmq.com/persistence-conf.html)\n* [Blocked Connection Notifications](https://www.rabbitmq.com/connection-blocked.html)",
            "fieldConfig": {
                "defaults": {
                    "links": [],
                    "unit": "short"
                },
                "overrides": []
            },
            "fill": 0,
            "fillGradient": 0,
            "gridPos": {
                "h": 7,
                "w": 12,
                "x": 12,
                "y": 28
            },
            "hiddenSeries": false,
            "id": 8,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": false,
                "max": true,
                "min": true,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "expr": "rabbitmq_disk_space_available_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "A",
                    "target": "aliasByTags(grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_disk_space_available_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Average'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "rabbitmq_disk_space_available_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "B",
                    "target": "aliasByTags(grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_disk_space_available_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Max'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "rabbitmq_disk_space_available_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_disk_space_available_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Min'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "rabbitmq_disk_space_available_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 0,
                    "refId": "D",
                    "target": "aliasByTags(consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_disk_space_available_bytes', 'pod_name=~${rabbitmq_cluster:regex}'), '$function'), 'cluster', 'pod_name')",
                    "textEditor": false
                }
            ],
            "thresholds": [
                {
                    "$$hashKey": "object:6423",
                    "colorMode": "critical",
                    "fill": true,
                    "line": true,
                    "op": "lt",
                    "value": 1073741824,
                    "yaxis": "left"
                },
                {
                    "$$hashKey": "object:6424",
                    "colorMode": "warning",
                    "fill": true,
                    "line": true,
                    "op": "lt",
                    "value": 5368709120,
                    "yaxis": "left"
                }
            ],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Disk space available before publishers blocked",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:6395",
                    "decimals": 1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": "0",
                    "show": true
                },
                {
                    "$$hashKey": "object:6396",
                    "decimals": 1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "cacheTimeout": null,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": 1,
            "description": "When this value reaches zero, new connections will not be accepted and disk write operations may fail.\n\nClient libraries, peer nodes and CLI tools will not be able to connect when the node runs out of available file descriptors.\n\n* [Open File Handles Limit](https://www.rabbitmq.com/production-checklist.html#resource-limits-file-handle-limit)",
            "fieldConfig": {
                "defaults": {
                    "links": [],
                    "unit": "short"
                },
                "overrides": []
            },
            "fill": 0,
            "fillGradient": 0,
            "gridPos": {
                "h": 7,
                "w": 12,
                "x": 0,
                "y": 35
            },
            "hiddenSeries": false,
            "id": 2,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": false,
                "max": true,
                "min": true,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "expr": "(rabbitmq_process_max_fds * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_fds * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 3,
                    "refId": "A",
                    "target": "grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Average'), '$function')"
                },
                {
                    "hide": true,
                    "refCount": 3,
                    "refId": "B",
                    "target": "grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Average'), '$function')"
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(diffSeriesLists(movingAverage(#A, '1min'), #B), 'Average'), '$function'), 'pod_name')",
                    "targetFull": "aliasByTags(grep(alias(diffSeriesLists(movingAverage(grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Average'), '$function'), '1min'), grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Average'), '$function')), 'Average'), '$function'), 'pod_name')"
                },
                {
                    "expr": "(rabbitmq_process_max_fds * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_fds * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 3,
                    "refId": "D",
                    "target": "grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Max'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 3,
                    "refId": "E",
                    "target": "grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Max'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "F",
                    "target": "aliasByTags(grep(alias(diffSeriesLists(movingMax(#D, '1min'), #E), 'Max'), '$function'), 'pod_name')",
                    "targetFull": "aliasByTags(grep(alias(diffSeriesLists(movingMax(grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Max'), '$function'), '1min'), grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Max'), '$function')), 'Max'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "(rabbitmq_process_max_fds * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_fds * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 3,
                    "refId": "G",
                    "target": "grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Min'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 3,
                    "refId": "H",
                    "target": "grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Min'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "I",
                    "target": "aliasByTags(grep(alias(diffSeriesLists(movingMin(#G, '1min'), #H), 'Min'), '$function'), 'pod_name')",
                    "targetFull": "aliasByTags(grep(alias(diffSeriesLists(movingMin(grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Min'), '$function'), '1min'), grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Min'), '$function')), 'Min'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "(rabbitmq_process_max_fds * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_fds * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 2,
                    "refId": "J",
                    "target": "aliasByTags(diffSeriesLists(consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '$function'), #K), 'cluster', 'pod_name')",
                    "targetFull": "aliasByTags(diffSeriesLists(consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '$function'), consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '$function')), 'cluster', 'pod_name')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "K",
                    "target": "consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_fds', 'pod_name=~${rabbitmq_cluster:regex}'), '$function')",
                    "textEditor": false
                }
            ],
            "thresholds": [
                {
                    "$$hashKey": "object:6050",
                    "colorMode": "critical",
                    "fill": true,
                    "line": true,
                    "op": "lt",
                    "value": 500,
                    "yaxis": "left"
                },
                {
                    "$$hashKey": "object:6051",
                    "colorMode": "warning",
                    "fill": true,
                    "line": true,
                    "op": "lt",
                    "value": 1000,
                    "yaxis": "left"
                }
            ],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "File descriptors available",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:6022",
                    "decimals": 1,
                    "format": "short",
                    "label": "",
                    "logBase": 1,
                    "max": null,
                    "min": "0",
                    "show": true
                },
                {
                    "$$hashKey": "object:6023",
                    "decimals": 1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "cacheTimeout": null,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": 1,
            "description": "When this value reaches zero, new connections will not be accepted.\n\nClient libraries, peer nodes and CLI tools will not be able to connect when the node runs out of available file descriptors.\n\n* [Networking and RabbitMQ](https://www.rabbitmq.com/networking.html)",
            "fieldConfig": {
                "defaults": {
                    "links": [],
                    "unit": "short"
                },
                "overrides": []
            },
            "fill": 0,
            "fillGradient": 0,
            "gridPos": {
                "h": 7,
                "w": 12,
                "x": 12,
                "y": 35
            },
            "hiddenSeries": false,
            "id": 5,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": false,
                "max": true,
                "min": true,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "expr": "(rabbitmq_process_max_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 3,
                    "refId": "A",
                    "target": "grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Average'), '$function')"
                },
                {
                    "hide": true,
                    "refCount": 3,
                    "refId": "B",
                    "target": "grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Average'), '$function')"
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(diffSeriesLists(movingAverage(#A, '1min'), #B), 'Average'), '$function'), 'pod_name')",
                    "targetFull": "aliasByTags(grep(alias(diffSeriesLists(movingAverage(grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Average'), '$function'), '1min'), grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Average'), '$function')), 'Average'), '$function'), 'pod_name')"
                },
                {
                    "expr": "(rabbitmq_process_max_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 3,
                    "refId": "D",
                    "target": "grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Max'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 3,
                    "refId": "E",
                    "target": "grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Max'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "F",
                    "target": "aliasByTags(grep(alias(diffSeriesLists(movingMax(#D, '1min'), #E), 'Max'), '$function'), 'pod_name')",
                    "targetFull": "aliasByTags(grep(alias(diffSeriesLists(movingMax(grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Max'), '$function'), '1min'), grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Max'), '$function')), 'Max'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "(rabbitmq_process_max_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 3,
                    "refId": "G",
                    "target": "grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Min'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 3,
                    "refId": "H",
                    "target": "grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Min'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "I",
                    "target": "aliasByTags(grep(alias(diffSeriesLists(movingMin(#G, '1min'), #H), 'Min'), '$function'), 'pod_name')",
                    "targetFull": "aliasByTags(grep(alias(diffSeriesLists(movingMin(grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Min'), '$function'), '1min'), grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Min'), '$function')), 'Min'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "(rabbitmq_process_max_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 2,
                    "refId": "J",
                    "target": "aliasByTags(diffSeriesLists(consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '$function'), #K), 'cluster', 'pod_name')",
                    "targetFull": "aliasByTags(diffSeriesLists(consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_max_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '$function'), consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '$function')), 'cluster', 'pod_name')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "K",
                    "target": "consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_process_open_tcp_sockets', 'pod_name=~${rabbitmq_cluster:regex}'), '$function')",
                    "textEditor": false
                }
            ],
            "thresholds": [
                {
                    "$$hashKey": "object:5852",
                    "colorMode": "critical",
                    "fill": true,
                    "line": true,
                    "op": "lt",
                    "value": 500,
                    "yaxis": "left"
                },
                {
                    "$$hashKey": "object:5853",
                    "colorMode": "warning",
                    "fill": true,
                    "line": true,
                    "op": "lt",
                    "value": 1000,
                    "yaxis": "left"
                }
            ],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "TCP sockets available",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:5824",
                    "decimals": 1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": "0",
                    "show": true
                },
                {
                    "$$hashKey": "object:5825",
                    "decimals": 1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "cacheTimeout": null,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": 1,
            "description": "https://online.sbis.ru/shared/disk/5d65293c-be7f-4941-a1ba-87e8a556b265",
            "fieldConfig": {
                "defaults": {
                    "links": [],
                    "unit": "short"
                },
                "overrides": []
            },
            "fill": 0,
            "fillGradient": 0,
            "gridPos": {
                "h": 7,
                "w": 12,
                "x": 0,
                "y": 42
            },
            "hiddenSeries": false,
            "id": 88,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": false,
                "max": true,
                "min": true,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "expr": "(rabbitmq_process_max_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 3,
                    "refId": "A",
                    "target": "grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_limit', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Average'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 3,
                    "refId": "B",
                    "target": "grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_used', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Average'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(diffSeriesLists(movingAverage(#A, '1min'), #B), 'Average'), '$function'), 'pod_name')",
                    "targetFull": "aliasByTags(grep(alias(diffSeriesLists(movingAverage(grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_limit', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Average'), '$function'), '1min'), grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_used', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Average'), '$function')), 'Average'), '$function'), 'pod_name')"
                },
                {
                    "expr": "(rabbitmq_process_max_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 3,
                    "refId": "D",
                    "target": "grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_limit', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Max'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 3,
                    "refId": "E",
                    "target": "grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_used', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Max'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "F",
                    "target": "aliasByTags(grep(alias(diffSeriesLists(movingMax(#D, '1min'), #E), 'Max'), '$function'), 'pod_name')",
                    "targetFull": "aliasByTags(grep(alias(diffSeriesLists(movingMax(grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_limit', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Max'), '$function'), '1min'), grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_used', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Max'), '$function')), 'Max'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "(rabbitmq_process_max_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 3,
                    "refId": "G",
                    "target": "grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_limit', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Min'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 3,
                    "refId": "H",
                    "target": "grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_used', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Min'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "I",
                    "target": "aliasByTags(grep(alias(diffSeriesLists(movingMin(#G, '1min'), #H), 'Min'), '$function'), 'pod_name')",
                    "targetFull": "aliasByTags(grep(alias(diffSeriesLists(movingMin(grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_limit', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Min'), '$function'), '1min'), grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_used', 'pod_name=~${rabbitmq_cluster:regex}'), '1min'), 'Min'), '$function')), 'Min'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "(rabbitmq_process_max_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 2,
                    "refId": "J",
                    "target": "aliasByTags(diffSeriesLists(consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_limit', 'pod_name=~${rabbitmq_cluster:regex}'), '$function'), #K), 'cluster', 'pod_name')",
                    "targetFull": "aliasByTags(diffSeriesLists(consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_limit', 'pod_name=~${rabbitmq_cluster:regex}'), '$function'), consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_used', 'pod_name=~${rabbitmq_cluster:regex}'), '$function')), 'cluster', 'pod_name')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "K",
                    "target": "consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_erlang_processes_used', 'pod_name=~${rabbitmq_cluster:regex}'), '$function')",
                    "textEditor": false
                }
            ],
            "thresholds": [
                {
                    "$$hashKey": "object:5852",
                    "colorMode": "critical",
                    "fill": true,
                    "line": true,
                    "op": "lt",
                    "value": 500,
                    "yaxis": "left"
                },
                {
                    "$$hashKey": "object:5853",
                    "colorMode": "warning",
                    "fill": true,
                    "line": true,
                    "op": "lt",
                    "value": 1000,
                    "yaxis": "left"
                }
            ],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Erlang processes available",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:5824",
                    "decimals": 1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": "0",
                    "show": true
                },
                {
                    "$$hashKey": "object:5825",
                    "decimals": 1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "collapsed": false,
            "datasource": "carbon",
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 49
            },
            "id": 72,
            "panels": [],
            "title": "CONTAINERS",
            "type": "row"
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "description": "\u0421\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0435 \u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u0438\u0435 CPU \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443. 1 \u044f\u0434\u0440\u043e = 100% CPU.\n\u0411\u0435\u0440\u0435\u0442\u0441\u044f \u0443\u043f\u043b\u043e\u0442\u043d\u0435\u043d\u0438\u0435 (consolidation) \u0442\u043e\u0447\u0435\u043a \u0438 \u0434\u0430\u043b\u0435\u0435 \u043e\u043d\u0438 \u0441\u0443\u043c\u043c\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043f\u043e\u0434\u0430.",
            "fieldConfig": {
                "defaults": {
                    "unit": "percentunit"
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 9,
                "w": 8,
                "x": 0,
                "y": 50
            },
            "hiddenSeries": false,
            "id": 74,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": false,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "A",
                    "target": "aliasByTags(grep(alias(groupByTags(movingAverage(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_usage_seconds_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), 'sum', 'container', 'pod'), 'Average'), '$function'), 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "B",
                    "target": "aliasByTags(grep(alias(groupByTags(movingMax(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_usage_seconds_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), 'sum', 'container', 'pod'), 'Max'), '$function'), 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(groupByTags(movingMin(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_usage_seconds_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), 'sum', 'container', 'pod'), 'Min'), '$function'), 'pod')",
                    "textEditor": false
                },
                {
                    "hide": false,
                    "refCount": 0,
                    "refId": "D",
                    "target": "aliasByTags(groupByTags(consolidateBy(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_usage_seconds_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '$function'), 'sum', 'container', 'pod'), 'cluster', 'pod')",
                    "textEditor": false
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "CPU",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:269",
                    "format": "percentunit",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "$$hashKey": "object:270",
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "description": "\u0421\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0435 \u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u0438\u0435 CPU Throttling \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443. \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u043f\u0443\u0441\u043a \u0442\u0430\u043a\u0442\u043e\u0432 CPU.\n\u0411\u0435\u0440\u0435\u0442\u0441\u044f \u0443\u043f\u043b\u043e\u0442\u043d\u0435\u043d\u0438\u0435 (consolidation) \u0442\u043e\u0447\u0435\u043a \u0438 \u0434\u0430\u043b\u0435\u0435 \u043e\u043d\u0438 \u0441\u0443\u043c\u043c\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043f\u043e\u0434\u0430.",
            "fieldConfig": {
                "defaults": {
                    "unit": "percentunit"
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 9,
                "w": 8,
                "x": 8,
                "y": 50
            },
            "hiddenSeries": false,
            "id": 75,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": false,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "A",
                    "target": "aliasByTags(grep(alias(groupByTags(divideSeriesLists(movingAverage(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_throttled_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), #B), 'sum', 'container', 'pod'), 'Average'), '$function'), 'pod')",
                    "targetFull": "aliasByTags(grep(alias(groupByTags(divideSeriesLists(movingAverage(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_throttled_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), grep(alias(movingAverage(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), 'Average'), '$function')), 'sum', 'container', 'pod'), 'Average'), '$function'), 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "B",
                    "target": "grep(alias(movingAverage(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), 'Average'), '$function')"
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(groupByTags(divideSeriesLists(movingMax(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_throttled_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), #D), 'sum', 'container', 'pod'), 'Max'), '$function'), 'pod')",
                    "targetFull": "aliasByTags(grep(alias(groupByTags(divideSeriesLists(movingMax(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_throttled_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), grep(alias(movingMax(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), 'Max'), '$function')), 'sum', 'container', 'pod'), 'Max'), '$function'), 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "D",
                    "target": "grep(alias(movingMax(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), 'Max'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "E",
                    "target": "aliasByTags(grep(alias(groupByTags(divideSeriesLists(movingMin(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_throttled_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), #F), 'sum', 'container', 'pod'), 'Min'), '$function'), 'pod')",
                    "targetFull": "aliasByTags(grep(alias(groupByTags(divideSeriesLists(movingMin(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_throttled_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), grep(alias(movingMin(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), 'Min'), '$function')), 'sum', 'container', 'pod'), 'Min'), '$function'), 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 3,
                    "refId": "F",
                    "target": "grep(alias(movingMin(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '5min'), 'Min'), '$function')",
                    "textEditor": false
                },
                {
                    "hide": false,
                    "refCount": 3,
                    "refId": "G",
                    "target": "aliasByTags(groupByTags(divideSeriesLists(consolidateBy(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_throttled_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '$function'), #H), 'sum', 'container', 'pod'), 'cluster', 'pod')",
                    "targetFull": "aliasByTags(groupByTags(divideSeriesLists(consolidateBy(perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_throttled_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '$function'), perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}'))), 'sum', 'container', 'pod'), 'cluster', 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 2,
                    "refId": "H",
                    "target": "perSecond(seriesByTag('name=prometheus_remote_write.container_cpu_cfs_periods_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}'))",
                    "textEditor": false
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "CPU Throttling ",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:269",
                    "format": "percentunit",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "$$hashKey": "object:270",
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "description": "\u041f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u0438\u0435 \u043f\u0430\u043c\u044f\u0442\u0438 \u0432\u0441\u0435\u043c\u0438 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430\u043c\u0438 \u043f\u043e\u0434\u0430.",
            "fieldConfig": {
                "defaults": {
                    "unit": "bytes"
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 9,
                "w": 8,
                "x": 16,
                "y": 50
            },
            "hiddenSeries": false,
            "id": 76,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": false,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "A",
                    "target": "aliasByTags(grep(alias(groupByTags(movingAverage(seriesByTag('name=prometheus_remote_write.container_memory_usage_bytes', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}'), '5min'), 'sum', 'container', 'pod'), 'Average'), '$function'), 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "B",
                    "target": "aliasByTags(grep(alias(groupByTags(movingMax(seriesByTag('name=prometheus_remote_write.container_memory_usage_bytes', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}'), '5min'), 'sum', 'container', 'pod'), 'Max'), '$function'), 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(groupByTags(movingMin(seriesByTag('name=prometheus_remote_write.container_memory_usage_bytes', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}'), '5min'), 'sum', 'container', 'pod'), 'Min'), '$function'), 'pod')",
                    "textEditor": false
                },
                {
                    "hide": false,
                    "refCount": 0,
                    "refId": "D",
                    "target": "aliasByTags(groupByTags(consolidateBy(seriesByTag('name=prometheus_remote_write.container_memory_usage_bytes', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}'), '$function'), 'sum', 'container', 'pod'), 'cluster', 'pod')",
                    "textEditor": false
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Memory",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:269",
                    "format": "bytes",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "$$hashKey": "object:270",
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": 1,
            "description": "RX \u0442\u0440\u0430\u0444\u0438\u043a \u043f\u043e \u0432\u0441\u0435\u043c\u0443 \u043f\u043e\u0434\u0443. \u041a\u043e\u043b-\u0432\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0431\u0430\u0439\u0442 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443.",
            "fieldConfig": {
                "defaults": {
                    "unit": "binBps"
                },
                "overrides": []
            },
            "fill": 5,
            "fillGradient": 0,
            "gridPos": {
                "h": 9,
                "w": 12,
                "x": 0,
                "y": 59
            },
            "hiddenSeries": false,
            "id": 89,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": false,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": true,
            "steppedLine": false,
            "targets": [
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "A",
                    "target": "aliasByTags(grep(alias(movingAverage(perSecond(groupByTags(seriesByTag('name=~prometheus_remote_write.container_network_(receive|transmit)_bytes_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}'), 'sum', 'container', 'pod')), '5min'), 'Average'), '$function'), 1, 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "B",
                    "target": "aliasByTags(grep(alias(movingMax(perSecond(groupByTags(seriesByTag('name=~prometheus_remote_write.container_network_(receive|transmit)_bytes_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}'), 'sum', 'container', 'pod')), '5min'), 'Max'), '$function'), 1, 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(movingMin(perSecond(groupByTags(seriesByTag('name=~prometheus_remote_write.container_network_(receive|transmit)_bytes_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}'), 'sum', 'container', 'pod')), '5min'), 'Min'), '$function'), 1, 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "D",
                    "target": "aliasByTags(groupByTags(consolidateBy(perSecond(seriesByTag('name=prometheus_remote_write.container_network_transmit_bytes_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '$function'), 'sum', 'container', 'pod'), 1, 'pod')",
                    "textEditor": false
                },
                {
                    "hide": false,
                    "refCount": 0,
                    "refId": "E",
                    "target": "aliasByTags(groupByTags(consolidateBy(perSecond(seriesByTag('name=prometheus_remote_write.container_network_receive_bytes_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '$function'), 'sum', 'container', 'pod'), 1, 'cluster', 'pod')",
                    "textEditor": false
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Network RX",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:269",
                    "decimals": 1,
                    "format": "binBps",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "$$hashKey": "object:270",
                    "decimals": 1,
                    "format": "binBps",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": 1,
            "description": "TX \u0442\u0440\u0430\u0444\u0438\u043a \u043f\u043e \u0432\u0441\u0435\u043c\u0443 \u043f\u043e\u0434\u0443. \u041a\u043e\u043b-\u0432\u043e \u043f\u0440\u0438\u043d\u044f\u0442\u044b\u0445 \u0431\u0430\u0439\u0442 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443.",
            "fieldConfig": {
                "defaults": {
                    "unit": "binBps"
                },
                "overrides": []
            },
            "fill": 5,
            "fillGradient": 0,
            "gridPos": {
                "h": 9,
                "w": 12,
                "x": 12,
                "y": 59
            },
            "hiddenSeries": false,
            "id": 78,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": false,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": true,
            "steppedLine": false,
            "targets": [
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "A",
                    "target": "aliasByTags(grep(alias(movingAverage(perSecond(groupByTags(seriesByTag('name=~prometheus_remote_write.container_network_(receive|transmit)_bytes_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}'), 'sum', 'container', 'pod')), '5min'), 'Average'), '$function'), 1, 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "B",
                    "target": "aliasByTags(grep(alias(movingMax(perSecond(groupByTags(seriesByTag('name=~prometheus_remote_write.container_network_(receive|transmit)_bytes_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}'), 'sum', 'container', 'pod')), '5min'), 'Max'), '$function'), 1, 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(movingMin(perSecond(groupByTags(seriesByTag('name=~prometheus_remote_write.container_network_(receive|transmit)_bytes_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}'), 'sum', 'container', 'pod')), '5min'), 'Min'), '$function'), 1, 'pod')",
                    "textEditor": false
                },
                {
                    "hide": false,
                    "refCount": 0,
                    "refId": "D",
                    "target": "aliasByTags(groupByTags(consolidateBy(perSecond(seriesByTag('name=prometheus_remote_write.container_network_transmit_bytes_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '$function'), 'sum', 'container', 'pod'), 1, 'cluster', 'pod')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 0,
                    "refId": "E",
                    "target": "aliasByTags(groupByTags(consolidateBy(perSecond(seriesByTag('name=prometheus_remote_write.container_network_receive_bytes_total', 'namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}')), '$function'), 'sum', 'container', 'pod'), 1, 'pod')",
                    "textEditor": false
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Network TX",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:269",
                    "decimals": 1,
                    "format": "binBps",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "$$hashKey": "object:270",
                    "decimals": 1,
                    "format": "binBps",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "datasource": "carbon-short",
            "description": "\u0412\u0440\u0435\u043c\u044f \u0441\u0442\u0430\u0440\u0442\u0430 \u043f\u043e\u0434\u0430",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "custom": {
                        "align": "center",
                        "displayMode": "color-background-solid",
                        "filterable": true
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "semi-dark-red",
                                "value": null
                            },
                            {
                                "color": "#EAB839",
                                "value": 3600
                            },
                            {
                                "color": "semi-dark-green",
                                "value": 86400
                            }
                        ]
                    },
                    "unit": "dateTimeAsSystem"
                },
                "overrides": [
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "pod"
                        },
                        "properties": [
                            {
                                "id": "custom.displayMode",
                                "value": "auto"
                            }
                        ]
                    }
                ]
            },
            "gridPos": {
                "h": 7,
                "w": 12,
                "x": 0,
                "y": 68
            },
            "id": 83,
            "options": {
                "showHeader": true,
                "sortBy": [
                    {
                        "desc": false,
                        "displayName": "Pod started date"
                    }
                ]
            },
            "pluginVersion": "8.2.3",
            "repeat": null,
            "targets": [
                {
                    "refId": "A",
                    "target": "sortByName(aliasByTags(groupByTags(scale(seriesByTag('namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.container_start_time_seconds'), 1000), 'min', 'container', 'pod'), 'pod'), true, false)",
                    "textEditor": false
                }
            ],
            "timeFrom": null,
            "timeShift": null,
            "title": "Start Time",
            "transformations": [
                {
                    "id": "reduce",
                    "options": {
                        "includeTimeField": false,
                        "mode": "reduceFields",
                        "reducers": [
                            "lastNotNull"
                        ]
                    }
                },
                {
                    "id": "labelsToFields",
                    "options": {}
                },
                {
                    "id": "merge",
                    "options": {}
                },
                {
                    "id": "organize",
                    "options": {
                        "excludeByName": {
                            "Time": true,
                            "cluster": true,
                            "container": true,
                            "endpoint": true,
                            "image": true,
                            "instance": true,
                            "interval": true,
                            "job": true,
                            "metrics_path": true,
                            "name": true,
                            "namespace": true,
                            "node": true,
                            "pod": false,
                            "service": true
                        },
                        "indexByName": {
                            "Time": 0,
                            "Value": 3,
                            "cluster": 4,
                            "container": 5,
                            "endpoint": 6,
                            "image": 7,
                            "instance": 8,
                            "interval": 9,
                            "job": 10,
                            "metrics_path": 11,
                            "name": 12,
                            "namespace": 13,
                            "node": 14,
                            "pod": 2,
                            "service": 1
                        },
                        "renameByName": {
                            "Value": "Pod started date",
                            "pod": "Pod name"
                        }
                    }
                }
            ],
            "type": "table"
        },
        {
            "datasource": "carbon-short",
            "description": "\u0412\u0440\u0435\u043c\u044f \u0436\u0438\u0437\u043d\u0438 \u043f\u043e\u0434\u0430. \u0416\u0435\u043b\u0442\u044b\u0439 - \u043c\u0435\u043d\u044c\u0448\u0435 1 \u0434\u043d\u044f. \u041a\u0440\u0430\u0441\u043d\u044b\u0439 - \u043c\u0435\u043d\u044c\u0448\u0435 1 \u0447\u0430\u0441\u0430.",
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "custom": {
                        "align": "auto",
                        "displayMode": "color-background-solid",
                        "filterable": true
                    },
                    "mappings": [],
                    "noValue": "N/A",
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "semi-dark-red",
                                "value": null
                            },
                            {
                                "color": "semi-dark-orange",
                                "value": 3610
                            },
                            {
                                "color": "semi-dark-green",
                                "value": 86400
                            }
                        ]
                    },
                    "unit": "dateTimeAsSystem"
                },
                "overrides": [
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "Last *"
                        },
                        "properties": [
                            {
                                "id": "unit",
                                "value": "dateTimeFromNow"
                            }
                        ]
                    },
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "pod"
                        },
                        "properties": [
                            {
                                "id": "custom.displayMode",
                                "value": "auto"
                            }
                        ]
                    }
                ]
            },
            "gridPos": {
                "h": 7,
                "w": 12,
                "x": 12,
                "y": 68
            },
            "id": 84,
            "options": {
                "showHeader": true,
                "sortBy": [
                    {
                        "desc": true,
                        "displayName": "Pod started ago"
                    }
                ]
            },
            "pluginVersion": "8.2.3",
            "targets": [
                {
                    "refId": "A",
                    "target": "sortByName(groupByTags(scale(seriesByTag('namespace=$namespace', 'pod=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.container_start_time_seconds'), 1000), 'min', 'container', 'pod'), true, false)",
                    "textEditor": false
                }
            ],
            "timeFrom": null,
            "timeShift": null,
            "title": "Uptime",
            "transformations": [
                {
                    "id": "reduce",
                    "options": {
                        "labelsToFields": true,
                        "reducers": [
                            "lastNotNull"
                        ]
                    }
                },
                {
                    "id": "labelsToFields",
                    "options": {}
                },
                {
                    "id": "organize",
                    "options": {
                        "excludeByName": {
                            "Field": true,
                            "cluster": true,
                            "container": true,
                            "endpoint": true,
                            "image": true,
                            "instance": true,
                            "interval": true,
                            "job": true,
                            "metrics_path": true,
                            "name": true,
                            "namespace": true,
                            "node": true,
                            "pod": false,
                            "service": true
                        },
                        "indexByName": {},
                        "renameByName": {
                            "Last *": "Pod started ago",
                            "pod": "Pod name"
                        }
                    }
                }
            ],
            "type": "table"
        },
        {
            "collapsed": false,
            "datasource": "Tagged",
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 75
            },
            "id": 27,
            "panels": [],
            "title": "QUEUED MESSAGES",
            "type": "row"
        },
        {
            "aliasColors": {},
            "bars": false,
            "cacheTimeout": null,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": 1,
            "description": "Total number of ready messages ready to be delivered to consumers.\n\nAim to keep this value as low as possible. RabbitMQ behaves best when messages are flowing through it. It's OK for publishers to occasionally outpace consumers, but the expectation is that consumers will eventually process all ready messages.\n\nIf this metric keeps increasing, your system will eventually run out of memory and/or disk space. Consider using TTL or Queue Length Limit to prevent unbounded message growth.\n\n* [Queues](https://www.rabbitmq.com/queues.html)\n* [Consumers](https://www.rabbitmq.com/consumers.html)\n* [Queue Length Limit](https://www.rabbitmq.com/maxlength.html)\n* [Time-To-Live and Expiration](https://www.rabbitmq.com/ttl.html)",
            "fieldConfig": {
                "defaults": {
                    "links": [],
                    "unit": "short"
                },
                "overrides": []
            },
            "fill": 10,
            "fillGradient": 0,
            "gridPos": {
                "h": 5,
                "w": 12,
                "x": 0,
                "y": 76
            },
            "hiddenSeries": false,
            "id": 9,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": false,
                "max": true,
                "min": true,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "connected",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [
                {
                    "$$hashKey": "object:232",
                    "alias": "Total",
                    "fill": 0,
                    "stack": false
                }
            ],
            "spaceLength": 10,
            "stack": true,
            "steppedLine": false,
            "targets": [
                {
                    "expr": "sum(rabbitmq_queue_messages_ready * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 1,
                    "refId": "A",
                    "target": "aliasByTags(grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_queue_messages_ready', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Average'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "sum(rabbitmq_queue_messages_ready * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 1,
                    "refId": "B",
                    "target": "aliasByTags(grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_queue_messages_ready', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Max'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "sum(rabbitmq_queue_messages_ready * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 1,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_queue_messages_ready', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Min'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "hide": true,
                    "refCount": 1,
                    "refId": "D",
                    "target": "alias(groupByTags(#A, 'sum', ''), 'Total', false)",
                    "targetFull": "alias(groupByTags(aliasByTags(grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_queue_messages_ready', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Average'), '$function'), 'pod_name'), 'sum', ''), 'Total', false)"
                },
                {
                    "expr": "sum(rabbitmq_queue_messages_ready * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 1,
                    "refId": "E",
                    "target": "aliasByTags(keepLastValue(consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_queue_messages_ready', 'pod_name=~${rabbitmq_cluster:regex}'), '$function'), 2), 'cluster', 'pod_name')",
                    "textEditor": false
                },
                {
                    "hide": false,
                    "refCount": 1,
                    "refId": "F",
                    "target": "alias(groupByTags(#E, 'sum', ''), 'Total', false)",
                    "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_queue_messages_ready', 'pod_name=~${rabbitmq_cluster:regex}'), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Messages ready to be delivered to consumers",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:5628",
                    "decimals": 1,
                    "format": "short",
                    "label": "",
                    "logBase": 1,
                    "max": null,
                    "min": "0",
                    "show": true
                },
                {
                    "$$hashKey": "object:5629",
                    "decimals": 1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {},
            "bars": false,
            "cacheTimeout": null,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": 1,
            "description": "The total number of messages that are either in-flight to consumers, currently being processed by consumers or simply waiting for the consumer acknowledgements to be processed by the queue. Until the queue processes the message acknowledgement, the message will remain unacknowledged.\n\n* [Queues](https://www.rabbitmq.com/queues.html)\n* [Confirms and Acknowledgements](https://www.rabbitmq.com/confirms.html)\n* [Consumer Prefetch](https://www.rabbitmq.com/consumer-prefetch.html)",
            "fieldConfig": {
                "defaults": {
                    "links": [],
                    "unit": "short"
                },
                "overrides": []
            },
            "fill": 10,
            "fillGradient": 0,
            "gridPos": {
                "h": 5,
                "w": 12,
                "x": 12,
                "y": 76
            },
            "hiddenSeries": false,
            "id": 19,
            "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": false,
                "max": true,
                "min": true,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "connected",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [
                {
                    "$$hashKey": "object:3104",
                    "alias": "Total",
                    "fill": 0,
                    "stack": false
                }
            ],
            "spaceLength": 10,
            "stack": true,
            "steppedLine": false,
            "targets": [
                {
                    "expr": "sum(rabbitmq_queue_messages_unacked * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 1,
                    "refId": "A",
                    "target": "aliasByTags(grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_queue_messages_unacked', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Average'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "sum(rabbitmq_queue_messages_unacked * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 1,
                    "refId": "B",
                    "target": "aliasByTags(grep(alias(movingMax(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_queue_messages_unacked', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Max'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "sum(rabbitmq_queue_messages_unacked * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": true,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 1,
                    "refId": "C",
                    "target": "aliasByTags(grep(alias(movingMin(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_queue_messages_unacked', 'pod_name=~${rabbitmq_cluster:regex}'), '5min'), 'Min'), '$function'), 'pod_name')",
                    "textEditor": false
                },
                {
                    "expr": "sum(rabbitmq_queue_messages_unacked * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                    "format": "time_series",
                    "hide": false,
                    "instant": false,
                    "intervalFactor": 1,
                    "legendFormat": "{{rabbitmq_node}}",
                    "refCount": 1,
                    "refId": "D",
                    "target": "aliasByTags(keepLastValue(consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_queue_messages_unacked', 'pod_name=~${rabbitmq_cluster:regex}'), '$function'), 2), 'cluster', 'pod_name')",
                    "textEditor": false
                },
                {
                    "hide": false,
                    "refCount": 0,
                    "refId": "E",
                    "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                    "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(seriesByTag('namespace=$namespace', 'name=prometheus_remote_write.rabbitmq_queue_messages_unacked', 'pod_name=~${rabbitmq_cluster:regex}'), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": null,
            "title": "Messages pending consumer acknowledgement",
            "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:5431",
                    "decimals": 1,
                    "format": "short",
                    "label": "",
                    "logBase": 1,
                    "max": null,
                    "min": "0",
                    "show": true
                },
                {
                    "$$hashKey": "object:5432",
                    "decimals": 1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "collapsed": true,
            "datasource": "Tagged",
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 81
            },
            "id": 11,
            "panels": [
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The incoming message rate before any routing rules are applied.\n\nIf this value is lower than the number of messages published to queues, it may indicate that some messages are delivered to more than one queue.\n\nIf this value is higher than the number of messages published to queues, messages cannot be routed and will either be dropped or returned to publishers.\n\n* [Publishers](https://www.rabbitmq.com/publishers.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 0,
                        "y": 31
                    },
                    "hiddenSeries": false,
                    "id": 13,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:242",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        },
                        {
                            "$$hashKey": "object:247"
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_published_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 0,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_published_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_published_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 0,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_published_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_published_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 0,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_published_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "D",
                            "target": "alias(groupByTags(#E, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_published_total')), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_published_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": -1,
                            "refId": "E",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_published_total')), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Messages published / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:5230",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:5231",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of messages confirmed by the broker to publishers. Publishers must opt-in to receive message confirmations.\n\nIf this metric is consistently at zero it may suggest that publisher confirms are not used by clients. The safety of published messages is likely to be at risk.\n\n* [Publisher Confirms](https://www.rabbitmq.com/confirms.html#publisher-confirms)\n* [Publisher Confirms and Data Safety](https://www.rabbitmq.com/publishers.html#data-safety)\n* [When Will Published Messages Be Confirmed by the Broker?](https://www.rabbitmq.com/confirms.html#when-publishes-are-confirmed)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 12,
                        "y": 31
                    },
                    "hiddenSeries": false,
                    "id": 18,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:3297",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_confirmed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_confirmed_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_confirmed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_confirmed_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_confirmed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_confirmed_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_confirmed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_confirmed_total')), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_confirmed_total')), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Messages confirmed to publishers / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:5033",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:5034",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of messages received from publishers and successfully routed to the master queue replicas.\n\n* [Queues](https://www.rabbitmq.com/queues.html)\n* [Publishers](https://www.rabbitmq.com/publishers.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 0,
                        "y": 36
                    },
                    "hiddenSeries": false,
                    "id": 61,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:3486",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_queue_messages_published_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_published_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_queue_messages_published_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_published_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_queue_messages_published_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_published_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_queue_messages_published_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_published_total')), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_published_total')), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Messages routed to queues / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:4836",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:4837",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of messages received from publishers that have publisher confirms enabled and the broker has not confirmed yet.\n\n* [Publishers](https://www.rabbitmq.com/publishers.html)\n* [Confirms and Acknowledgements](https://www.rabbitmq.com/confirms.html)\n* [When Will Published Messages Be Confirmed by the Broker?](https://www.rabbitmq.com/confirms.html#when-publishes-are-confirmed)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 12,
                        "y": 36
                    },
                    "hiddenSeries": false,
                    "id": 12,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:2019",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_unconfirmed[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unconfirmed'), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_unconfirmed[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unconfirmed'), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_unconfirmed[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unconfirmed'), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_unconfirmed[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unconfirmed'), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unconfirmed'), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Messages unconfirmed to publishers",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:4639",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:4640",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of messages that cannot be routed and are dropped. \n\nAny value above zero means message loss and likely suggests a routing problem on the publisher end.\n\n* [Unroutable Message Handling](https://www.rabbitmq.com/publishers.html#unroutable)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 0,
                        "y": 41
                    },
                    "hiddenSeries": false,
                    "id": 34,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:3952",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_unroutable_dropped_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unroutable_dropped_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_unroutable_dropped_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unroutable_dropped_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_unroutable_dropped_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unroutable_dropped_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_unroutable_dropped_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unroutable_dropped_total')), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unroutable_dropped_total')), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [
                        {
                            "$$hashKey": "object:4464",
                            "colorMode": "critical",
                            "fill": false,
                            "line": true,
                            "op": "lt",
                            "value": 0,
                            "yaxis": "left"
                        }
                    ],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Unroutable messages dropped / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:4436",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:4437",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of messages that cannot be routed and are returned back to publishers.\n\nSustained values above zero may indicate a routing problem on the publisher end.\n\n* [Unroutable Message Handling](https://www.rabbitmq.com/publishers.html#unroutable)\n* [When Will Published Messages Be Confirmed by the Broker?](https://www.rabbitmq.com/confirms.html#when-publishes-are-confirmed)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 12,
                        "y": 41
                    },
                    "hiddenSeries": false,
                    "id": 16,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:4051",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_unroutable_returned_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unroutable_returned_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_unroutable_returned_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unroutable_returned_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_unroutable_returned_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unroutable_returned_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_unroutable_returned_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unroutable_returned_total')), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_unroutable_returned_total')), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [
                        {
                            "$$hashKey": "object:4324",
                            "colorMode": "critical",
                            "fill": false,
                            "line": true,
                            "op": "lt",
                            "value": 0,
                            "yaxis": "left"
                        }
                    ],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Unroutable messages returned to publishers / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:4296",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:4297",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                }
            ],
            "title": "INCOMING MESSAGES",
            "type": "row"
        },
        {
            "collapsed": true,
            "datasource": "Tagged",
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 82
            },
            "id": 29,
            "panels": [
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "\u0421\u0443\u043c\u043c\u0430 delivered_total, delivered_ack_total.\nThe rate of messages delivered to consumers. It includes messages that have been redelivered.\n\nThis metric does not include messages that have been fetched by consumers using `basic.get` (consumed by polling).\n\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 0,
                        "y": 47
                    },
                    "hiddenSeries": false,
                    "id": 14,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": true,
                        "max": false,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "sort": "current",
                        "sortDesc": false,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:4187",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(\n  (rate(rabbitmq_channel_messages_delivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n  (rate(rabbitmq_channel_messages_delivered_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})\n) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(groupByTags(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=~prometheus_remote_write.rabbitmq_channel_messages_(delivered_total|delivered_ack_total)')), '5min'), 'sum', 'namespace', 'pod_name'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(\n  (rate(rabbitmq_channel_messages_delivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n  (rate(rabbitmq_channel_messages_delivered_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})\n) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(groupByTags(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=~prometheus_remote_write.rabbitmq_channel_messages_(delivered_total|delivered_ack_total)')), '5min'), 'sum', 'namespace', 'pod_name'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(\n  (rate(rabbitmq_channel_messages_delivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n  (rate(rabbitmq_channel_messages_delivered_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})\n) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(groupByTags(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=~prometheus_remote_write.rabbitmq_channel_messages_(delivered_total|delivered_ack_total)')), '5min'), 'sum', 'namespace', 'pod_name'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(\n  (rate(rabbitmq_channel_messages_delivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n  (rate(rabbitmq_channel_messages_delivered_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})\n) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(groupByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=~prometheus_remote_write.rabbitmq_channel_messages_(delivered_total|delivered_ack_total)')), '$function'), 2), 'sum', 'namespace', 'pod_name'), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(groupByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=~prometheus_remote_write.rabbitmq_channel_messages_(delivered_total|delivered_ack_total)')), '$function'), 2), 'sum', 'namespace', 'pod_name'), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Messages delivered / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:2740",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:2741",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of messages that have been redelivered to consumers. It includes messages that have been requeued automatically and redelivered due to channel exceptions or connection closures.\n\nHaving some redeliveries is expected, but if this metric is consistently non-zero, it is worth investigating why.\n\n* [Negative Acknowledgement and Requeuing of Deliveries](https://www.rabbitmq.com/confirms.html#consumer-nacks-requeue)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 12,
                        "y": 47
                    },
                    "hiddenSeries": false,
                    "id": 15,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:4279",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_redelivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_redelivered_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_redelivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_redelivered_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_redelivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_redelivered_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_redelivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_redelivered_total')), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_redelivered_total')), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Messages redelivered / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:2937",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:2938",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of message deliveries to consumers that use manual acknowledgement mode.\n\nWhen this mode is used, RabbitMQ waits for consumers to acknowledge messages before more messages can be delivered.\n\nThis is the safest way of consuming messages.\n\n* [Consumer Acknowledgements](https://www.rabbitmq.com/confirms.html)\n* [Consumer Prefetch](https://www.rabbitmq.com/consumer-prefetch.html)\n* [Consumer Acknowledgement Modes, Prefetch and Throughput](https://www.rabbitmq.com/confirms.html#channel-qos-prefetch-throughput)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 0,
                        "y": 52
                    },
                    "hiddenSeries": false,
                    "id": 20,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:4371",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_delivered_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_delivered_ack_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_delivered_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_delivered_ack_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_delivered_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_delivered_ack_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_delivered_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_delivered_ack_total')), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_delivered_ack_total')), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Messages delivered with manual ack / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:3146",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:3147",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of message deliveries to consumers that use automatic acknowledgement mode.\n\nWhen this mode is used, RabbitMQ does not wait for consumers to acknowledge message deliveries.\n\nThis mode is fire-and-forget and does not offer any delivery safety guarantees. It tends to provide higher throughput and it may lead to consumer overload  and higher consumer memory usage.\n\n* [Consumer Acknowledgement Modes, Prefetch and Throughput](https://www.rabbitmq.com/confirms.html#channel-qos-prefetch-throughput)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": []
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 12,
                        "y": 52
                    },
                    "hiddenSeries": false,
                    "id": 21,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:4463",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_delivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_delivered_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_delivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_delivered_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_delivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_delivered_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_delivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(consolidateBy(keepLastValue(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_delivered_total')), 2), '$function'), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(consolidateBy(keepLastValue(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_delivered_total')), 2), '$function'), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Messages delivered auto ack / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:3343",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:3344",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of message acknowledgements coming from consumers that use manual acknowledgement mode.\n\n* [Consumer Acknowledgements](https://www.rabbitmq.com/confirms.html)\n* [Consumer Prefetch](https://www.rabbitmq.com/consumer-prefetch.html)\n* [Consumer Acknowledgement Modes, Prefetch and Throughput](https://www.rabbitmq.com/confirms.html#channel-qos-prefetch-throughput)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 0,
                        "y": 57
                    },
                    "hiddenSeries": false,
                    "id": 22,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:4560",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_acked_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_acked_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_acked_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_acked_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_acked_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_acked_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_messages_acked_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_acked_total')), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_messages_acked_total')), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Messages acknowledged / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:3734",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:3735",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of messages delivered to polling consumers that use automatic acknowledgement mode.\n\nThe use of polling consumers is highly inefficient and therefore strongly discouraged.\n\n* [Fetching individual messages](https://www.rabbitmq.com/consumers.html#fetching)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 12,
                        "y": 57
                    },
                    "hiddenSeries": false,
                    "id": 24,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:4657",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channel_get_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_get_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_get_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_get_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_total')), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_total')), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [
                        {
                            "$$hashKey": "object:3900",
                            "colorMode": "critical",
                            "fill": false,
                            "line": true,
                            "op": "lt",
                            "value": 0,
                            "yaxis": "left"
                        }
                    ],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Polling operations with auto ack / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:3872",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:3873",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of polling consumer operations that yield no result.\n\nAny value above zero means that RabbitMQ resources are wasted by polling consumers.\n\nCompare this metric to the other polling consumer metrics to see the inefficiency rate.\n\nThe use of polling consumers is highly inefficient and therefore strongly discouraged.\n\n* [Fetching individual messages](https://www.rabbitmq.com/consumers.html#fetching)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 0,
                        "y": 62
                    },
                    "hiddenSeries": false,
                    "id": 25,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "hideEmpty": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:4754",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channel_get_empty_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_empty_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_get_empty_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_empty_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_get_empty_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_empty_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_get_empty_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_empty_total')), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_empty_total')), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [
                        {
                            "$$hashKey": "object:4040",
                            "colorMode": "critical",
                            "fill": false,
                            "line": true,
                            "op": "lt",
                            "value": 0,
                            "yaxis": "left"
                        }
                    ],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Polling operations that yield no result / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:4012",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:4013",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of messages delivered to polling consumers that use manual acknowledgement mode.\n\nThe use of polling consumers is highly inefficient and therefore strongly discouraged.\n\n* [Fetching individual messages](https://www.rabbitmq.com/consumers.html#fetching)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 12,
                        "y": 62
                    },
                    "hiddenSeries": false,
                    "id": 23,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:4851",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channel_get_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_ack_total')), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_get_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_ack_total')), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_get_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_ack_total')), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channel_get_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_ack_total')), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channel_get_ack_total')), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [
                        {
                            "$$hashKey": "object:4180",
                            "colorMode": "critical",
                            "fill": false,
                            "line": true,
                            "op": "lt",
                            "value": 0,
                            "yaxis": "left"
                        }
                    ],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Polling operations with manual ack / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:4152",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:4153",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                }
            ],
            "title": "OUTGOING MESSAGES",
            "type": "row"
        },
        {
            "collapsed": true,
            "datasource": "Tagged",
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 83
            },
            "id": 53,
            "panels": [
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "Total number of queue masters  per node. \n\nThis metric makes it easy to see sub-optimal queue distribution in a cluster.\n\n* [Queue Masters, Data Locality](https://www.rabbitmq.com/ha.html#master-migration-data-locality)\n* [Queues](https://www.rabbitmq.com/queues.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 0,
                        "y": 33
                    },
                    "hiddenSeries": false,
                    "id": 57,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "null as zero",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:4943",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "rabbitmq_queues * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "interval": "",
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues'), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "rabbitmq_queues * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "interval": "",
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMin(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues'), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "rabbitmq_queues * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "interval": "",
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMax(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues'), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "rabbitmq_queues * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "interval": "",
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues'), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues'), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Total queues",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:2539",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:2540",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of queue declarations performed by clients.\n\nLow sustained values above zero are to be expected. High rates may be indicative of queue churn or high rates of connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [Queues](https://www.rabbitmq.com/queues.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 4,
                        "x": 12,
                        "y": 33
                    },
                    "hiddenSeries": false,
                    "id": 58,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": true,
                        "max": true,
                        "min": true,
                        "rightSide": false,
                        "show": false,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:5033",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_queues_declared_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_declared_total')), '5min'), 'Average'), '$function'), 'namespace', 'pod_name')"
                        },
                        {
                            "expr": "sum(rate(rabbitmq_queues_declared_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_declared_total')), '5min'), 'Max'), '$function'), 'namespace', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_queues_declared_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_declared_total')), '5min'), 'Min'), '$function'), 'namespace', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_queues_declared_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_declared_total')), '$function'), 2), 'namespace', 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_declared_total')), '$function'), 2), 'namespace', 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Queues declared / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:2330",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:2331",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of new queues created (as opposed to redeclarations).\n\nLow sustained values above zero are to be expected. High rates may be indicative of queue churn or high rates of connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [Queues](https://www.rabbitmq.com/queues.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 4,
                        "x": 16,
                        "y": 33
                    },
                    "hiddenSeries": false,
                    "id": 60,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": true,
                        "max": true,
                        "min": true,
                        "rightSide": false,
                        "show": false,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:5123",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_queues_created_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_created_total')), '5min'), 'Average'), '$function'), 'namespace', 'pod_name')"
                        },
                        {
                            "expr": "sum(rate(rabbitmq_queues_created_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_created_total')), '5min'), 'Max'), '$function'), 'namespace', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_queues_created_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_created_total')), '5min'), 'Min'), '$function'), 'namespace', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_queues_created_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_created_total')), '$function'), 2), 'namespace', 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_created_total')), '$function'), 2), 'namespace', 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Queues created / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:2121",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:2122",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of queues deleted.\n\nLow sustained values above zero are to be expected. High rates may be indicative of queue churn or high rates of connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [Queues](https://www.rabbitmq.com/queues.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 4,
                        "x": 20,
                        "y": 33
                    },
                    "hiddenSeries": false,
                    "id": 59,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": true,
                        "max": true,
                        "min": true,
                        "rightSide": false,
                        "show": false,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:5213",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_queues_deleted_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_deleted_total')), '5min'), 'Average'), '$function'), 'namespace', 'pod_name')"
                        },
                        {
                            "expr": "sum(rate(rabbitmq_queues_deleted_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_deleted_total')), '5min'), 'Max'), '$function'), 'namespace', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_queues_deleted_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_deleted_total')), '5min'), 'Min'), '$function'), 'namespace', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_queues_deleted_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_deleted_total')), '$function'), 2), 'namespace', 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_queues_deleted_total')), '$function'), 2), 'namespace', 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Queues deleted / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:1912",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:1913",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                }
            ],
            "title": "QUEUES",
            "type": "row"
        },
        {
            "collapsed": true,
            "datasource": "Tagged",
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 84
            },
            "id": 51,
            "panels": [
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "Total number of channels on all currently opened connections.\n\nIf this metric grows monotonically it is highly likely a channel leak in one of the applications. Confirm channel leaks by using the _Channels opened_ and _Channels closed_ metrics.\n\n* [Channel Leak](https://www.rabbitmq.com/channels.html#channel-leaks)\n* [Channels](https://www.rabbitmq.com/channels.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 12,
                        "x": 0,
                        "y": 34
                    },
                    "hiddenSeries": false,
                    "id": 54,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": false,
                        "max": true,
                        "min": true,
                        "rightSide": true,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:5305",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "rabbitmq_channels * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels'), '5min'), 'Average'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "rabbitmq_channels * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels'), '5min'), 'Max'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "rabbitmq_channels * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels'), '5min'), 'Min'), '$function'), 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "rabbitmq_channels * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels'), '$function'), 2), 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels'), '$function'), 2), 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Total channels",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:1115",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:1116",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "decimals": 1,
                    "description": "The rate of new channels opened by applications across all connections. Channels are expected to be long-lived.\n\nLow sustained values above zero are to be expected. High rates may be indicative of channel churn or mass connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [High Channel Churn](https://www.rabbitmq.com/channels.html#high-channel-churn)\n* [Channels](https://www.rabbitmq.com/channels.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": [],
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 6,
                        "x": 12,
                        "y": 34
                    },
                    "hiddenSeries": false,
                    "id": 55,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": true,
                        "max": true,
                        "min": true,
                        "rightSide": false,
                        "show": false,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:5395",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channels_opened_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels_opened_total')), '5min'), 'Average'), '$function'), 'namespace', 'pod_name')"
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channels_opened_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels_opened_total')), '5min'), 'Max'), '$function'), 'namespace', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channels_opened_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels_opened_total')), '5min'), 'Min'), '$function'), 'namespace', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channels_opened_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels_opened_total')), '$function'), 2), 'namespace', 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels_opened_total')), '$function'), 2), 'namespace', 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Channels opened / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:1312",
                            "decimals": 1,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:1313",
                            "decimals": 1,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "cacheTimeout": null,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "carbon-short",
                    "description": "The rate of channels closed by applications across all connections. Channels are expected to be long-lived.\n\nLow sustained values above zero are to be expected. High rates may be indicative of channel churn or mass connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [High Channel Churn](https://www.rabbitmq.com/channels.html#high-channel-churn)\n* [Channels](https://www.rabbitmq.com/channels.html)",
                    "fieldConfig": {
                        "defaults": {
                            "links": []
                        },
                        "overrides": []
                    },
                    "fill": 10,
                    "fillGradient": 0,
                    "gridPos": {
                        "h": 5,
                        "w": 6,
                        "x": 18,
                        "y": 34
                    },
                    "hiddenSeries": false,
                    "id": 56,
                    "legend": {
                        "alignAsTable": true,
                        "avg": false,
                        "current": true,
                        "max": true,
                        "min": true,
                        "rightSide": false,
                        "show": false,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "8.2.3",
                    "pointradius": 2,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "$$hashKey": "object:5485",
                            "alias": "Total",
                            "fill": 0,
                            "stack": false
                        }
                    ],
                    "spaceLength": 10,
                    "stack": true,
                    "steppedLine": false,
                    "targets": [
                        {
                            "expr": "sum(rate(rabbitmq_channels_closed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "A",
                            "target": "aliasByTags(grep(alias(movingAverage(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels_closed_total')), '5min'), 'Average'), '$function'), 'namespace', 'pod_name')"
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channels_closed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "B",
                            "target": "aliasByTags(grep(alias(movingMax(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels_closed_total')), '5min'), 'Max'), '$function'), 'namespace', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channels_closed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": true,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "C",
                            "target": "aliasByTags(grep(alias(movingMin(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels_closed_total')), '5min'), 'Min'), '$function'), 'namespace', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "expr": "sum(rate(rabbitmq_channels_closed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
                            "format": "time_series",
                            "hide": false,
                            "instant": false,
                            "intervalFactor": 1,
                            "legendFormat": "{{rabbitmq_node}}",
                            "refCount": 1,
                            "refId": "D",
                            "target": "aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels_closed_total')), '$function'), 2), 'namespace', 'cluster', 'pod_name')",
                            "textEditor": false
                        },
                        {
                            "hide": false,
                            "refCount": 0,
                            "refId": "E",
                            "target": "alias(groupByTags(#D, 'sum', ''), 'Total', false)",
                            "targetFull": "alias(groupByTags(aliasByTags(keepLastValue(consolidateBy(perSecond(seriesByTag('namespace=$namespace', 'pod_name=~${rabbitmq_cluster:regex}', 'name=prometheus_remote_write.rabbitmq_channels_closed_total')), '$function'), 2), 'namespace', 'cluster', 'pod_name'), 'sum', ''), 'Total', false)"
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeRegions": [],
                    "timeShift": null,
                    "title": "Channels closed / s",
                    "tooltip": {
                        "shared": true,
                        "sort": 2,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "$$hashKey": "object:1521",
                            "decimals": 3,
                            "format": "short",
                            "label": "",
                            "logBase": 1,
                            "max": null,
                            "min": "0",
                            "show": true
                        },
                        {
                            "$$hashKey": "object:1522",
                            "decimals": 3,
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false,
                        "alignLevel": null
                    }
                }
            ],
            "title": "CHANNELS",
            "type": "row"
        }
    ],
    "refresh": "",
    "schemaVersion": 31,
    "style": "dark",
    "tags": [
        "rabbitmq-prometheus",
        "rabbit",
        "service",
        "k8s"
    ],
    "templating": {
        "list": [
            {
                "allValue": null,
                "current": {
                    "selected": false,
                    "text": "eventmq",
                    "value": "eventmq"
                },
                "datasource": "carbon-short",
                "definition": "tag_values(namespace,name=prometheus_remote_write.rabbitmq_queue_messages_ready)",
                "description": null,
                "error": null,
                "hide": 0,
                "includeAll": false,
                "label": "Namespace",
                "multi": false,
                "name": "namespace",
                "options": [],
                "query": "tag_values(namespace,name=prometheus_remote_write.rabbitmq_queue_messages_ready)",
                "refresh": 1,
                "regex": "",
                "skipUrlSync": false,
                "sort": 1,
                "tagValuesQuery": "",
                "tagsQuery": "",
                "type": "query",
                "useTags": false
            },
            {
                "allValue": null,
                "current": {
                    "selected": false,
                    "text": "web",
                    "value": "web"
                },
                "datasource": "carbon-short",
                "definition": "tag_values(app_kubernetes_io_component,name=prometheus_remote_write.rabbitmq_queue_messages_ready)",
                "description": null,
                "error": null,
                "hide": 0,
                "includeAll": false,
                "label": "Type",
                "multi": false,
                "name": "Type_pod",
                "options": [],
                "query": "tag_values(app_kubernetes_io_component,name=prometheus_remote_write.rabbitmq_queue_messages_ready)",
                "refresh": 1,
                "regex": "",
                "skipUrlSync": false,
                "sort": 0,
                "tagValuesQuery": "",
                "tagsQuery": "",
                "type": "query",
                "useTags": false
            },
            {
                "allValue": null,
                "current": {
                    "selected": true,
                    "text": [
                        "All"
                    ],
                    "value": [
                        "$__all"
                    ]
                },
                "datasource": "carbon-short",
                "definition": "tag_values(pod_name,namespace=~${namespace:regex},app_kubernetes_io_component=~${Type_pod:regex})",
                "description": null,
                "error": null,
                "hide": 0,
                "includeAll": true,
                "label": "RabbitMQ Cluster",
                "multi": true,
                "name": "rabbitmq_cluster",
                "options": [],
                "query": "tag_values(pod_name,namespace=~${namespace:regex},app_kubernetes_io_component=~${Type_pod:regex})",
                "refresh": 1,
                "regex": "",
                "skipUrlSync": false,
                "sort": 1,
                "tagValuesQuery": "",
                "tagsQuery": "",
                "type": "query",
                "useTags": false
            },
            {
                "allValue": null,
                "current": {
                    "selected": false,
                    "text": "avg",
                    "value": "avg"
                },
                "description": "\u0423\u043f\u043b\u043e\u0442\u043d\u0435\u043d\u0438\u0435 \u0442\u043e\u0447\u0435\u043a (ConsolidateBy) \u043f\u043e \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u043c\u0443 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0443 (avg, min \u0438\u043b\u0438 max). \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u044d\u0442\u043e\u0442 \"\u0445\u0430\u043a\" \u0447\u0442\u043e\u0431\u044b \u0431\u043e\u043b\u0435\u0435 \u044f\u0432\u043d\u043e \u0432\u0438\u0434\u0435\u0442\u044c \u043f\u0438\u043a\u0438. \u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043a \u043b\u0438\u043d\u0435\u0439\u043d\u044b\u043c \u0433\u0440\u0430\u0444\u0438\u043a\u0430\u043c.",
                "error": null,
                "hide": 0,
                "includeAll": false,
                "label": "Function",
                "multi": false,
                "name": "function",
                "options": [
                    {
                        "selected": true,
                        "text": "avg",
                        "value": "avg"
                    },
                    {
                        "selected": false,
                        "text": "max",
                        "value": "max"
                    },
                    {
                        "selected": false,
                        "text": "min",
                        "value": "min"
                    }
                ],
                "query": "avg,max,min",
                "queryValue": "",
                "skipUrlSync": false,
                "type": "custom"
            }
        ]
    },
    "time": {
        "from": "now-5m",
        "to": "now"
    },
    "timepicker": {
        "refresh_intervals": [
            "15s",
            "30s",
            "1m",
            "5m",
            "10m"
        ],
        "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
        ]
    },
    "timezone": "",
    "title": "K8s Rabbitmq - Overview",
    "uid": "Kn5xm-gZk",
    "version": 142
}