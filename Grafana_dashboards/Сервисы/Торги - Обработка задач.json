{
    "annotations": {
        "list": [
            {
                "builtIn": 1,
                "datasource": "-- Grafana --",
                "enable": true,
                "hide": true,
                "iconColor": "rgba(0, 211, 255, 1)",
                "limit": 100,
                "name": "Annotations & Alerts",
                "showIn": 0,
                "target": {
                    "limit": 100,
                    "matchAny": false,
                    "tags": [],
                    "type": "dashboard"
                },
                "type": "dashboard"
            }
        ]
    },
    "description": "\u041e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439: \u0421\u043e\u0440\u043e\u043a\u0438\u043d \u0418.\u0410. (\u042d\u043a\u0441\u043f\u043b\u0443\u0430\u0442\u0430\u0446\u0438\u044f)",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "gnetId": null,
    "graphTooltip": 1,
    "id": 692,
    "iteration": 1636977051690,
    "links": [],
    "liveNow": false,
    "panels": [
        {
            "aliasColors": {
                "cancelled": "#ba43a9",
                "created": "#f9e2d2",
                "delayed": "#e5ac0e",
                "delayed_line": "#c15c17",
                "done": "rgb(62, 170, 27)",
                "error": "#bf1b00",
                "error_line": "#bf1b00",
                "repeated": "#0a50a1"
            },
            "bars": true,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": null,
            "description": "\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u043a\u043e\u043b-\u0432\u043e \u0437\u0430\u0434\u0430\u0447, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0440\u043e\u0431\u043e\u0442 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0438\u043b\u0438 \u0437\u0430 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0439 \n\u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u043e\u0431\u043e\u0442 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0441 \u0437\u0430\u0434\u0430\u0447\u0430\u043c\u0438",
            "fieldConfig": {
                "defaults": {
                    "links": []
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 13,
                "w": 24,
                "x": 0,
                "y": 0
            },
            "hiddenSeries": false,
            "id": 8,
            "legend": {
                "alignAsTable": false,
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
            },
            "lines": false,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null as zero",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 5,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [
                {
                    "$$hashKey": "object:20083",
                    "alias": "created",
                    "stack": false,
                    "transform": "negative-Y"
                },
                {
                    "$$hashKey": "object:20084",
                    "alias": "collector_done",
                    "color": "#73BF69"
                },
                {
                    "$$hashKey": "object:1601",
                    "alias": "collector_error",
                    "color": "#F2495C"
                }
            ],
            "spaceLength": 10,
            "stack": true,
            "steppedLine": false,
            "targets": [
                {
                    "refCount": 0,
                    "refId": "A",
                    "target": "alias(cumulative(sum(summarize(seriesByTag('name=tender-robots.RobotQTask', 'contur=${stand:regex}', 'robot=~${robots:regex}', 'kind=~${kinds:regex}$', 'sub_metric=created'), '$step', 'sum', false))), 'created')",
                    "textEditor": false
                },
                {
                    "refCount": 0,
                    "refId": "B",
                    "target": "alias(cumulative(sum(summarize(seriesByTag('name=tender-robots.RobotQTask', 'contur=${stand:regex}', 'robot=~${robots:regex}', 'kind=~${kinds:regex}$', 'sub_metric=delayed'), '$step', 'sum', false))), 'delayed')",
                    "textEditor": false
                },
                {
                    "refCount": 0,
                    "refId": "C",
                    "target": "alias(cumulative(sum(summarize(seriesByTag('name=tender-robots.RobotQTask', 'contur=${stand:regex}', 'robot=~${robots:regex}', 'kind=~${kinds:regex}$', 'sub_metric=error'), '$step', 'sum', false))), 'error')",
                    "textEditor": false
                },
                {
                    "hide": false,
                    "refCount": 0,
                    "refId": "I",
                    "target": "alias(cumulative(sum(summarize(seriesByTag('name=tender-robots.RobotQTask', 'contur=${stand:regex}', 'robot=~${robots:regex}', 'kind=~${kinds:regex}$', 'sub_metric=c_error'), '$step', 'sum', false))), 'collector_error')",
                    "textEditor": false
                },
                {
                    "refCount": 0,
                    "refId": "G",
                    "target": "alias(cumulative(sum(summarize(seriesByTag('name=tender-robots.RobotQTask', 'contur=${stand:regex}', 'robot=~${robots:regex}', 'kind=~${kinds:regex}$', 'sub_metric=warning'), '$step', 'sum', false))), 'warning')",
                    "textEditor": false
                },
                {
                    "refCount": 0,
                    "refId": "D",
                    "target": "alias(cumulative(sum(summarize(seriesByTag('name=tender-robots.RobotQTask', 'contur=${stand:regex}', 'robot=~${robots:regex}', 'kind=~${kinds:regex}$', 'sub_metric=cancelled'), '$step', 'sum', false))), 'cancelled')",
                    "textEditor": false
                },
                {
                    "refCount": 0,
                    "refId": "E",
                    "target": "alias(cumulative(sum(summarize(seriesByTag('name=tender-robots.RobotQTask', 'contur=${stand:regex}', 'robot=~${robots:regex}', 'kind=~${kinds:regex}$', 'sub_metric=repeated'), '$step', 'sum', false))), 'repeated')",
                    "textEditor": false
                },
                {
                    "refCount": 0,
                    "refId": "F",
                    "target": "alias(cumulative(sum(summarize(seriesByTag('name=tender-robots.RobotQTask', 'contur=${stand:regex}', 'robot=~${robots:regex}', 'kind=~${kinds:regex}$', 'sub_metric=done'), '$step', 'sum', false))), 'done')",
                    "textEditor": false
                },
                {
                    "hide": false,
                    "refCount": 0,
                    "refId": "H",
                    "target": "alias(cumulative(sum(summarize(seriesByTag('name=tender-robots.RobotQTask', 'contur=${stand:regex}', 'robot=~${robots:regex}', 'kind=~${kinds:regex}$', 'sub_metric=c_done'), '$step', 'sum', false))), 'collector_done')",
                    "textEditor": false
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": "10m",
            "title": "\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438",
            "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
            },
            "transparent": true,
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:20099",
                    "decimals": -1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "$$hashKey": "object:20100",
                    "decimals": null,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "$$hashKey": "object:20101",
                    "aliasColors": {
                        "delayed_line": "#e0752d",
                        "error_line": "#890f02"
                    },
                    "bars": false,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": "$ds",
                    "fill": 1,
                    "gridPos": {
                        "h": 9,
                        "w": 24,
                        "x": 0,
                        "y": 13
                    },
                    "id": 10,
                    "legend": {
                        "alignAsTable": false,
                        "avg": false,
                        "current": false,
                        "hideEmpty": false,
                        "hideZero": false,
                        "max": false,
                        "min": false,
                        "show": true,
                        "total": false,
                        "values": false
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "null",
                    "percentage": false,
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "alias": "error_line",
                            "fill": 0,
                            "linewidth": 7,
                            "zindex": 1
                        }
                    ],
                    "spaceLength": 10,
                    "stack": false,
                    "steppedLine": true,
                    "targets": [
                        {
                            "database": "monitoring",
                            "dateColDataType": "date",
                            "dateLoading": false,
                            "dateTimeColDataType": "event_datetime",
                            "dateTimeType": "DATETIME",
                            "datetimeLoading": false,
                            "format": "time_series",
                            "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
                            "interval": "$step",
                            "intervalFactor": 1,
                            "query": "SELECT\n    $timeSeries as t,\n    count() as error_line\nFROM $table\nWHERE\n    $timeFilter\n    and kind in ($kinds)\n    and state = 'error'\nGROUP BY t\nORDER BY t",
                            "rawQuery": "SELECT     (intDiv(toUInt32(event_datetime), 86400) * 86400) * 1000 as t,     count() as error_line FROM monitoring.qtask WHERE     date >= toDate(1574576696) AND event_datetime >= toDateTime(1574576696)     and kind in ('ALROSA.Tender','Absgroup.Tender','Aeroflot.Tender','Agat.Tender','AgregatorEAT.Tender','Agrokomplex.Tender','Ahstep.Tender','AkdLoader.TenderTask','AlrosaAnons.Tender','Apk.Tender','ArchiveExtractor.Archive','Asv.Tender','Atctrade.Tender','AzsGazprom.Tender','B2BCenterLoader.BankruptTender','B2BCenterLoader.HiddenTenderTask','B2BCenterLoader.TenderTask','BanckrotZakazrf.Tender','Bashneft.Tender','Bepspb.Tender','Bgk.Tender','Bidzaar.Tender','Bngf.Tender','Centerr.Tender','ChebarkulskayaPtica.Tender','Chtpz.AutoTestTask','Chtpz.Tender','Comita.Tender','Cpc.Tender','CpcSmp.Tender','Cprzd.Tender','DocumentLoader.Document','Dom.Tender','Domru.Tender','Dsk1.Tender','Eportkz.Tender','Erg.Tender','EshopPTZ.Tender','EshopRZD.Tender','Estp.AutoTestTask','Estp.TenderTask','EtpAgro.Tender','EtpGazpromBankLoader.DeleteXml','EtpGazpromBankLoader.TenderGaz','EtpGazpromBankLoader.TenderGpb','EtpMicex.TenderTask223New','EtpMicex.TenderTask44','EtpMicex.TenderTask615Auction','EtpMicex.TenderTask615PreSelection','EtpRfLoader.Tender','EtpUgra.Tender','Ets24.Tender','EtsTenderKz.Tender','EuroTransStroy.Tender','Evraz.Tender','Fabrikant.Tender','Federal1','Fedresurs.Tender','FedresursPlan.LoadFedresursData','FedresursPlan.Tender','FedresursPlanFinalize.Tender','Fisp.Tender','Fpkinvest.Tender','Gazneft.Tender','GazpromNeft.Tender','Geotek.Tender','GosGpb.Tender615','Gpb.Tender','GrandStroi.Tender','Gzspb.Tender','Icetrade.Tender','Ingrad.Tender','Irao.Tender','IrkutskOil.Tender','IrkutskOil.TenderArchive','IshimAgro.Tender','Kaluga2.Tender','Kamaz.Tender','Karakan.Tender','Kazakhstan.Tender','KimIrao.Tender','Kluchik.Tender','KramzTrade.Tender','KzGroup.Tender','Lenreg.Tender','LotOnline.Property','LotOnline.Tender','Lsr2.Tender','Lukoil.Tender','MEts.Tender','MTS.Tender','MVideo.Tender','MarketOtc.Tender','Maxi.Tender','Megafon.Tender','Metholding.Tender','Mfur.Tender','Mic.Tender','Mmk.Tender','Moloko.Tender','MosReg.Tender.Purchase','MrskVolgi.AutoTestTask','MrskVolgi.Tender','Ms1.Tender','Murmansk.Tender','Murmorp.Tender','Mx3.Tender','Nadloc.Tender','Nefaz.Tender','Nefteavtomatika.Tender','Neftisa.Tender','Netis.Tender','Nornickel.Tender','Novatek.Tender','Oaobhm.Tender','Oilb2bcs.Tender','OmskCarbonGroup.Tender','Onlinecontract.Tender','Orelstroy.Tender','OtcLoader.CustomerTenderTask','OtcLoader.TenderTask','PSFond.Tender','Phosagro.Tender','Pic.Tender','PlanZakupkiFTPLoader.CompletePlan','PlanZakupkiFTPLoader.DownloadPlan223','PlanZakupkiFTPLoader.DownloadPlan44','PlanZakupkiFTPLoader.MonitoringExecution','PlanZakupkiFTPLoader.Plan223','PlanZakupkiFTPLoader.Plan44','Polus.Tender','Pptk.Tender','Protek.Tender','Quadra.Tender','RB2B.Tender','RHtorg.Tender','Ravis.Tender','Rfp.Tender','Rimera.Tender','Rosatom.Tender','Roseltorg.Tender','Rosneft.Tender','Rosseti.Tender','Rostech.Tender','Rostech.TenderMP','Rtrs.Tender','RtsSales.Tender','RtsTender.TenderTask','RtsTender.TenderTask44','RtsTender.TenderTask615','RtsZmo.Tender','Rusal.Tender','Russneft.Tender','Rzd.EtzpTender','Rzd.RzdTender','Safmar.Tender','Salavat.Tender','Salym.Tender','Samolet.Tender','Samregion.Tender','Samruk.Tender','SberB2B.Tender','SberbankAst.Tender','SberbankAstUtp.Tender','SbuAzot.Tender','Severstal.Tender','SibPrime.Tender','Sibagro.Tender','Sibintek.Tender','Sibserv.Tender','SiburLoader.TenderTask','Sitno.Tender','Slavneft.Tender','Smolensk.Tender','Sng.Tender','Southural.Purchase','Southural.Sale','SpbMetro.Tender','Sportmaster.Tender','Sstorg.Tender','StroyTorgi.Tender','Suek.Tender','TSM.AutoTestTask','TSM.Tender','Talan.Tender','Tambov.Tender','Tatar.Tender','TatneftApi.Tender','TatneftLoader.AutoTestTask','Tektorg.Tender-Gazprom','Tektorg.Tender-Rosneft','Tektorg.TenderTektorg','TenderPro.Tender','TenderTatneft.Tender','Tenderit.Tender','Tmk.Tender','TorgiGovRu-Tender','Tpta.Tender','Transneft.Tender','Tula.Tender','UGMK.Tender','UmzVrn.Tender','Unipro.Tender','Unistroyrf.Tender','Uralhim.Tender','Uralkalyi.Tender','Utz.Tender','VolgaTransneft.Tender','Vologda.Tender','Vts.Tender','X5.Tender','Yarregion.Tender','Zakazrf.TenderTask223','Zakazrf.TenderTask44','Zakazrf.TenderTaskBP','Zakazrf.TenderTaskBase615CAPR','Zakazrf.TenderTaskBase615PO','Zakazrf.TenderTaskSales','ZakupkiGovRuFTP223Loader.Archive','ZakupkiGovRuFTP223Loader.Tender','ZakupkiGovRuFTP223Loader.Tender223Http','ZakupkiGovRuFTPLoader.Complaint','ZakupkiGovRuFTPLoader.ComplaintArchive','ZakupkiKomos.Tender','ZakupkiMos.Tender','ZakupkiRu.Tender','ZakupkiUralkali.Tender','Zgr223http.CustomCollector','Zgr223http.ReScan','Zgr44FTP.DeleteCancelProtocol','Zgr44FTP.DeleteTenderXml','Zgr44FTP.Download44Archive','Zgr44FTP.Download44ContractArchive','Zgr44FTP.DownloadContragent44','Zgr44FTP.DownloadOkpd2','Zgr44FTP.Tender','Zgr44FTP.TenderHttp','Zgr44http.ReScan','ZgrHttp44.ReScanTender','ZgrHttp44.Task44FZ','ZgrHttp44.TenderRequest','Zmk.Tender','setonline.TenderTask','test','\u0417\u0430\u0433\u0440\u0443\u0437\u0447\u0438\u043a\u0422\u043e\u0440\u0433\u043e\u0432223.Tender')     and state = 'error' GROUP BY t ORDER BY t",
                            "refId": "B",
                            "round": "0s",
                            "table": "qtask",
                            "tableLoading": false
                        },
                        {
                            "database": "monitoring",
                            "dateColDataType": "date",
                            "dateLoading": false,
                            "dateTimeColDataType": "event_datetime",
                            "dateTimeType": "DATETIME",
                            "datetimeLoading": false,
                            "format": "time_series",
                            "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
                            "interval": "$step",
                            "intervalFactor": 1,
                            "query": "SELECT\n    $timeSeries as t,\n    count() as delayed_line\nFROM $table\nWHERE\n    $timeFilter\n    and kind in ($kinds)\n    and state = 'delayed'\nGROUP BY t\nORDER BY t",
                            "rawQuery": "SELECT     (intDiv(toUInt32(event_datetime), 86400) * 86400) * 1000 as t,     count() as delayed_line FROM monitoring.qtask WHERE     date >= toDate(1574576696) AND event_datetime >= toDateTime(1574576696)     and kind in ('ALROSA.Tender','Absgroup.Tender','Aeroflot.Tender','Agat.Tender','AgregatorEAT.Tender','Agrokomplex.Tender','Ahstep.Tender','AkdLoader.TenderTask','AlrosaAnons.Tender','Apk.Tender','ArchiveExtractor.Archive','Asv.Tender','Atctrade.Tender','AzsGazprom.Tender','B2BCenterLoader.BankruptTender','B2BCenterLoader.HiddenTenderTask','B2BCenterLoader.TenderTask','BanckrotZakazrf.Tender','Bashneft.Tender','Bepspb.Tender','Bgk.Tender','Bidzaar.Tender','Bngf.Tender','Centerr.Tender','ChebarkulskayaPtica.Tender','Chtpz.AutoTestTask','Chtpz.Tender','Comita.Tender','Cpc.Tender','CpcSmp.Tender','Cprzd.Tender','DocumentLoader.Document','Dom.Tender','Domru.Tender','Dsk1.Tender','Eportkz.Tender','Erg.Tender','EshopPTZ.Tender','EshopRZD.Tender','Estp.AutoTestTask','Estp.TenderTask','EtpAgro.Tender','EtpGazpromBankLoader.DeleteXml','EtpGazpromBankLoader.TenderGaz','EtpGazpromBankLoader.TenderGpb','EtpMicex.TenderTask223New','EtpMicex.TenderTask44','EtpMicex.TenderTask615Auction','EtpMicex.TenderTask615PreSelection','EtpRfLoader.Tender','EtpUgra.Tender','Ets24.Tender','EtsTenderKz.Tender','EuroTransStroy.Tender','Evraz.Tender','Fabrikant.Tender','Federal1','Fedresurs.Tender','FedresursPlan.LoadFedresursData','FedresursPlan.Tender','FedresursPlanFinalize.Tender','Fisp.Tender','Fpkinvest.Tender','Gazneft.Tender','GazpromNeft.Tender','Geotek.Tender','GosGpb.Tender615','Gpb.Tender','GrandStroi.Tender','Gzspb.Tender','Icetrade.Tender','Ingrad.Tender','Irao.Tender','IrkutskOil.Tender','IrkutskOil.TenderArchive','IshimAgro.Tender','Kaluga2.Tender','Kamaz.Tender','Karakan.Tender','Kazakhstan.Tender','KimIrao.Tender','Kluchik.Tender','KramzTrade.Tender','KzGroup.Tender','Lenreg.Tender','LotOnline.Property','LotOnline.Tender','Lsr2.Tender','Lukoil.Tender','MEts.Tender','MTS.Tender','MVideo.Tender','MarketOtc.Tender','Maxi.Tender','Megafon.Tender','Metholding.Tender','Mfur.Tender','Mic.Tender','Mmk.Tender','Moloko.Tender','MosReg.Tender.Purchase','MrskVolgi.AutoTestTask','MrskVolgi.Tender','Ms1.Tender','Murmansk.Tender','Murmorp.Tender','Mx3.Tender','Nadloc.Tender','Nefaz.Tender','Nefteavtomatika.Tender','Neftisa.Tender','Netis.Tender','Nornickel.Tender','Novatek.Tender','Oaobhm.Tender','Oilb2bcs.Tender','OmskCarbonGroup.Tender','Onlinecontract.Tender','Orelstroy.Tender','OtcLoader.CustomerTenderTask','OtcLoader.TenderTask','PSFond.Tender','Phosagro.Tender','Pic.Tender','PlanZakupkiFTPLoader.CompletePlan','PlanZakupkiFTPLoader.DownloadPlan223','PlanZakupkiFTPLoader.DownloadPlan44','PlanZakupkiFTPLoader.MonitoringExecution','PlanZakupkiFTPLoader.Plan223','PlanZakupkiFTPLoader.Plan44','Polus.Tender','Pptk.Tender','Protek.Tender','Quadra.Tender','RB2B.Tender','RHtorg.Tender','Ravis.Tender','Rfp.Tender','Rimera.Tender','Rosatom.Tender','Roseltorg.Tender','Rosneft.Tender','Rosseti.Tender','Rostech.Tender','Rostech.TenderMP','Rtrs.Tender','RtsSales.Tender','RtsTender.TenderTask','RtsTender.TenderTask44','RtsTender.TenderTask615','RtsZmo.Tender','Rusal.Tender','Russneft.Tender','Rzd.EtzpTender','Rzd.RzdTender','Safmar.Tender','Salavat.Tender','Salym.Tender','Samolet.Tender','Samregion.Tender','Samruk.Tender','SberB2B.Tender','SberbankAst.Tender','SberbankAstUtp.Tender','SbuAzot.Tender','Severstal.Tender','SibPrime.Tender','Sibagro.Tender','Sibintek.Tender','Sibserv.Tender','SiburLoader.TenderTask','Sitno.Tender','Slavneft.Tender','Smolensk.Tender','Sng.Tender','Southural.Purchase','Southural.Sale','SpbMetro.Tender','Sportmaster.Tender','Sstorg.Tender','StroyTorgi.Tender','Suek.Tender','TSM.AutoTestTask','TSM.Tender','Talan.Tender','Tambov.Tender','Tatar.Tender','TatneftApi.Tender','TatneftLoader.AutoTestTask','Tektorg.Tender-Gazprom','Tektorg.Tender-Rosneft','Tektorg.TenderTektorg','TenderPro.Tender','TenderTatneft.Tender','Tenderit.Tender','Tmk.Tender','TorgiGovRu-Tender','Tpta.Tender','Transneft.Tender','Tula.Tender','UGMK.Tender','UmzVrn.Tender','Unipro.Tender','Unistroyrf.Tender','Uralhim.Tender','Uralkalyi.Tender','Utz.Tender','VolgaTransneft.Tender','Vologda.Tender','Vts.Tender','X5.Tender','Yarregion.Tender','Zakazrf.TenderTask223','Zakazrf.TenderTask44','Zakazrf.TenderTaskBP','Zakazrf.TenderTaskBase615CAPR','Zakazrf.TenderTaskBase615PO','Zakazrf.TenderTaskSales','ZakupkiGovRuFTP223Loader.Archive','ZakupkiGovRuFTP223Loader.Tender','ZakupkiGovRuFTP223Loader.Tender223Http','ZakupkiGovRuFTPLoader.Complaint','ZakupkiGovRuFTPLoader.ComplaintArchive','ZakupkiKomos.Tender','ZakupkiMos.Tender','ZakupkiRu.Tender','ZakupkiUralkali.Tender','Zgr223http.CustomCollector','Zgr223http.ReScan','Zgr44FTP.DeleteCancelProtocol','Zgr44FTP.DeleteTenderXml','Zgr44FTP.Download44Archive','Zgr44FTP.Download44ContractArchive','Zgr44FTP.DownloadContragent44','Zgr44FTP.DownloadOkpd2','Zgr44FTP.Tender','Zgr44FTP.TenderHttp','Zgr44http.ReScan','ZgrHttp44.ReScanTender','ZgrHttp44.Task44FZ','ZgrHttp44.TenderRequest','Zmk.Tender','setonline.TenderTask','test','\u0417\u0430\u0433\u0440\u0443\u0437\u0447\u0438\u043a\u0422\u043e\u0440\u0433\u043e\u0432223.Tender')     and state = 'delayed' GROUP BY t ORDER BY t",
                            "refId": "A",
                            "round": "0s",
                            "table": "qtask",
                            "tableLoading": false
                        }
                    ],
                    "thresholds": [],
                    "timeFrom": null,
                    "timeShift": null,
                    "title": "\u0422\u0440\u0435\u043d\u0434 \u043e\u0448\u0438\u0431\u043e\u043a",
                    "tooltip": {
                        "shared": true,
                        "sort": 0,
                        "value_type": "individual"
                    },
                    "type": "graph",
                    "xaxis": {
                        "buckets": null,
                        "mode": "time",
                        "name": null,
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        },
                        {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                        }
                    ]
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        },
        {
            "aliasColors": {
                "delayed_line": "#e0752d",
                "error_line": "#890f02"
            },
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": "carbon-short",
            "decimals": null,
            "description": "\u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 \u043d\u0430\u0434 \u0437\u0430\u0434\u0430\u0447\u0430\u043c\u0438",
            "fieldConfig": {
                "defaults": {
                    "links": []
                },
                "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
                "h": 9,
                "w": 24,
                "x": 0,
                "y": 13
            },
            "hiddenSeries": false,
            "id": 10,
            "legend": {
                "alignAsTable": false,
                "avg": false,
                "current": false,
                "hideEmpty": false,
                "hideZero": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "options": {
                "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "8.2.3",
            "pointradius": 5,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [
                {
                    "$$hashKey": "object:755",
                    "alias": "error_line",
                    "fill": 0,
                    "linewidth": 7,
                    "zindex": 1
                },
                {
                    "$$hashKey": "object:756",
                    "alias": "warning_line",
                    "color": "#FF9830",
                    "fill": 0,
                    "linewidth": 5
                },
                {
                    "$$hashKey": "object:957",
                    "alias": "collector_error_line",
                    "color": "#F2495C"
                }
            ],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": true,
            "targets": [
                {
                    "refCount": 0,
                    "refId": "A",
                    "target": "alias(cumulative(sum(summarize(seriesByTag('name=tender-robots.RobotQTask', 'contur=${stand:regex}', 'robot=~${robots:regex}', 'kind=~${kinds:regex}$', 'sub_metric=error'), '$step', 'sum', false))), 'error_line')",
                    "textEditor": false
                },
                {
                    "refCount": 0,
                    "refId": "B",
                    "target": "alias(cumulative(sum(summarize(seriesByTag('name=tender-robots.RobotQTask', 'contur=${stand:regex}', 'robot=~${robots:regex}', 'kind=~${kinds:regex}$', 'sub_metric=delayed'), '$step', 'sum', false))), 'delayed_line')",
                    "textEditor": false
                },
                {
                    "refCount": 0,
                    "refId": "C",
                    "target": "alias(cumulative(sum(summarize(seriesByTag('name=tender-robots.RobotQTask', 'contur=${stand:regex}', 'robot=~${robots:regex}', 'kind=~${kinds:regex}$', 'sub_metric=warning'), '$step', 'sum', false))), 'warning_line')",
                    "textEditor": false
                },
                {
                    "hide": false,
                    "refCount": 0,
                    "refId": "D",
                    "target": "alias(cumulative(sum(summarize(seriesByTag('name=tender-robots.RobotQTask', 'contur=${stand:regex}', 'robot=~${robots:regex}', 'kind=~${kinds:regex}$', 'sub_metric=c_error'), '$step', 'sum', false))), 'collector_error_line')",
                    "textEditor": false
                }
            ],
            "thresholds": [],
            "timeFrom": null,
            "timeRegions": [],
            "timeShift": "10m",
            "title": "\u0422\u0440\u0435\u043d\u0434 \u043e\u0448\u0438\u0431\u043e\u043a",
            "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
            },
            "yaxes": [
                {
                    "$$hashKey": "object:215",
                    "decimals": -1,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                },
                {
                    "$$hashKey": "object:216",
                    "decimals": null,
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                }
            ],
            "yaxis": {
                "align": false,
                "alignLevel": null
            }
        }
    ],
    "refresh": "",
    "schemaVersion": 31,
    "style": "dark",
    "tags": [
        "scripts",
        "service",
        "tender"
    ],
    "templating": {
        "list": [
            {
                "current": {
                    "selected": false,
                    "text": "prod",
                    "value": "prod"
                },
                "description": null,
                "error": null,
                "hide": 2,
                "label": null,
                "name": "stand",
                "query": "prod",
                "skipUrlSync": false,
                "type": "constant"
            },
            {
                "allValue": "*",
                "current": {
                    "text": "All",
                    "value": [
                        "$__all"
                    ]
                },
                "datasource": "carbon-short",
                "definition": "tag_values(robot, name=tender-robots.RobotQTask, contur=$stand)",
                "description": null,
                "error": null,
                "hide": 0,
                "includeAll": true,
                "label": "\u0420\u043e\u0431\u043e\u0442\u044b",
                "multi": true,
                "name": "robots",
                "options": [],
                "query": "tag_values(robot, name=tender-robots.RobotQTask, contur=$stand)",
                "refresh": 1,
                "regex": "",
                "skipUrlSync": false,
                "sort": 5,
                "tagValuesQuery": "",
                "tagsQuery": "",
                "type": "query",
                "useTags": false
            },
            {
                "allValue": ".*",
                "current": {
                    "text": "All",
                    "value": [
                        "$__all"
                    ]
                },
                "datasource": "carbon-short",
                "definition": "tag_values(kind, name=tender-robots.RobotQTask, robot=~${robots:regex}, contur=$stand)",
                "description": null,
                "error": null,
                "hide": 0,
                "includeAll": true,
                "label": "\u0412\u0438\u0434\u044b Qtask'\u043e\u0432",
                "multi": true,
                "name": "kinds",
                "options": [],
                "query": "tag_values(kind, name=tender-robots.RobotQTask, robot=~${robots:regex}, contur=$stand)",
                "refresh": 1,
                "regex": "",
                "skipUrlSync": false,
                "sort": 5,
                "tagValuesQuery": "",
                "tagsQuery": "",
                "type": "query",
                "useTags": false
            },
            {
                "auto": false,
                "auto_count": 30,
                "auto_min": "10s",
                "current": {
                    "selected": false,
                    "text": "1m",
                    "value": "1m"
                },
                "description": null,
                "error": null,
                "hide": 0,
                "label": "\u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e",
                "name": "step",
                "options": [
                    {
                        "selected": true,
                        "text": "1m",
                        "value": "1m"
                    },
                    {
                        "selected": false,
                        "text": "10m",
                        "value": "10m"
                    },
                    {
                        "selected": false,
                        "text": "30m",
                        "value": "30m"
                    },
                    {
                        "selected": false,
                        "text": "1h",
                        "value": "1h"
                    },
                    {
                        "selected": false,
                        "text": "6h",
                        "value": "6h"
                    },
                    {
                        "selected": false,
                        "text": "12h",
                        "value": "12h"
                    },
                    {
                        "selected": false,
                        "text": "1d",
                        "value": "1d"
                    }
                ],
                "query": "1m,10m,30m,1h,6h,12h,1d",
                "refresh": 2,
                "skipUrlSync": false,
                "type": "interval"
            }
        ]
    },
    "time": {
        "from": "now-3h",
        "to": "now"
    },
    "timepicker": {
        "refresh_intervals": [
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
        ],
        "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
        ]
    },
    "timezone": "",
    "title": "\u0422\u043e\u0440\u0433\u0438 - \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0437\u0430\u0434\u0430\u0447",
    "uid": "mftn8BWWz",
    "version": 75
}